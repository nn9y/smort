NUMERAL: [(NUMERAL  Int), (NUMERAL  Real), (NUMERAL  Int)]
-: [(- Int Int), (- Int Int Int), (- Real Real), (- Real Real Real), (- Int Int), (- Int Int Int), (- Real Real), (- Real Real Real)]
+: [(+ Int Int Int), (+ Real Real Real), (+ Int Int Int), (+ Real Real Real)]
*: [(* Int Int Int), (* Real Real Real), (* Int Int Int), (* Real Real Real)]
div: [(div Int Int Int), (div Int Int Int)]
mod: [(mod Int Int Int), (mod Int Int Int)]
abs: [(abs Int Int), (abs Int Int)]
<=: [(<= Int Int Bool), (<= Real Real Bool), (<= Int Int Bool), (<= Real Real Bool)]
<: [(< Int Int Bool), (< Real Real Bool), (< Int Int Bool), (< Real Real Bool)]
>=: [(>= Int Int Bool), (>= Real Real Bool), (>= Int Int Bool), (>= Real Real Bool)]
>: [(> Int Int Bool), (> Real Real Bool), (> Int Int Bool), (> Real Real Bool)]
divisible: [(divisible Int Bool), (divisible Int Bool)]
B_VALUE: [(B_VALUE  Bool), (B_VALUE  Bool), (B_VALUE  Bool), (B_VALUE  Bool), (B_VALUE  Bool), (B_VALUE  Bool), (B_VALUE  Bool), (B_VALUE  Bool)]
not: [(not Bool Bool), (not Bool Bool), (not Bool Bool), (not Bool Bool), (not Bool Bool), (not Bool Bool), (not Bool Bool), (not Bool Bool)]
=>: [(=> Bool Bool Bool), (=> Bool Bool Bool), (=> Bool Bool Bool), (=> Bool Bool Bool), (=> Bool Bool Bool), (=> Bool Bool Bool), (=> Bool Bool Bool), (=> Bool Bool Bool)]
and: [(and Bool Bool Bool), (and Bool Bool Bool), (and Bool Bool Bool), (and Bool Bool Bool), (and Bool Bool Bool), (and Bool Bool Bool), (and Bool Bool Bool), (and Bool Bool Bool)]
or: [(or Bool Bool Bool), (or Bool Bool Bool), (or Bool Bool Bool), (or Bool Bool Bool), (or Bool Bool Bool), (or Bool Bool Bool), (or Bool Bool Bool), (or Bool Bool Bool)]
xor: [(xor Bool Bool Bool), (xor Bool Bool Bool), (xor Bool Bool Bool), (xor Bool Bool Bool), (xor Bool Bool Bool), (xor Bool Bool Bool), (xor Bool Bool Bool), (xor Bool Bool Bool)]
=: [(par (A) (= A A Bool)), (= Bool Bool Bool), (= Int Int Bool), (= Bool Bool Bool), (par (A) (= A A Bool)), (= Bool Bool Bool), (= Real Real Bool), (= Bool Bool Bool), (par (A) (= A A Bool)), (= Bool Bool Bool), (= Int Int Bool), (= Bool Bool Bool), (par (A) (= A A Bool)), (= Bool Bool Bool), (= Real Real Bool), (= Bool Bool Bool), (= Int Int Bool), (= Bool Bool Bool), (= Real Real Bool), (= Int Int Bool), (= Bool Bool Bool), (= Real Real Bool), (par (A) (= A A Bool)), (= Bool Bool Bool), (= BitVec BitVec Bool), (= Bool Bool Bool), (par (A) (= A A Bool)), (= Bool Bool Bool), (= RoundingMode RoundingMode Bool), (= Real Real Bool), (= BitVec BitVec Bool), (= FloatingPoint FloatingPoint Bool), (= Float16 Float16 Bool), (= Float32 Float32 Bool), (= Float64 Float64 Bool), (= Float128 Float128 Bool), (= Bool Bool Bool), (par (A) (= A A Bool)), (= Bool Bool Bool), (= String String Bool), (= RegLan RegLan Bool), (= Int Int Bool), (= Bool Bool Bool), (par (A) (= A A Bool)), (= Bool Bool Bool)]
distinct: [(par (A) (distinct A A Bool)), (distinct Bool Bool Bool), (distinct Int Int Bool), (distinct Bool Bool Bool), (par (A) (distinct A A Bool)), (distinct Bool Bool Bool), (distinct Real Real Bool), (distinct Bool Bool Bool), (par (A) (distinct A A Bool)), (distinct Bool Bool Bool), (distinct Int Int Bool), (distinct Bool Bool Bool), (par (A) (distinct A A Bool)), (distinct Bool Bool Bool), (distinct Real Real Bool), (distinct Bool Bool Bool), (distinct Int Int Bool), (distinct Bool Bool Bool), (distinct Real Real Bool), (distinct Int Int Bool), (distinct Bool Bool Bool), (distinct Real Real Bool), (par (A) (distinct A A Bool)), (distinct Bool Bool Bool), (distinct BitVec BitVec Bool), (distinct Bool Bool Bool), (par (A) (distinct A A Bool)), (distinct Bool Bool Bool), (distinct RoundingMode RoundingMode Bool), (distinct Real Real Bool), (distinct BitVec BitVec Bool), (distinct FloatingPoint FloatingPoint Bool), (distinct Float16 Float16 Bool), (distinct Float32 Float32 Bool), (distinct Float64 Float64 Bool), (distinct Float128 Float128 Bool), (distinct Bool Bool Bool), (par (A) (distinct A A Bool)), (distinct Bool Bool Bool), (distinct String String Bool), (distinct RegLan RegLan Bool), (distinct Int Int Bool), (distinct Bool Bool Bool), (par (A) (distinct A A Bool)), (distinct Bool Bool Bool)]
ite: [(par (A) (ite Bool A A A)), (ite Bool Bool Bool Bool), (ite Bool Int Int Int), (ite Bool Bool Bool Bool), (par (A) (ite Bool A A A)), (ite Bool Bool Bool Bool), (ite Bool Real Real Real), (ite Bool Bool Bool Bool), (par (A) (ite Bool A A A)), (ite Bool Bool Bool Bool), (ite Bool Int Int Int), (ite Bool Bool Bool Bool), (par (A) (ite Bool A A A)), (ite Bool Bool Bool Bool), (ite Bool Real Real Real), (ite Bool Bool Bool Bool), (ite Bool Int Int Int), (ite Bool Bool Bool Bool), (ite Bool Real Real Real), (ite Bool Int Int Int), (ite Bool Bool Bool Bool), (ite Bool Real Real Real), (par (A) (ite Bool A A A)), (ite Bool Bool Bool Bool), (ite Bool BitVec BitVec BitVec), (ite Bool Bool Bool Bool), (par (A) (ite Bool A A A)), (ite Bool Bool Bool Bool), (ite Bool RoundingMode RoundingMode RoundingMode), (ite Bool Real Real Real), (ite Bool BitVec BitVec BitVec), (ite Bool FloatingPoint FloatingPoint FloatingPoint), (ite Bool Float16 Float16 Float16), (ite Bool Float32 Float32 Float32), (ite Bool Float64 Float64 Float64), (ite Bool Float128 Float128 Float128), (ite Bool Bool Bool Bool), (par (A) (ite Bool A A A)), (ite Bool Bool Bool Bool), (ite Bool String String String), (ite Bool RegLan RegLan RegLan), (ite Bool Int Int Int), (ite Bool Bool Bool Bool), (par (A) (ite Bool A A A)), (ite Bool Bool Bool Bool)]
DECIMAL: [(DECIMAL  Real), (DECIMAL  Real)]
/: [(/ Real Real Real), (/ Real Real Real)]
to_real: [(to_real Int Real)]
to_int: [(to_int Real Int)]
is_int: [(is_int Real Bool)]
BINARY: [(None  BitVec), (None  BitVec)]
HEXADECIMAL: [(None  BitVec), (None  BitVec)]
concat: [(concat BitVec BitVec BitVec)]
extract: [(extract BitVec BitVec)]
bvnot: [(bvnot BitVec BitVec)]
bvneg: [(bvneg BitVec BitVec)]
bvand: [(bvand BitVec BitVec BitVec)]
bvadd: [(bvadd BitVec BitVec BitVec)]
bvmul: [(bvmul BitVec BitVec BitVec)]
bvudiv: [(bvudiv BitVec BitVec BitVec)]
bvurem: [(bvurem BitVec BitVec BitVec)]
bvshl: [(bvshl BitVec BitVec BitVec)]
bvlshr: [(bvlshr BitVec BitVec BitVec)]
bvult: [(bvult BitVec BitVec Bool)]
roundNearestTiesToEven: [(roundNearestTiesToEven  RoundingMode)]
RNE: [(RNE  RoundingMode)]
roundNearestTiesToAway: [(roundNearestTiesToAway  RoundingMode)]
RNA: [(RNA  RoundingMode)]
roundTowardPositive: [(roundTowardPositive  RoundingMode)]
RTP: [(RTP  RoundingMode)]
roundTowardNegative: [(roundTowardNegative  RoundingMode)]
RTN: [(RTN  RoundingMode)]
roundTowardZero: [(roundTowardZero  RoundingMode)]
RTZ: [(RTZ  RoundingMode)]
fp: [(fp BitVec BitVec BitVec FloatingPoint)]
+oo: [(+oo  FloatingPoint)]
-oo: [(-oo  FloatingPoint)]
+zero: [(+zero  FloatingPoint)]
-zero: [(-zero  FloatingPoint)]
NaN: [(NaN  FloatingPoint)]
fp.abs: [(fp.abs FloatingPoint FloatingPoint)]
fp.neg: [(fp.neg FloatingPoint FloatingPoint)]
fp.add: [(fp.add RoundingMode FloatingPoint FloatingPoint FloatingPoint)]
fp.sub: [(fp.sub RoundingMode FloatingPoint FloatingPoint FloatingPoint)]
fp.mul: [(fp.mul RoundingMode FloatingPoint FloatingPoint FloatingPoint)]
fp.div: [(fp.div RoundingMode FloatingPoint FloatingPoint FloatingPoint)]
fp.fma: [(fp.fma RoundingMode FloatingPoint FloatingPoint FloatingPoint FloatingPoint)]
fp.sqrt: [(fp.sqrt RoundingMode FloatingPoint FloatingPoint)]
fp.rem: [(fp.rem FloatingPoint FloatingPoint FloatingPoint)]
fp.roundToIntegral: [(fp.roundToIntegral RoundingMode FloatingPoint FloatingPoint)]
fp.min: [(fp.min FloatingPoint FloatingPoint FloatingPoint)]
fp.max: [(fp.max FloatingPoint FloatingPoint FloatingPoint)]
fp.leq: [(fp.leq FloatingPoint FloatingPoint Bool)]
fp.lt: [(fp.lt FloatingPoint FloatingPoint Bool)]
fp.geq: [(fp.geq FloatingPoint FloatingPoint Bool)]
fp.gt: [(fp.gt FloatingPoint FloatingPoint Bool)]
fp.eq: [(fp.eq FloatingPoint FloatingPoint Bool)]
fp.isNormal: [(fp.isNormal FloatingPoint Bool)]
fp.isSubnormal: [(fp.isSubnormal FloatingPoint Bool)]
fp.isZero: [(fp.isZero FloatingPoint Bool)]
fp.isInfinite: [(fp.isInfinite FloatingPoint Bool)]
fp.isNaN: [(fp.isNaN FloatingPoint Bool)]
fp.isNegative: [(fp.isNegative FloatingPoint Bool)]
fp.isPositive: [(fp.isPositive FloatingPoint Bool)]
to_fp: [(to_fp BitVec FloatingPoint), (to_fp RoundingMode FloatingPoint FloatingPoint), (to_fp RoundingMode Real FloatingPoint), (to_fp RoundingMode BitVec FloatingPoint)]
to_fp_unsigned: [(to_fp_unsigned RoundingMode BitVec FloatingPoint)]
fp.to_ubv: [(fp.to_ubv RoundingMode FloatingPoint BitVec)]
fp.to_sbv: [(fp.to_sbv RoundingMode FloatingPoint BitVec)]
fp.to_real: [(fp.to_real FloatingPoint Real)]
char: [(char  String)]
STRING: [(STRING  String)]
str.++: [(str.++ String String String)]
str.len: [(str.len String Int)]
str.<: [(str.< String String Bool)]
str.to_re: [(str.to_re String RegLan)]
str.in_re: [(str.in_re String RegLan Bool)]
re.none: [(re.none  RegLan)]
re.all: [(re.all  RegLan)]
re.allchar: [(re.allchar  RegLan)]
re.++: [(re.++ RegLan RegLan RegLan)]
re.union: [(re.union RegLan RegLan RegLan)]
re.inter: [(re.inter RegLan RegLan RegLan)]
re.*: [(re.* RegLan RegLan)]
str.<=: [(str.<= String String Bool)]
str.at: [(str.at String Int String)]
str.substr: [(str.substr String Int Int String)]
str.prefixof: [(str.prefixof String String Bool)]
str.suffixof: [(str.suffixof String String Bool)]
str.contains: [(str.contains String String Bool)]
str.indexof: [(str.indexof String String Int Int)]
str.replace: [(str.replace String String String String)]
str.replace_all: [(str.replace_all String String String String)]
str.replace_re: [(str.replace_re String RegLan String String)]
str.replace_re_all: [(str.replace_re_all String RegLan String String)]
re.comp: [(re.comp RegLan RegLan)]
re.diff: [(re.diff RegLan RegLan RegLan)]
re.+: [(re.+ RegLan RegLan)]
re.opt: [(re.opt RegLan RegLan)]
re.range: [(re.range String String RegLan)]
re.^: [(re.^ RegLan RegLan)]
re.loop: [(re.loop RegLan RegLan)]
str.is_digit: [(str.is_digit String Bool)]
str.to_code: [(str.to_code String Int)]
str.from_code: [(str.from_code Int String)]
str.to_int: [(str.to_int String Int)]
str.from_int: [(str.from_int Int String)]
select: [(par (X Y) (select (Array X Y) X Y))]
store: [(par (X Y) (store (Array X Y) X Y (Array X Y)))]
