(set-logic ALL)
(declare-fun seed0_A () Real)
(declare-fun seed0_vsluscore6dollarskuscore2 () Real)
(declare-fun seed0_v1uscore3dollarskuscore2 () Real)
(declare-fun seed0_B () Real)
(declare-fun seed0_ep () Real)
(declare-fun seed0_x1uscore3dollarskuscore1 () Real)
(declare-fun seed0_vsluscore8dollarskuscore0 () Real)
(declare-fun seed0_ts1uscore0 () Real)
(declare-fun seed0_t8uscore0dollarskuscore0 () Real)
(declare-fun seed0_xsluscore8dollarskuscore0 () Real)
(assert (and (forall ((seed0_Q1_ts1uscore0 Real)) (and (and (and (and (and (and (and (and (and (and (or (or (not (<= 0 seed0_Q1_ts1uscore0)) (not (<= seed0_Q1_ts1uscore0 seed0_t8uscore0dollarskuscore0))) (and (>= (+ (* (- seed0_B) seed0_Q1_ts1uscore0) seed0_v1uscore3dollarskuscore2) 0) (<= seed0_Q1_ts1uscore0 seed0_ep))) (>= seed0_t8uscore0dollarskuscore0 0)) (>= seed0_vsluscore8dollarskuscore0 0)) (>= seed0_xsluscore8dollarskuscore0 (+ (+ seed0_x1uscore3dollarskuscore1 (/ (- (* seed0_v1uscore3dollarskuscore2 seed0_v1uscore3dollarskuscore2) (* seed0_vsluscore8dollarskuscore0 seed0_vsluscore8dollarskuscore0)) (* 2 seed0_B))) (* (+ (/ seed0_A seed0_B) 1) (+ (* (/ seed0_A 2) (* seed0_ep seed0_ep)) (* seed0_ep seed0_v1uscore3dollarskuscore2)))))) (>= seed0_v1uscore3dollarskuscore2 0)) (>= seed0_vsluscore6dollarskuscore2 0)) (<= seed0_v1uscore3dollarskuscore2 seed0_vsluscore6dollarskuscore2)) (>= seed0_A 0)) (> seed0_B 0)) (> seed0_ep 0)) (not (>= (+ (* (- seed0_B) seed0_t8uscore0dollarskuscore0) seed0_v1uscore3dollarskuscore2) 0)))) (xor (< (* seed0_x1uscore3dollarskuscore1 seed0_xsluscore8dollarskuscore0) (+ seed0_x1uscore3dollarskuscore1 seed0_ts1uscore0)) (>= (/ seed0_vsluscore6dollarskuscore2 seed0_v1uscore3dollarskuscore2) (- seed0_ts1uscore0 seed0_v1uscore3dollarskuscore2)))))
(check-sat)
(exit)