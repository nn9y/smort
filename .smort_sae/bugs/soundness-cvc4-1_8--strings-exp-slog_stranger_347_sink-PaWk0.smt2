(set-logic ALL)
(declare-const a_random97_0 String)
(declare-fun seed0_x_3 () String)
(declare-fun seed0_epsilon () String)
(declare-fun seed0_literal_4 () String)
(declare-fun seed0_x_5 () String)
(assert (and (and (= seed0_epsilon "") (=> (str.contains (str.++ seed0_epsilon seed0_x_3) (str.++ seed0_epsilon seed0_x_3)) (str.suffixof (str.++ seed0_epsilon seed0_epsilon) (str.++ seed0_epsilon seed0_literal_4)))) (and (and (str.suffixof seed0_x_3 a_random97_0) (str.prefixof seed0_x_3 a_random97_0) (str.suffixof seed0_epsilon a_random97_0) (str.prefixof seed0_epsilon a_random97_0)) (xor (str.<= (str.++ seed0_literal_4 seed0_x_5) (str.++ seed0_x_3 seed0_x_3)) (str.prefixof (str.++ seed0_epsilon seed0_x_5) (str.++ seed0_x_5 seed0_literal_4)))) (and (= seed0_literal_4 "\u{2f}\u{68}\u{65}\u{61}\u{64}\u{65}\u{72}\u{2e}\u{68}\u{74}\u{6d}\u{6c}") (not (str.prefixof (str.++ seed0_literal_4 seed0_literal_4) (str.++ seed0_literal_4 seed0_x_3)))) (and (= seed0_x_5 (str.++ seed0_x_3 seed0_literal_4)) (and (str.<= (str.++ seed0_literal_4 seed0_epsilon) (str.++ seed0_epsilon seed0_literal_4)) (str.<= (str.++ seed0_epsilon seed0_literal_4) (str.++ seed0_literal_4 seed0_x_3)))) (and (str.in_re seed0_x_5 (re.++ (re.* re.allchar ) (re.++ (str.to_re "\u{2f}\u{65}\u{76}\u{69}\u{6c}") (re.* re.allchar )))) (xor (str.<= (str.++ seed0_epsilon seed0_epsilon) (str.++ seed0_literal_4 seed0_epsilon)) (str.<= (str.++ seed0_x_5 seed0_epsilon) (str.++ seed0_x_3 seed0_x_3))))))
(check-sat)
(exit)