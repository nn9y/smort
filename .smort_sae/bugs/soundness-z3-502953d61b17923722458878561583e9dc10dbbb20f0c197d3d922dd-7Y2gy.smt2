(set-logic ALL)
(declare-fun seed0_s () String)
(assert (and (or (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (ite (>= (- (- (- (- (str.len seed0_s) 1) 1) 1) 1) 3) 1 0) 0)) (not (= (ite (>= (- (- (- (- (str.len seed0_s) 1) 1) 1) 1) 0) 1 0) 0))) (not (= (ite (> (str.len seed0_s) 3) 1 0) 0))) (not (= (ite (= (str.at seed0_s 2) (str.at seed0_s (- (- (- (str.len seed0_s) 1) 1) 1))) 1 0) 0))) (not (= (ite (>= (- (- (- (str.len seed0_s) 1) 1) 1) 2) 1 0) 0))) (not (= (ite (>= (- (- (- (str.len seed0_s) 1) 1) 1) 0) 1 0) 0))) (not (= (ite (> (str.len seed0_s) 2) 1 0) 0))) (not (= (ite (= (str.at seed0_s 1) (str.at seed0_s (- (- (str.len seed0_s) 1) 1))) 1 0) 0))) (not (= (ite (>= (- (- (str.len seed0_s) 1) 1) 1) 1 0) 0))) (not (= (ite (>= (- (- (str.len seed0_s) 1) 1) 0) 1 0) 0))) (not (= (ite (> (str.len seed0_s) 1) 1 0) 0))) (not (= (ite (= (str.at seed0_s 0) (str.at seed0_s (- (str.len seed0_s) 1))) 1 0) 0))) (not (= (ite (>= (- (str.len seed0_s) 1) 0) 1 0) 0))) (not (= (ite (>= (- (str.len seed0_s) 1) 0) 1 0) 0))) (=> (str.<= (str.++ seed0_s "") (str.++ seed0_s "AJ0xvF")) (str.contains (str.++ seed0_s "hmX0ya1dL") (str.++ seed0_s "mHbe39CFn0B4sa5oT")))) (or (not (= (ite (> (str.len seed0_s) 0) 1 0) 0)) (xor (str.prefixof (str.++ seed0_s "YNq6hITBD35Fla7") (str.++ seed0_s "4pHvF")) (str.contains (str.++ seed0_s "rGwUyTZ0OE") (str.++ seed0_s "JmH8qO"))))))
(check-sat)
(exit)