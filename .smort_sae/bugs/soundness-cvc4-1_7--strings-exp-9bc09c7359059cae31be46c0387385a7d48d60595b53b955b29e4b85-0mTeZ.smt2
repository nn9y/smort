(set-logic ALL)
(declare-fun seed0_key2 () String)
(declare-fun seed0_value2 () String)
(assert (and (or (and (and (and (and (and (and (and (and (and (and (and (and (and (not (= (ite (= (str.at seed0_value2 (- (str.len seed0_value2) 1)) "\u{b}") 1 0) 0)) (= (ite (= (str.at seed0_value2 (- (str.len seed0_value2) 1)) "\u{d}") 1 0) 0)) (= (ite (= (str.at seed0_value2 (- (str.len seed0_value2) 1)) "\u{a}") 1 0) 0)) (= (ite (= (str.at seed0_value2 (- (str.len seed0_value2) 1)) "\u{9}") 1 0) 0)) (= (ite (= (str.at seed0_value2 (- (str.len seed0_value2) 1)) " ") 1 0) 0)) (= (ite (= (str.at seed0_value2 0) "\u{c}") 1 0) 0)) (= (ite (= (str.at seed0_value2 0) "\u{b}") 1 0) 0)) (= (ite (= (str.at seed0_value2 0) "\u{d}") 1 0) 0)) (= (ite (= (str.at seed0_value2 0) "\u{a}") 1 0) 0)) (= (ite (= (str.at seed0_value2 0) "\u{9}") 1 0) 0)) (= (ite (= (str.at seed0_value2 0) " ") 1 0) 0)) (= (ite (= (str.len seed0_value2) 0) 1 0) 0)) (= (ite (str.contains seed0_value2 ",") 1 0) 0)) (= (ite (= (str.len seed0_value2) 0) 1 0) 0)) (str.suffixof (str.++ seed0_value2 "xmbTMczsdZRuijElrNBy") (str.++ seed0_key2 "vdC4XKgUq3"))) (or (not (= (ite (= seed0_key2 "connection") 1 0) 0)) (not (str.<= (str.++ seed0_key2 "h") (str.++ seed0_key2 "iLJojPhzYyUEvA2"))))))
(check-sat)
(exit)