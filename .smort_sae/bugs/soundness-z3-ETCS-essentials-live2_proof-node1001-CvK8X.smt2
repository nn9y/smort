(set-logic ALL)
(declare-fun seed0_t0uscore0 () Real)
(declare-fun seed0_zuscore1dollarskuscore0 () Real)
(declare-fun seed0_ts0uscore0 () Real)
(declare-fun seed0_b () Real)
(declare-fun seed0_A () Real)
(declare-fun seed0_puscore0dollarskuscore2 () Real)
(declare-fun seed0_ep () Real)
(declare-fun seed0_uscorenuscore0dollarskuscore0 () Real)
(declare-fun seed0_vuscore1dollarskuscore0 () Real)
(declare-fun seed0_vo () Real)
(declare-fun seed0_Q1_ts0uscore0 (Real) Real)
(assert (and (forall ((seed0_Q2_t0uscore0 Real)) (and (and (and (and (and (and (and (> seed0_uscorenuscore0dollarskuscore0 0) (>= (+ seed0_zuscore1dollarskuscore0 (* (* seed0_uscorenuscore0dollarskuscore0 seed0_ep) seed0_vo)) seed0_puscore0dollarskuscore2)) (>= seed0_vuscore1dollarskuscore0 seed0_vo)) (> seed0_vo 0)) (> seed0_ep 0)) (> seed0_b 0)) (>= seed0_A 0)) (or (or (or (not (>= seed0_Q2_t0uscore0 0)) (and (and (<= 0 (seed0_Q1_ts0uscore0 seed0_Q2_t0uscore0)) (<= (seed0_Q1_ts0uscore0 seed0_Q2_t0uscore0) seed0_Q2_t0uscore0)) (not (<= (seed0_Q1_ts0uscore0 seed0_Q2_t0uscore0) seed0_ep)))) (not (>= (+ (* (/ 1 2) (+ (+ (* seed0_A (* seed0_Q2_t0uscore0 seed0_Q2_t0uscore0)) (* (* 2 seed0_Q2_t0uscore0) seed0_vuscore1dollarskuscore0)) (* 2 seed0_zuscore1dollarskuscore0))) (* (* (- seed0_uscorenuscore0dollarskuscore0 1) seed0_ep) seed0_vo)) seed0_puscore0dollarskuscore2))) (not (>= (+ (* seed0_A seed0_Q2_t0uscore0) seed0_vuscore1dollarskuscore0) seed0_vo))))) (and (>= (+ seed0_zuscore1dollarskuscore0 seed0_A) (* seed0_A seed0_vuscore1dollarskuscore0)) (< (- seed0_ts0uscore0 seed0_t0uscore0) (/ seed0_zuscore1dollarskuscore0 seed0_b)))))
(check-sat)
(exit)