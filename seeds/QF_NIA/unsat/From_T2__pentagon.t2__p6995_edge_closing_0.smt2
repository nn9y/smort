(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun Nl2a^01 () Int)
(declare-fun Nl2b^01 () Int)
(declare-fun Nl2c^01 () Int)
(declare-fun Nl2d^01 () Int)
(declare-fun Nl2e^01 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n3 () Int)
(declare-fun lam0n4 () Int)
(declare-fun UndefCntr0_CT () Int)
(declare-fun Nl2CT1 () Int)
(declare-fun UndefCntr0_a^0 () Int)
(declare-fun UndefCntr0_b^0 () Int)
(declare-fun UndefCntr0_c^0 () Int)
(declare-fun lam0n2 () Int)
(declare-fun UndefCntr0_d^0 () Int)
(declare-fun UndefCntr0_e^0 () Int)
(declare-fun UndefCntr0_undef22 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n4 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n4 () Int)
(declare-fun lam2n5 () Int)
(declare-fun undef1 () Int)
(declare-fun undef2 () Int)
(declare-fun undef3 () Int)
(declare-fun undef4 () Int)
(declare-fun undef5 () Int)
(declare-fun a^0 () Int)
(declare-fun b^0 () Int)
(declare-fun c^0 () Int)
(declare-fun d^0 () Int)
(declare-fun e^0 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam4n2 () Int)
(declare-fun UndefDef0undef22_CT () Int)
(declare-fun UndefDef0undef22_a^0 () Int)
(declare-fun UndefDef0undef22_b^0 () Int)
(declare-fun UndefDef0undef22_c^0 () Int)
(declare-fun UndefDef0undef22_d^0 () Int)
(declare-fun UndefDef0undef22_e^0 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam6n0 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam6n2 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam7n2 () Int)
(declare-fun FV_d^0_1 () Int)
(declare-fun FV_a^0_1 () Int)
(declare-fun FV_b^0_1 () Int)
(declare-fun FV_c^0_1 () Int)
(declare-fun FV_e^0_1 () Int)
(declare-fun FV_undef22_1 () Int)
(assert ( and ( <= ( - 1 ) Nl2a^01 ) ( <= Nl2a^01 1 ) ( <= ( - 1 ) Nl2b^01 ) ( <= Nl2b^01 1 ) ( <= ( - 1 ) Nl2c^01 ) ( <= Nl2c^01 1 ) ( <= ( - 1 ) Nl2d^01 ) ( <= Nl2d^01 1 ) ( <= ( - 1 ) Nl2e^01 ) ( <= Nl2e^01 1 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n3 0 ) ( >= lam0n4 0 ) ( > ( + ( * 1 lam0n0 ) ( * UndefCntr0_CT lam0n3 ) ( * Nl2CT1 lam0n4 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n1 ) ( * UndefCntr0_a^0 lam0n3 ) ( * Nl2a^01 lam0n4 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n1 ) ( * UndefCntr0_b^0 lam0n3 ) ( * Nl2b^01 lam0n4 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n1 ) ( * UndefCntr0_c^0 lam0n3 ) ( * Nl2c^01 lam0n4 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * ( - 1 ) lam0n1 ) ( * 1 lam0n2 ) ( * UndefCntr0_d^0 lam0n3 ) ( * Nl2d^01 lam0n4 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n1 ) ( * UndefCntr0_e^0 lam0n3 ) ( * Nl2e^01 lam0n4 ) ) 0 ) ( = ( + ( * 1 lam0n2 ) ( * UndefCntr0_undef22 lam0n3 ) ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n3 0 ) ( >= lam1n4 0 ) ( > ( + ( * 1 lam1n0 ) ( * UndefCntr0_CT lam1n3 ) ( * Nl2CT1 lam1n4 ) ( - 1 ( + ( + ( + Nl2CT1 ( * Nl2c^01 0 ) ) ( * Nl2d^01 0 ) ) ( * Nl2e^01 0 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n1 ) ( * UndefCntr0_a^0 lam1n3 ) ( * Nl2a^01 lam1n4 ) ( - ( + 0 Nl2a^01 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n1 ) ( * UndefCntr0_b^0 lam1n3 ) ( * Nl2b^01 lam1n4 ) ( - ( + 0 Nl2b^01 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n1 ) ( * UndefCntr0_c^0 lam1n3 ) ( * Nl2c^01 lam1n4 ) ( - ( + 0 ( * Nl2c^01 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam1n0 ) ( * ( - 1 ) lam1n1 ) ( * 1 lam1n2 ) ( * UndefCntr0_d^0 lam1n3 ) ( * Nl2d^01 lam1n4 ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n1 ) ( * UndefCntr0_e^0 lam1n3 ) ( * Nl2e^01 lam1n4 ) ( - ( + 0 ( * Nl2e^01 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam1n2 ) ( * UndefCntr0_undef22 lam1n3 ) ( - ( + ( + ( + 0 ( * Nl2c^01 ( - 1 ) ) ) ( * Nl2d^01 1 ) ) ( * Nl2e^01 ( - 1 ) ) ) ) ) 0 ) ) ))
(assert ( and ( <= ( + 1 ( * ( - 1 ) undef1 ) ( * ( - 1 ) undef2 ) ( * ( - 1 ) undef3 ) ( * ( - 1 ) undef4 ) ( * ( - 1 ) undef5 ) ) 0 ) ( = ( + a^0 ( * ( - 1 ) undef1 ) ) 0 ) ( = ( + b^0 ( * ( - 1 ) undef2 ) ) 0 ) ( = ( + c^0 ( * ( - 1 ) undef3 ) ) 0 ) ( = ( + d^0 ( * ( - 1 ) undef4 ) ) 0 ) ( = ( + e^0 ( * ( - 1 ) undef5 ) ) 0 ) ( <= ( + Nl2CT1 ( * ( + 0 Nl2a^01 ) a^0 ) ( * ( + 0 Nl2b^01 ) b^0 ) ( * ( + 0 Nl2c^01 ) c^0 ) ( * ( + 0 Nl2d^01 ) d^0 ) ( * ( + 0 Nl2e^01 ) e^0 ) ) 0 ) ))
(assert ( or ( not ( = UndefCntr0_a^0 0 ) ) ( not ( = UndefCntr0_b^0 0 ) ) ( not ( = UndefCntr0_c^0 0 ) ) ( not ( = UndefCntr0_d^0 0 ) ) ( not ( = UndefCntr0_e^0 0 ) ) ( not ( = UndefCntr0_undef22 0 ) ) ( = UndefCntr0_CT 0 ) ))
(assert ( or ( and ( = UndefCntr0_a^0 0 ) ( = UndefCntr0_b^0 0 ) ( = UndefCntr0_c^0 0 ) ( = UndefCntr0_d^0 0 ) ( = UndefCntr0_e^0 0 ) ) ( not ( = UndefCntr0_undef22 0 ) ) ))
(assert ( or ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n2 0 ) ( > ( + ( * 1 lam3n0 ) ( * Nl2CT1 lam3n2 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n1 ) ( * Nl2a^01 lam3n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n1 ) ( * Nl2b^01 lam3n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n1 ) ( * Nl2c^01 lam3n2 ) ) 0 ) ( = ( + ( * 1 lam3n0 ) ( * ( - 1 ) lam3n1 ) ( * Nl2d^01 lam3n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n1 ) ( * Nl2e^01 lam3n2 ) ) 0 ) ) ( and ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n2 0 ) ( > ( + ( * 1 lam4n0 ) ( * Nl2CT1 lam4n2 ) ( - 1 ( + ( + 0 0 ) ( * 1 UndefDef0undef22_CT ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n1 ) ( * Nl2a^01 lam4n2 ) ( - ( * UndefDef0undef22_a^0 1 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n1 ) ( * Nl2b^01 lam4n2 ) ( - ( * UndefDef0undef22_b^0 1 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n1 ) ( * Nl2c^01 lam4n2 ) ( - ( * UndefDef0undef22_c^0 1 ) ) ) 0 ) ( = ( + ( * 1 lam4n0 ) ( * ( - 1 ) lam4n1 ) ( * Nl2d^01 lam4n2 ) ( - ( + 1 ( * UndefDef0undef22_d^0 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n1 ) ( * Nl2e^01 lam4n2 ) ( - ( * UndefDef0undef22_e^0 1 ) ) ) 0 ) ) ( and ( >= lam5n0 0 ) ( >= lam5n1 0 ) ( >= lam5n2 0 ) ( > ( + ( * 1 lam5n0 ) ( * Nl2CT1 lam5n2 ) ( - 1 ( - ( + ( + 0 0 ) ( * 1 UndefDef0undef22_CT ) ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n1 ) ( * Nl2a^01 lam5n2 ) ( - ( - ( * UndefDef0undef22_a^0 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n1 ) ( * Nl2b^01 lam5n2 ) ( - ( - ( * UndefDef0undef22_b^0 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n1 ) ( * Nl2c^01 lam5n2 ) ( - ( - ( * UndefDef0undef22_c^0 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam5n0 ) ( * ( - 1 ) lam5n1 ) ( * Nl2d^01 lam5n2 ) ( - ( - ( + 1 ( * UndefDef0undef22_d^0 1 ) ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n1 ) ( * Nl2e^01 lam5n2 ) ( - ( - ( * UndefDef0undef22_e^0 1 ) ) ) ) 0 ) ) ( or ( = UndefCntr0_undef22 0 ) ( and ( >= lam6n0 0 ) ( >= lam6n1 0 ) ( >= lam6n2 0 ) ( > ( + ( * 1 lam6n0 ) ( * Nl2CT1 lam6n2 ) ( - 1 ( + ( + ( + ( + ( + ( + UndefCntr0_CT 0 ) 0 ) 0 ) 0 ) 0 ) ( * UndefCntr0_undef22 UndefDef0undef22_CT ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n1 ) ( * Nl2a^01 lam6n2 ) ( - ( + UndefCntr0_a^0 ( * UndefDef0undef22_a^0 UndefCntr0_undef22 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n1 ) ( * Nl2b^01 lam6n2 ) ( - ( + UndefCntr0_b^0 ( * UndefDef0undef22_b^0 UndefCntr0_undef22 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n1 ) ( * Nl2c^01 lam6n2 ) ( - ( + UndefCntr0_c^0 ( * UndefDef0undef22_c^0 UndefCntr0_undef22 ) ) ) ) 0 ) ( = ( + ( * 1 lam6n0 ) ( * ( - 1 ) lam6n1 ) ( * Nl2d^01 lam6n2 ) ( - ( + UndefCntr0_d^0 ( * UndefDef0undef22_d^0 UndefCntr0_undef22 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n1 ) ( * Nl2e^01 lam6n2 ) ( - ( + UndefCntr0_e^0 ( * UndefDef0undef22_e^0 UndefCntr0_undef22 ) ) ) ) 0 ) ) ) ) ))
(assert ( and ( >= lam7n0 0 ) ( >= lam7n1 0 ) ( >= lam7n2 0 ) ( > ( + ( * Nl2CT1 lam7n2 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * Nl2a^01 lam7n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * Nl2b^01 lam7n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * Nl2c^01 lam7n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * ( - 1 ) lam7n1 ) ( * Nl2d^01 lam7n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * Nl2e^01 lam7n2 ) ) 0 ) ))
(assert ( and ( <= ( + Nl2CT1 ( * Nl2d^01 FV_d^0_1 ) ( * Nl2a^01 FV_a^0_1 ) ( * Nl2b^01 FV_b^0_1 ) ( * Nl2c^01 FV_c^0_1 ) ( * Nl2e^01 FV_e^0_1 ) ) 0 ) ( or ( and ( <= ( + 1 FV_d^0_1 ) 0 ) ( <= ( + ( * ( - 1 ) FV_d^0_1 ) ( * ( - 1 ) FV_a^0_1 ) ( * ( - 1 ) FV_b^0_1 ) ( * ( - 1 ) FV_c^0_1 ) ( * ( - 1 ) FV_e^0_1 ) ) 0 ) ( = ( + FV_d^0_1 FV_undef22_1 ) 0 ) ) ( <= ( + 1 FV_d^0_1 FV_a^0_1 FV_b^0_1 FV_c^0_1 FV_e^0_1 ) 0 ) ) ))
(assert ( and ( <= ( + Nl2CT1 ( * Nl2d^01 FV_d^0_1 ) ( * Nl2a^01 FV_a^0_1 ) ( * Nl2b^01 FV_b^0_1 ) ( * Nl2c^01 FV_c^0_1 ) ( * Nl2e^01 FV_e^0_1 ) ) 0 ) ( <= ( + 1 FV_d^0_1 FV_a^0_1 FV_b^0_1 FV_c^0_1 FV_e^0_1 ) 0 ) ))
(check-sat)
(exit)
