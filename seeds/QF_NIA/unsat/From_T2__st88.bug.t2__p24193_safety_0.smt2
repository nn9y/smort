(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun Nl5WItemsNum^01 () Int)
(declare-fun Nl5__const_5^01 () Int)
(declare-fun Nl6WItemsNum^01 () Int)
(declare-fun Nl6__const_5^01 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun Nl5CT1 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun Nl6CT1 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam4n2 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam6n0 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam6n2 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam7n2 () Int)
(declare-fun lam8n0 () Int)
(declare-fun lam8n1 () Int)
(declare-fun lam9n0 () Int)
(declare-fun lam9n1 () Int)
(declare-fun lam10n0 () Int)
(declare-fun lam10n1 () Int)
(declare-fun lam11n0 () Int)
(declare-fun lam11n1 () Int)
(declare-fun lam12n0 () Int)
(declare-fun WItemsNum^0 () Int)
(declare-fun undef52 () Int)
(declare-fun __const_5^0 () Int)
(declare-fun lam13n0 () Int)
(declare-fun lam14n0 () Int)
(assert ( and ( <= ( - 1 ) Nl5WItemsNum^01 ) ( <= Nl5WItemsNum^01 1 ) ( <= ( - 1 ) Nl5__const_5^01 ) ( <= Nl5__const_5^01 1 ) ( <= ( - 1 ) Nl6WItemsNum^01 ) ( <= Nl6WItemsNum^01 1 ) ( <= ( - 1 ) Nl6__const_5^01 ) ( <= Nl6__const_5^01 1 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( > ( + ( * 1 lam0n0 ) ( * Nl5CT1 lam0n1 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * Nl5WItemsNum^01 lam0n1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl5__const_5^01 lam0n1 ) ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( > ( + ( * 1 lam1n0 ) ( * Nl5CT1 lam1n1 ) ( - 1 Nl6CT1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * Nl5WItemsNum^01 lam1n1 ) ( - ( + 0 Nl6WItemsNum^01 ) ) ) 0 ) ( = ( + ( * 1 lam1n0 ) ( * Nl5__const_5^01 lam1n1 ) ( - ( + 0 Nl6__const_5^01 ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam2n0 0 ) ( >= lam2n2 0 ) ( > ( + ( * Nl5CT1 lam2n2 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam2n0 ) ( * Nl5WItemsNum^01 lam2n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * Nl5__const_5^01 lam2n2 ) ) 0 ) ( = ( * 1 lam2n1 ) 0 ) ) ( and ( >= lam3n0 0 ) ( >= lam3n2 0 ) ( > ( + ( * Nl5CT1 lam3n2 ) ( - 1 Nl6CT1 ) ) 0 ) ( = ( + ( * 1 lam3n0 ) ( * Nl5WItemsNum^01 lam3n2 ) ( - ( + 0 Nl6WItemsNum^01 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n0 ) ( * Nl5__const_5^01 lam3n2 ) ( - ( + 0 Nl6__const_5^01 ) ) ) 0 ) ( = ( * 1 lam3n1 ) 0 ) ) ))
(assert ( or ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n2 0 ) ( > ( + ( * 1 lam4n0 ) ( * Nl5CT1 lam4n2 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam4n1 ) ( * Nl5WItemsNum^01 lam4n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n1 ) ( * Nl5__const_5^01 lam4n2 ) ) 0 ) ( = ( * ( - 1 ) lam4n0 ) 0 ) ) ( and ( >= lam5n0 0 ) ( >= lam5n1 0 ) ( >= lam5n2 0 ) ( > ( + ( * 1 lam5n0 ) ( * Nl5CT1 lam5n2 ) ( - 1 ( + Nl5CT1 ( * Nl5WItemsNum^01 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam5n1 ) ( * Nl5WItemsNum^01 lam5n2 ) ( - ( + 0 ( * Nl5WItemsNum^01 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n1 ) ( * Nl5__const_5^01 lam5n2 ) ( - ( + 0 Nl5__const_5^01 ) ) ) 0 ) ( = ( * ( - 1 ) lam5n0 ) 0 ) ) ))
(assert ( or ( and ( >= lam6n0 0 ) ( >= lam6n1 0 ) ( >= lam6n2 0 ) ( > ( + ( * 1 lam6n0 ) ( * Nl5CT1 lam6n2 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam6n1 ) ( * Nl5WItemsNum^01 lam6n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n1 ) ( * Nl5__const_5^01 lam6n2 ) ) 0 ) ( = ( * 1 lam6n0 ) 0 ) ) ( and ( >= lam7n0 0 ) ( >= lam7n1 0 ) ( >= lam7n2 0 ) ( > ( + ( * 1 lam7n0 ) ( * Nl5CT1 lam7n2 ) ( - 1 ( + Nl5CT1 ( * Nl5WItemsNum^01 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam7n1 ) ( * Nl5WItemsNum^01 lam7n2 ) ( - ( + 0 ( * Nl5WItemsNum^01 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n1 ) ( * Nl5__const_5^01 lam7n2 ) ( - ( + 0 Nl5__const_5^01 ) ) ) 0 ) ( = ( * 1 lam7n0 ) 0 ) ) ))
(assert ( or ( and ( >= lam8n0 0 ) ( >= lam8n1 0 ) ( > ( + ( * ( - 2 ) lam8n0 ) ( * Nl6CT1 lam8n1 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam8n0 ) ( * Nl6WItemsNum^01 lam8n1 ) ) 0 ) ( = ( * Nl6__const_5^01 lam8n1 ) 0 ) ) ( and ( >= lam9n0 0 ) ( >= lam9n1 0 ) ( > ( + ( * ( - 2 ) lam9n0 ) ( * Nl6CT1 lam9n1 ) ( - 1 Nl5CT1 ) ) 0 ) ( = ( + ( * 1 lam9n0 ) ( * Nl6WItemsNum^01 lam9n1 ) ( - ( + 0 Nl5WItemsNum^01 ) ) ) 0 ) ( = ( + ( * Nl6__const_5^01 lam9n1 ) ( - ( + 0 Nl5__const_5^01 ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam10n0 0 ) ( >= lam10n1 0 ) ( > ( + ( * 3 lam10n0 ) ( * Nl6CT1 lam10n1 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam10n0 ) ( * Nl6WItemsNum^01 lam10n1 ) ) 0 ) ( = ( * Nl6__const_5^01 lam10n1 ) 0 ) ) ( and ( >= lam11n0 0 ) ( >= lam11n1 0 ) ( > ( + ( * 3 lam11n0 ) ( * Nl6CT1 lam11n1 ) ( - 1 ( + Nl6CT1 ( * Nl6WItemsNum^01 ( - 1 ) ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam11n0 ) ( * Nl6WItemsNum^01 lam11n1 ) ( - ( + 0 ( * Nl6WItemsNum^01 1 ) ) ) ) 0 ) ( = ( + ( * Nl6__const_5^01 lam11n1 ) ( - ( + 0 Nl6__const_5^01 ) ) ) 0 ) ) ))
(assert ( and ( = ( + WItemsNum^0 ( * ( - 1 ) undef52 ) ) 0 ) ( <= ( + Nl5CT1 ( * ( + 0 Nl5WItemsNum^01 ) WItemsNum^0 ) ( * ( + 0 Nl5__const_5^01 ) __const_5^0 ) ) 0 ) ))
(assert ( or ( or ( and ( >= lam13n0 0 ) ( > ( + ( * Nl5CT1 lam13n0 ) ( - 1 ) ) 0 ) ( = ( * Nl5WItemsNum^01 lam13n0 ) 0 ) ( = ( * Nl5__const_5^01 lam13n0 ) 0 ) ) ( and ( >= lam14n0 0 ) ( > ( + ( * Nl5CT1 lam14n0 ) 1 ) 0 ) ( = ( + ( * Nl5WItemsNum^01 lam14n0 ) ( - 1 ) ) 0 ) ( = ( + ( * Nl5__const_5^01 lam14n0 ) 1 ) 0 ) ) ) ( and ( and ( = ( + WItemsNum^0 ( * ( - 1 ) undef52 ) ) 0 ) ( <= ( + Nl5CT1 ( * ( + 0 Nl5WItemsNum^01 ) WItemsNum^0 ) ( * ( + 0 Nl5__const_5^01 ) __const_5^0 ) ) 0 ) ) ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( > ( + ( * 1 lam0n0 ) ( * Nl5CT1 lam0n1 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * Nl5WItemsNum^01 lam0n1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl5__const_5^01 lam0n1 ) ) 0 ) ) ( and ( >= lam2n0 0 ) ( >= lam2n2 0 ) ( > ( + ( * Nl5CT1 lam2n2 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam2n0 ) ( * Nl5WItemsNum^01 lam2n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * Nl5__const_5^01 lam2n2 ) ) 0 ) ( = ( * 1 lam2n1 ) 0 ) ) ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n2 0 ) ( > ( + ( * 1 lam4n0 ) ( * Nl5CT1 lam4n2 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam4n1 ) ( * Nl5WItemsNum^01 lam4n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n1 ) ( * Nl5__const_5^01 lam4n2 ) ) 0 ) ( = ( * ( - 1 ) lam4n0 ) 0 ) ) ( and ( >= lam6n0 0 ) ( >= lam6n1 0 ) ( >= lam6n2 0 ) ( > ( + ( * 1 lam6n0 ) ( * Nl5CT1 lam6n2 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam6n1 ) ( * Nl5WItemsNum^01 lam6n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n1 ) ( * Nl5__const_5^01 lam6n2 ) ) 0 ) ( = ( * 1 lam6n0 ) 0 ) ) ( and ( >= lam8n0 0 ) ( >= lam8n1 0 ) ( > ( + ( * ( - 2 ) lam8n0 ) ( * Nl6CT1 lam8n1 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam8n0 ) ( * Nl6WItemsNum^01 lam8n1 ) ) 0 ) ( = ( * Nl6__const_5^01 lam8n1 ) 0 ) ) ( and ( >= lam10n0 0 ) ( >= lam10n1 0 ) ( > ( + ( * 3 lam10n0 ) ( * Nl6CT1 lam10n1 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam10n0 ) ( * Nl6WItemsNum^01 lam10n1 ) ) 0 ) ( = ( * Nl6__const_5^01 lam10n1 ) 0 ) ) ) ) ))
(check-sat)
(exit)
