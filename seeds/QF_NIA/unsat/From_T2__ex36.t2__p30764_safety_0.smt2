(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun Nl21__const_12^01 () Int)
(declare-fun Nl21__const_15^01 () Int)
(declare-fun Nl21cmd1^01 () Int)
(declare-fun Nl21cmd2^01 () Int)
(declare-fun Nl21zer^01 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun lam0n4 () Int)
(declare-fun lam0n5 () Int)
(declare-fun Nl21CT1 () Int)
(declare-fun lam0n6 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n4 () Int)
(declare-fun lam1n5 () Int)
(declare-fun lam1n6 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n4 () Int)
(declare-fun lam2n5 () Int)
(declare-fun lam2n6 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam3n4 () Int)
(declare-fun lam3n5 () Int)
(declare-fun lam3n6 () Int)
(declare-fun __const_15^0 () Int)
(declare-fun cmd2^0 () Int)
(declare-fun __const_1132^0 () Int)
(declare-fun cmd1^0 () Int)
(declare-fun __const_12^0 () Int)
(declare-fun __const_1872^0 () Int)
(declare-fun i18^0 () Int)
(declare-fun zer^0 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam4n2 () Int)
(declare-fun lam4n4 () Int)
(declare-fun lam4n3 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam5n4 () Int)
(declare-fun lam5n3 () Int)
(assert ( and ( <= ( - 1 ) Nl21__const_12^01 ) ( <= Nl21__const_12^01 1 ) ( <= ( - 1 ) Nl21__const_15^01 ) ( <= Nl21__const_15^01 1 ) ( <= ( - 1 ) Nl21cmd1^01 ) ( <= Nl21cmd1^01 1 ) ( <= ( - 1 ) Nl21cmd2^01 ) ( <= Nl21cmd2^01 1 ) ( <= ( - 1 ) Nl21zer^01 ) ( <= Nl21zer^01 1 ) ))
(assert ( or ( and ( not ( <= ( + 1 ( * ( - 1 ) __const_15^0 ) cmd2^0 ) 0 ) ) ( <= ( + 1 __const_1132^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_12^0 ) cmd2^0 ) 0 ) ( <= ( + 1 __const_1872^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + 1 i18^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) zer^0 ) ) 0 ) ( = ( + __const_12^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + Nl21CT1 ( * ( + 0 Nl21__const_12^01 ) __const_12^0 ) ( * ( + 0 Nl21__const_15^01 ) __const_15^0 ) ( * ( + 0 Nl21cmd1^01 ) cmd1^0 ) ( * ( + 0 Nl21cmd2^01 ) cmd2^0 ) ( * ( + 0 Nl21zer^01 ) zer^0 ) ) 0 ) ) ( and ( not ( <= ( + 1 ( * ( - 1 ) __const_15^0 ) cmd2^0 ) 0 ) ) ( <= ( + 1 __const_1132^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_12^0 ) cmd2^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_1872^0 ) cmd1^0 ) 0 ) ( <= ( + 1 i18^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) zer^0 ) ) 0 ) ( = ( + __const_12^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + Nl21CT1 ( * ( + 0 Nl21__const_12^01 ) __const_12^0 ) ( * ( + 0 Nl21__const_15^01 ) __const_15^0 ) ( * ( + 0 Nl21cmd1^01 ) cmd1^0 ) ( * ( + 0 Nl21cmd2^01 ) cmd2^0 ) ( * ( + 0 Nl21zer^01 ) zer^0 ) ) 0 ) ) ( and ( not ( <= ( + 1 ( * ( - 1 ) __const_15^0 ) cmd2^0 ) 0 ) ) ( <= ( + 1 ( * ( - 1 ) __const_1132^0 ) cmd1^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_12^0 ) cmd2^0 ) 0 ) ( <= ( + 1 __const_1872^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + 1 i18^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) zer^0 ) ) 0 ) ( = ( + __const_12^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + Nl21CT1 ( * ( + 0 Nl21__const_12^01 ) __const_12^0 ) ( * ( + 0 Nl21__const_15^01 ) __const_15^0 ) ( * ( + 0 Nl21cmd1^01 ) cmd1^0 ) ( * ( + 0 Nl21cmd2^01 ) cmd2^0 ) ( * ( + 0 Nl21zer^01 ) zer^0 ) ) 0 ) ) ( and ( not ( <= ( + 1 ( * ( - 1 ) __const_15^0 ) cmd2^0 ) 0 ) ) ( <= ( + 1 ( * ( - 1 ) __const_1132^0 ) cmd1^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_12^0 ) cmd2^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_1872^0 ) cmd1^0 ) 0 ) ( <= ( + 1 i18^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) zer^0 ) ) 0 ) ( = ( + __const_12^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + Nl21CT1 ( * ( + 0 Nl21__const_12^01 ) __const_12^0 ) ( * ( + 0 Nl21__const_15^01 ) __const_15^0 ) ( * ( + 0 Nl21cmd1^01 ) cmd1^0 ) ( * ( + 0 Nl21cmd2^01 ) cmd2^0 ) ( * ( + 0 Nl21zer^01 ) zer^0 ) ) 0 ) ) ))
(assert ( or ( or ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n2 0 ) ( >= lam4n4 0 ) ( > ( + ( * 1 lam4n1 ) ( * 1 lam4n2 ) ( * Nl21CT1 lam4n4 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n1 ) ( * 1 lam4n3 ) ( * Nl21__const_12^01 lam4n4 ) ) 0 ) ( = ( * Nl21__const_15^01 lam4n4 ) 0 ) ( = ( + ( * ( - 1 ) lam4n3 ) ( * Nl21cmd1^01 lam4n4 ) ) 0 ) ( = ( + ( * 1 lam4n1 ) ( * Nl21cmd2^01 lam4n4 ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n2 ) ( * Nl21zer^01 lam4n4 ) ) 0 ) ) ( and ( >= lam5n0 0 ) ( >= lam5n1 0 ) ( >= lam5n2 0 ) ( >= lam5n4 0 ) ( > ( + ( * 1 lam5n1 ) ( * 1 lam5n2 ) ( * Nl21CT1 lam5n4 ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n1 ) ( * 1 lam5n3 ) ( * Nl21__const_12^01 lam5n4 ) ) 0 ) ( = ( + ( * Nl21__const_15^01 lam5n4 ) 1 ) 0 ) ( = ( + ( * ( - 1 ) lam5n3 ) ( * Nl21cmd1^01 lam5n4 ) ) 0 ) ( = ( + ( * 1 lam5n1 ) ( * Nl21cmd2^01 lam5n4 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n2 ) ( * Nl21zer^01 lam5n4 ) ) 0 ) ) ) ( and ( or ( and ( not ( <= ( + 1 ( * ( - 1 ) __const_15^0 ) cmd2^0 ) 0 ) ) ( <= ( + 1 __const_1132^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_12^0 ) cmd2^0 ) 0 ) ( <= ( + 1 __const_1872^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + 1 i18^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) zer^0 ) ) 0 ) ( = ( + __const_12^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + Nl21CT1 ( * ( + 0 Nl21__const_12^01 ) __const_12^0 ) ( * ( + 0 Nl21__const_15^01 ) __const_15^0 ) ( * ( + 0 Nl21cmd1^01 ) cmd1^0 ) ( * ( + 0 Nl21cmd2^01 ) cmd2^0 ) ( * ( + 0 Nl21zer^01 ) zer^0 ) ) 0 ) ) ( and ( not ( <= ( + 1 ( * ( - 1 ) __const_15^0 ) cmd2^0 ) 0 ) ) ( <= ( + 1 __const_1132^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_12^0 ) cmd2^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_1872^0 ) cmd1^0 ) 0 ) ( <= ( + 1 i18^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) zer^0 ) ) 0 ) ( = ( + __const_12^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + Nl21CT1 ( * ( + 0 Nl21__const_12^01 ) __const_12^0 ) ( * ( + 0 Nl21__const_15^01 ) __const_15^0 ) ( * ( + 0 Nl21cmd1^01 ) cmd1^0 ) ( * ( + 0 Nl21cmd2^01 ) cmd2^0 ) ( * ( + 0 Nl21zer^01 ) zer^0 ) ) 0 ) ) ( and ( not ( <= ( + 1 ( * ( - 1 ) __const_15^0 ) cmd2^0 ) 0 ) ) ( <= ( + 1 ( * ( - 1 ) __const_1132^0 ) cmd1^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_12^0 ) cmd2^0 ) 0 ) ( <= ( + 1 __const_1872^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + 1 i18^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) zer^0 ) ) 0 ) ( = ( + __const_12^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + Nl21CT1 ( * ( + 0 Nl21__const_12^01 ) __const_12^0 ) ( * ( + 0 Nl21__const_15^01 ) __const_15^0 ) ( * ( + 0 Nl21cmd1^01 ) cmd1^0 ) ( * ( + 0 Nl21cmd2^01 ) cmd2^0 ) ( * ( + 0 Nl21zer^01 ) zer^0 ) ) 0 ) ) ( and ( not ( <= ( + 1 ( * ( - 1 ) __const_15^0 ) cmd2^0 ) 0 ) ) ( <= ( + 1 ( * ( - 1 ) __const_1132^0 ) cmd1^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_12^0 ) cmd2^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_1872^0 ) cmd1^0 ) 0 ) ( <= ( + 1 i18^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) zer^0 ) ) 0 ) ( = ( + __const_12^0 ( * ( - 1 ) cmd1^0 ) ) 0 ) ( <= ( + Nl21CT1 ( * ( + 0 Nl21__const_12^01 ) __const_12^0 ) ( * ( + 0 Nl21__const_15^01 ) __const_15^0 ) ( * ( + 0 Nl21cmd1^01 ) cmd1^0 ) ( * ( + 0 Nl21cmd2^01 ) cmd2^0 ) ( * ( + 0 Nl21zer^01 ) zer^0 ) ) 0 ) ) ) false ) ))
(check-sat)
(exit)
