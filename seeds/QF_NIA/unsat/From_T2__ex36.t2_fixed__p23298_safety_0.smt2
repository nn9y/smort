(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun Nl9cmd2^01 () Int)
(declare-fun Nl9i22^01 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n3 () Int)
(declare-fun lam0n2 () Int)
(declare-fun Nl9CT1 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun i20^0 () Int)
(declare-fun zer^0 () Int)
(declare-fun cmd2^0 () Int)
(declare-fun undef407 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n2 () Int)
(declare-fun lam4n1 () Int)
(assert ( and ( <= ( - 1 ) Nl9cmd2^01 ) ( <= Nl9cmd2^01 1 ) ( <= ( - 1 ) Nl9i22^01 ) ( <= Nl9i22^01 1 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n3 0 ) ( > ( + ( * ( - 123 ) lam0n2 ) ( * Nl9CT1 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n2 ) ( * Nl9cmd2^01 lam0n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n1 ) ( * Nl9i22^01 lam0n3 ) ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n3 0 ) ( > ( + ( * ( - 123 ) lam1n2 ) ( * Nl9CT1 lam1n3 ) ( - 1 ( + Nl9CT1 ( * Nl9i22^01 ( - 1 ) ) ) ) ) 0 ) ( = ( + ( * 1 lam1n2 ) ( * Nl9cmd2^01 lam1n3 ) ( - ( + 0 Nl9cmd2^01 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n1 ) ( * Nl9i22^01 lam1n3 ) ( - ( + 0 ( * Nl9i22^01 1 ) ) ) ) 0 ) ) ))
(assert ( and ( not ( <= 1 0 ) ) ( <= ( + 1 i20^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) zer^0 ) ) 0 ) ( = ( + ( - 123 ) cmd2^0 ) 0 ) ( <= ( + ( + Nl9CT1 ( * Nl9i22^01 0 ) ) ( * ( + 0 Nl9cmd2^01 ) cmd2^0 ) ( * ( + 0 ( * Nl9i22^01 1 ) ) undef407 ) ) 0 ) ))
(assert ( or ( or ( and ( >= lam3n0 0 ) ( >= lam3n2 0 ) ( > ( + ( * 1 lam3n0 ) ( * ( - 123 ) lam3n1 ) ( * Nl9CT1 lam3n2 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam3n1 ) ( * Nl9cmd2^01 lam3n2 ) ) 0 ) ( = ( + ( * 1 lam3n0 ) ( * Nl9i22^01 lam3n2 ) ) 0 ) ) ( and ( >= lam4n0 0 ) ( >= lam4n2 0 ) ( > ( + ( * 1 lam4n0 ) ( * ( - 123 ) lam4n1 ) ( * Nl9CT1 lam4n2 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam4n1 ) ( * Nl9cmd2^01 lam4n2 ) ) 0 ) ( = ( + ( * 1 lam4n0 ) ( * Nl9i22^01 lam4n2 ) ) 0 ) ) ) ( and ( and ( >= lam2n0 0 ) ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( > ( + ( * 1 lam2n1 ) ( * 1 lam2n2 ) ( * ( - 123 ) lam2n3 ) ( - 1 ( + Nl9CT1 ( * Nl9i22^01 0 ) ) ) ) 0 ) ( = ( + ( * 1 lam2n3 ) ( - ( + 0 Nl9cmd2^01 ) ) ) 0 ) ( = ( * 1 lam2n1 ) 0 ) ( = ( * ( - 1 ) lam2n2 ) 0 ) ( = ( - ( + 0 ( * Nl9i22^01 1 ) ) ) 0 ) ) ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n3 0 ) ( > ( + ( * ( - 123 ) lam0n2 ) ( * Nl9CT1 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n2 ) ( * Nl9cmd2^01 lam0n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n1 ) ( * Nl9i22^01 lam0n3 ) ) 0 ) ) ) ))
(check-sat)
(exit)
