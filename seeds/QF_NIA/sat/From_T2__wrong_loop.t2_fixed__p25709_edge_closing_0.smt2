(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun Nl3i^01 () Int)
(declare-fun Nl3i^02 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun Nl3CT1 () Int)
(declare-fun Nl3CT2 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam4n2 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam6n2 () Int)
(declare-fun lam6n3 () Int)
(declare-fun lam6n0 () Int)
(declare-fun UndefCntr2_CT () Int)
(declare-fun UndefCntr2_i^0 () Int)
(declare-fun UndefCntr2_undef9 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam7n2 () Int)
(declare-fun lam7n3 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam8n1 () Int)
(declare-fun lam8n2 () Int)
(declare-fun lam8n3 () Int)
(declare-fun lam8n0 () Int)
(declare-fun lam9n0 () Int)
(declare-fun lam10n0 () Int)
(declare-fun i^0 () Int)
(declare-fun FV_i^0_3 () Int)
(declare-fun lam11n0 () Int)
(declare-fun lam11n1 () Int)
(declare-fun lam11n2 () Int)
(declare-fun FV_i^0_4 () Int)
(assert ( and ( <= ( - 1 ) Nl3i^01 ) ( <= Nl3i^01 1 ) ( <= ( - 1 ) Nl3i^02 ) ( <= Nl3i^02 1 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * 6 lam0n0 ) ( * ( - 9 ) lam0n1 ) ( * Nl3CT1 lam0n2 ) ( * Nl3CT2 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * 1 lam0n1 ) ( * Nl3i^01 lam0n2 ) ( * Nl3i^02 lam0n3 ) ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n2 0 ) ( >= lam1n3 0 ) ( > ( + ( * 6 lam1n0 ) ( * ( - 9 ) lam1n1 ) ( * Nl3CT1 lam1n2 ) ( * Nl3CT2 lam1n3 ) ( - 1 ( + Nl3CT1 ( * Nl3i^01 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * 1 lam1n1 ) ( * Nl3i^01 lam1n2 ) ( * Nl3i^02 lam1n3 ) ( - ( + 0 ( * Nl3i^01 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * 6 lam0n0 ) ( * ( - 9 ) lam0n1 ) ( * Nl3CT1 lam0n2 ) ( * Nl3CT2 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * 1 lam0n1 ) ( * Nl3i^01 lam0n2 ) ( * Nl3i^02 lam0n3 ) ) 0 ) ) ( and ( >= lam2n0 0 ) ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( >= lam2n3 0 ) ( > ( + ( * 6 lam2n0 ) ( * ( - 9 ) lam2n1 ) ( * Nl3CT1 lam2n2 ) ( * Nl3CT2 lam2n3 ) ( - 1 ( + Nl3CT2 ( * Nl3i^02 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * 1 lam2n1 ) ( * Nl3i^01 lam2n2 ) ( * Nl3i^02 lam2n3 ) ( - ( + 0 ( * Nl3i^02 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n2 0 ) ( > ( + ( * ( - 4 ) lam3n0 ) ( * Nl3CT1 lam3n1 ) ( * Nl3CT2 lam3n2 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam3n0 ) ( * Nl3i^01 lam3n1 ) ( * Nl3i^02 lam3n2 ) ) 0 ) ) ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n2 0 ) ( > ( + ( * ( - 4 ) lam4n0 ) ( * Nl3CT1 lam4n1 ) ( * Nl3CT2 lam4n2 ) ( - 1 ( + Nl3CT1 ( * Nl3i^01 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam4n0 ) ( * Nl3i^01 lam4n1 ) ( * Nl3i^02 lam4n2 ) ( - ( + 0 ( * Nl3i^01 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n2 0 ) ( > ( + ( * ( - 4 ) lam3n0 ) ( * Nl3CT1 lam3n1 ) ( * Nl3CT2 lam3n2 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam3n0 ) ( * Nl3i^01 lam3n1 ) ( * Nl3i^02 lam3n2 ) ) 0 ) ) ( and ( >= lam5n0 0 ) ( >= lam5n1 0 ) ( >= lam5n2 0 ) ( > ( + ( * ( - 4 ) lam5n0 ) ( * Nl3CT1 lam5n1 ) ( * Nl3CT2 lam5n2 ) ( - 1 ( + Nl3CT2 ( * Nl3i^02 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam5n0 ) ( * Nl3i^01 lam5n1 ) ( * Nl3i^02 lam5n2 ) ( - ( + 0 ( * Nl3i^02 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam6n1 0 ) ( >= lam6n2 0 ) ( >= lam6n3 0 ) ( > ( + ( * ( - 5 ) lam6n0 ) ( * UndefCntr2_CT lam6n1 ) ( * Nl3CT1 lam6n2 ) ( * Nl3CT2 lam6n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam6n0 ) ( * UndefCntr2_i^0 lam6n1 ) ( * Nl3i^01 lam6n2 ) ( * Nl3i^02 lam6n3 ) ) 0 ) ( = ( * UndefCntr2_undef9 lam6n1 ) 0 ) ) ( and ( >= lam7n1 0 ) ( >= lam7n2 0 ) ( >= lam7n3 0 ) ( > ( + ( * ( - 5 ) lam7n0 ) ( * UndefCntr2_CT lam7n1 ) ( * Nl3CT1 lam7n2 ) ( * Nl3CT2 lam7n3 ) ( - 1 ( + Nl3CT1 ( * Nl3i^01 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam7n0 ) ( * UndefCntr2_i^0 lam7n1 ) ( * Nl3i^01 lam7n2 ) ( * Nl3i^02 lam7n3 ) ) 0 ) ( = ( + ( * UndefCntr2_undef9 lam7n1 ) ( - ( + 0 ( * Nl3i^01 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam6n1 0 ) ( >= lam6n2 0 ) ( >= lam6n3 0 ) ( > ( + ( * ( - 5 ) lam6n0 ) ( * UndefCntr2_CT lam6n1 ) ( * Nl3CT1 lam6n2 ) ( * Nl3CT2 lam6n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam6n0 ) ( * UndefCntr2_i^0 lam6n1 ) ( * Nl3i^01 lam6n2 ) ( * Nl3i^02 lam6n3 ) ) 0 ) ( = ( * UndefCntr2_undef9 lam6n1 ) 0 ) ) ( and ( >= lam8n1 0 ) ( >= lam8n2 0 ) ( >= lam8n3 0 ) ( > ( + ( * ( - 5 ) lam8n0 ) ( * UndefCntr2_CT lam8n1 ) ( * Nl3CT1 lam8n2 ) ( * Nl3CT2 lam8n3 ) ( - 1 ( + Nl3CT2 ( * Nl3i^02 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam8n0 ) ( * UndefCntr2_i^0 lam8n1 ) ( * Nl3i^01 lam8n2 ) ( * Nl3i^02 lam8n3 ) ) 0 ) ( = ( + ( * UndefCntr2_undef9 lam8n1 ) ( - ( + 0 ( * Nl3i^02 1 ) ) ) ) 0 ) ) ))
(assert ( and ( <= ( + Nl3CT1 ( * Nl3i^01 FV_i^0_3 ) ) 0 ) ( <= ( + Nl3CT2 ( * Nl3i^02 FV_i^0_3 ) ) 0 ) ))
(assert ( or ( not ( = UndefCntr2_i^0 0 ) ) ( not ( = UndefCntr2_undef9 0 ) ) ( = UndefCntr2_CT 0 ) ))
(assert ( or ( = UndefCntr2_i^0 0 ) ( not ( = UndefCntr2_undef9 0 ) ) ))
(assert ( and ( >= lam11n0 0 ) ( >= lam11n1 0 ) ( >= lam11n2 0 ) ( > ( + ( * 10 lam11n0 ) ( * Nl3CT1 lam11n1 ) ( * Nl3CT2 lam11n2 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam11n0 ) ( * Nl3i^01 lam11n1 ) ( * Nl3i^02 lam11n2 ) ) 0 ) ))
(assert ( and ( and ( <= ( + Nl3CT1 ( * Nl3i^01 FV_i^0_4 ) ) 0 ) ( <= ( + Nl3CT2 ( * Nl3i^02 FV_i^0_4 ) ) 0 ) ) ( or ( and ( <= ( + 6 ( * ( - 1 ) FV_i^0_4 ) ) 0 ) ( <= ( + ( - 9 ) FV_i^0_4 ) 0 ) ) ( <= ( + ( - 4 ) FV_i^0_4 ) 0 ) ( = ( + ( - 5 ) FV_i^0_4 ) 0 ) ) ))
(check-sat)
(exit)
