(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun Nl3__const_100^01 () Int)
(declare-fun Nl3__const_32^01 () Int)
(declare-fun Nl3__const_50^01 () Int)
(declare-fun Nl3d^01 () Int)
(declare-fun Nl3i25^01 () Int)
(declare-fun Nl3j26^01 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun lam0n6 () Int)
(declare-fun Nl3CT1 () Int)
(declare-fun lam0n4 () Int)
(declare-fun lam0n5 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n6 () Int)
(declare-fun lam1n4 () Int)
(declare-fun lam1n5 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n5 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n4 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n5 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam3n4 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam4n2 () Int)
(declare-fun lam4n3 () Int)
(declare-fun lam4n4 () Int)
(declare-fun lam4n5 () Int)
(declare-fun lam4n6 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam5n3 () Int)
(declare-fun lam5n4 () Int)
(declare-fun lam5n5 () Int)
(declare-fun lam5n6 () Int)
(declare-fun lam5n7 () Int)
(declare-fun __const_50^0 () Int)
(declare-fun j20^0 () Int)
(declare-fun __const_100^0 () Int)
(declare-fun i19^0 () Int)
(declare-fun undef1003 () Int)
(declare-fun d^0 () Int)
(declare-fun undef1023 () Int)
(declare-fun __const_32^0 () Int)
(declare-fun __const_150^0 () Int)
(declare-fun i13^0 () Int)
(declare-fun sqr11^0 () Int)
(declare-fun undef1317 () Int)
(declare-fun undef1325 () Int)
(declare-fun lam6n0 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam6n2 () Int)
(declare-fun lam6n5 () Int)
(declare-fun lam6n3 () Int)
(declare-fun lam6n4 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam7n2 () Int)
(declare-fun lam7n5 () Int)
(declare-fun lam7n3 () Int)
(declare-fun lam7n4 () Int)
(assert ( and ( <= ( - 2 ) Nl3__const_100^01 ) ( <= Nl3__const_100^01 2 ) ( <= ( - 2 ) Nl3__const_32^01 ) ( <= Nl3__const_32^01 2 ) ( <= ( - 2 ) Nl3__const_50^01 ) ( <= Nl3__const_50^01 2 ) ( <= ( - 2 ) Nl3d^01 ) ( <= Nl3d^01 2 ) ( <= ( - 2 ) Nl3i25^01 ) ( <= Nl3i25^01 2 ) ( <= ( - 2 ) Nl3j26^01 ) ( <= Nl3j26^01 2 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( >= lam0n6 0 ) ( > ( + ( * 3 lam0n2 ) ( * 2 lam0n3 ) ( * Nl3CT1 lam0n6 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n2 ) ( * 1 lam0n4 ) ( * Nl3__const_100^01 lam0n6 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl3__const_32^01 lam0n6 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n1 ) ( * Nl3__const_50^01 lam0n6 ) ) 0 ) ( = ( + ( * 1 lam0n5 ) ( * Nl3d^01 lam0n6 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * Nl3i25^01 lam0n6 ) ) 0 ) ( = ( + ( * 1 lam0n2 ) ( * Nl3j26^01 lam0n6 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n3 ) ( * ( - 1 ) lam0n4 ) ) 0 ) ( = ( * ( - 1 ) lam0n5 ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n2 0 ) ( >= lam1n3 0 ) ( >= lam1n6 0 ) ( > ( + ( * 3 lam1n2 ) ( * 2 lam1n3 ) ( * Nl3CT1 lam1n6 ) ( - 1 ( + ( + Nl3CT1 ( * Nl3i25^01 0 ) ) ( * Nl3j26^01 2 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n2 ) ( * 1 lam1n4 ) ( * Nl3__const_100^01 lam1n6 ) ( - ( + 0 Nl3__const_100^01 ) ) ) 0 ) ( = ( + ( * 1 lam1n0 ) ( * Nl3__const_32^01 lam1n6 ) ( - ( + 0 Nl3__const_32^01 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n1 ) ( * Nl3__const_50^01 lam1n6 ) ( - ( + 0 Nl3__const_50^01 ) ) ) 0 ) ( = ( + ( * 1 lam1n5 ) ( * Nl3d^01 lam1n6 ) ( - ( + 0 Nl3d^01 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * Nl3i25^01 lam1n6 ) ) 0 ) ( = ( + ( * 1 lam1n2 ) ( * Nl3j26^01 lam1n6 ) ( - ( + 0 ( * Nl3j26^01 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n3 ) ( * ( - 1 ) lam1n4 ) ) 0 ) ( = ( * ( - 1 ) lam1n5 ) 0 ) ) ))
(assert ( or ( and ( >= lam2n0 0 ) ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( >= lam2n5 0 ) ( > ( + ( * 1 lam2n1 ) ( * 2 lam2n2 ) ( * Nl3CT1 lam2n5 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam2n3 ) ( * Nl3__const_100^01 lam2n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n1 ) ( * Nl3__const_32^01 lam2n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * Nl3__const_50^01 lam2n5 ) ) 0 ) ( = ( + ( * 1 lam2n4 ) ( * Nl3d^01 lam2n5 ) ) 0 ) ( = ( + ( * 1 lam2n1 ) ( * Nl3i25^01 lam2n5 ) ) 0 ) ( = ( * Nl3j26^01 lam2n5 ) 0 ) ( = ( + ( * ( - 1 ) lam2n2 ) ( * ( - 1 ) lam2n3 ) ) 0 ) ( = ( * ( - 1 ) lam2n4 ) 0 ) ) ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n2 0 ) ( >= lam3n5 0 ) ( > ( + ( * 1 lam3n1 ) ( * 2 lam3n2 ) ( * Nl3CT1 lam3n5 ) ( - 1 ( + Nl3CT1 ( * Nl3i25^01 2 ) ) ) ) 0 ) ( = ( + ( * 1 lam3n3 ) ( * Nl3__const_100^01 lam3n5 ) ( - ( + 0 Nl3__const_100^01 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n1 ) ( * Nl3__const_32^01 lam3n5 ) ( - ( + 0 Nl3__const_32^01 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n0 ) ( * Nl3__const_50^01 lam3n5 ) ( - ( + 0 Nl3__const_50^01 ) ) ) 0 ) ( = ( + ( * 1 lam3n4 ) ( * Nl3d^01 lam3n5 ) ( - ( + 0 Nl3d^01 ) ) ) 0 ) ( = ( + ( * 1 lam3n1 ) ( * Nl3i25^01 lam3n5 ) ( - ( + 0 ( * Nl3i25^01 1 ) ) ) ) 0 ) ( = ( + ( * Nl3j26^01 lam3n5 ) ( - ( + 0 Nl3j26^01 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n2 ) ( * ( - 1 ) lam3n3 ) ) 0 ) ( = ( * ( - 1 ) lam3n4 ) 0 ) ) ))
(assert ( or ( and ( <= ( + __const_50^0 ( * ( - 1 ) j20^0 ) ) 0 ) ( <= ( * ( - 1 ) __const_50^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_100^0 ) ) 0 ) ( <= ( + ( - 1 ) __const_50^0 ( * ( - 1 ) i19^0 ) ) 0 ) ( not ( <= ( + ( - 1 ) undef1003 ) 0 ) ) ( = ( + __const_100^0 ( * ( - 1 ) undef1003 ) ) 0 ) ( = ( + d^0 ( * ( - 1 ) undef1023 ) ) 0 ) ( <= ( + ( + ( + Nl3CT1 ( * Nl3i25^01 0 ) ) ( * Nl3j26^01 0 ) ) ( * ( + 0 Nl3__const_100^01 ) __const_100^0 ) ( * ( + 0 Nl3__const_32^01 ) __const_32^0 ) ( * ( + 0 Nl3__const_50^01 ) __const_50^0 ) ( * ( + 0 Nl3d^01 ) d^0 ) ) 0 ) ) ( and ( <= ( + __const_150^0 ( * ( - 1 ) i13^0 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_100^0 ) ) 0 ) ( not ( <= ( + ( - 1 ) undef1003 ) 0 ) ) ( = ( + __const_100^0 ( * ( - 1 ) undef1003 ) ) 0 ) ( = __const_50^0 0 ) ( = ( + d^0 ( * ( - 1 ) undef1023 ) ) 0 ) ( = ( + sqr11^0 ( * ( - 1 ) undef1317 ) ) 0 ) ( = ( + undef1317 ( * ( - 1 ) undef1325 ) ) 0 ) ( <= ( + ( + ( + Nl3CT1 ( * Nl3i25^01 0 ) ) ( * Nl3j26^01 0 ) ) ( * ( + 0 Nl3__const_100^01 ) __const_100^0 ) ( * ( + 0 Nl3__const_32^01 ) __const_32^0 ) ( * ( + 0 Nl3__const_50^01 ) __const_50^0 ) ( * ( + 0 Nl3d^01 ) d^0 ) ) 0 ) ) ))
(assert ( or ( or ( and ( >= lam6n0 0 ) ( >= lam6n1 0 ) ( >= lam6n2 0 ) ( >= lam6n5 0 ) ( > ( + ( * ( - 2 ) lam6n2 ) ( * Nl3CT1 lam6n5 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam6n2 ) ( * 1 lam6n3 ) ( * Nl3__const_100^01 lam6n5 ) ) 0 ) ( = ( + ( * 1 lam6n0 ) ( * Nl3__const_32^01 lam6n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n1 ) ( * Nl3__const_50^01 lam6n5 ) ) 0 ) ( = ( + ( * 1 lam6n4 ) ( * Nl3d^01 lam6n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n0 ) ( * Nl3i25^01 lam6n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n2 ) ( * Nl3j26^01 lam6n5 ) ) 0 ) ( = ( * ( - 1 ) lam6n3 ) 0 ) ( = ( * ( - 1 ) lam6n4 ) 0 ) ) ( and ( >= lam7n0 0 ) ( >= lam7n1 0 ) ( >= lam7n2 0 ) ( >= lam7n5 0 ) ( > ( + ( * ( - 2 ) lam7n2 ) ( * Nl3CT1 lam7n5 ) 2 ) 0 ) ( = ( + ( * 1 lam7n2 ) ( * 1 lam7n3 ) ( * Nl3__const_100^01 lam7n5 ) ) 0 ) ( = ( + ( * 1 lam7n0 ) ( * Nl3__const_32^01 lam7n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n1 ) ( * Nl3__const_50^01 lam7n5 ) ) 0 ) ( = ( + ( * 1 lam7n4 ) ( * Nl3d^01 lam7n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * Nl3i25^01 lam7n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n2 ) ( * Nl3j26^01 lam7n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n3 ) ( - 1 ) ) 0 ) ( = ( * ( - 1 ) lam7n4 ) 0 ) ) ) ( and ( or ( and ( <= ( + __const_50^0 ( * ( - 1 ) j20^0 ) ) 0 ) ( <= ( * ( - 1 ) __const_50^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_100^0 ) ) 0 ) ( <= ( + ( - 1 ) __const_50^0 ( * ( - 1 ) i19^0 ) ) 0 ) ( not ( <= ( + ( - 1 ) undef1003 ) 0 ) ) ( = ( + __const_100^0 ( * ( - 1 ) undef1003 ) ) 0 ) ( = ( + d^0 ( * ( - 1 ) undef1023 ) ) 0 ) ( <= ( + ( + ( + Nl3CT1 ( * Nl3i25^01 0 ) ) ( * Nl3j26^01 0 ) ) ( * ( + 0 Nl3__const_100^01 ) __const_100^0 ) ( * ( + 0 Nl3__const_32^01 ) __const_32^0 ) ( * ( + 0 Nl3__const_50^01 ) __const_50^0 ) ( * ( + 0 Nl3d^01 ) d^0 ) ) 0 ) ) ( and ( <= ( + __const_150^0 ( * ( - 1 ) i13^0 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) __const_100^0 ) ) 0 ) ( not ( <= ( + ( - 1 ) undef1003 ) 0 ) ) ( = ( + __const_100^0 ( * ( - 1 ) undef1003 ) ) 0 ) ( = __const_50^0 0 ) ( = ( + d^0 ( * ( - 1 ) undef1023 ) ) 0 ) ( = ( + sqr11^0 ( * ( - 1 ) undef1317 ) ) 0 ) ( = ( + undef1317 ( * ( - 1 ) undef1325 ) ) 0 ) ( <= ( + ( + ( + Nl3CT1 ( * Nl3i25^01 0 ) ) ( * Nl3j26^01 0 ) ) ( * ( + 0 Nl3__const_100^01 ) __const_100^0 ) ( * ( + 0 Nl3__const_32^01 ) __const_32^0 ) ( * ( + 0 Nl3__const_50^01 ) __const_50^0 ) ( * ( + 0 Nl3d^01 ) d^0 ) ) 0 ) ) ) ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( >= lam0n6 0 ) ( > ( + ( * 3 lam0n2 ) ( * 2 lam0n3 ) ( * Nl3CT1 lam0n6 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n2 ) ( * 1 lam0n4 ) ( * Nl3__const_100^01 lam0n6 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl3__const_32^01 lam0n6 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n1 ) ( * Nl3__const_50^01 lam0n6 ) ) 0 ) ( = ( + ( * 1 lam0n5 ) ( * Nl3d^01 lam0n6 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * Nl3i25^01 lam0n6 ) ) 0 ) ( = ( + ( * 1 lam0n2 ) ( * Nl3j26^01 lam0n6 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n3 ) ( * ( - 1 ) lam0n4 ) ) 0 ) ( = ( * ( - 1 ) lam0n5 ) 0 ) ) ( and ( >= lam2n0 0 ) ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( >= lam2n5 0 ) ( > ( + ( * 1 lam2n1 ) ( * 2 lam2n2 ) ( * Nl3CT1 lam2n5 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam2n3 ) ( * Nl3__const_100^01 lam2n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n1 ) ( * Nl3__const_32^01 lam2n5 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * Nl3__const_50^01 lam2n5 ) ) 0 ) ( = ( + ( * 1 lam2n4 ) ( * Nl3d^01 lam2n5 ) ) 0 ) ( = ( + ( * 1 lam2n1 ) ( * Nl3i25^01 lam2n5 ) ) 0 ) ( = ( * Nl3j26^01 lam2n5 ) 0 ) ( = ( + ( * ( - 1 ) lam2n2 ) ( * ( - 1 ) lam2n3 ) ) 0 ) ( = ( * ( - 1 ) lam2n4 ) 0 ) ) ) ) ))
(check-sat)
(exit)
