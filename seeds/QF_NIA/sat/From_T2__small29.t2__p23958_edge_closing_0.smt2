(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun Nl1x^01 () Int)
(declare-fun Nl1y^01 () Int)
(declare-fun Nl1x^02 () Int)
(declare-fun Nl1y^02 () Int)
(declare-fun Nl1x^03 () Int)
(declare-fun Nl1y^03 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun Nl1CT1 () Int)
(declare-fun Nl1CT2 () Int)
(declare-fun Nl1CT3 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam3n0 () Int)
(declare-fun x^0 () Int)
(declare-fun y^0 () Int)
(declare-fun FV_x^0_1 () Int)
(declare-fun FV_y^0_1 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam7n2 () Int)
(declare-fun lam7n3 () Int)
(declare-fun FV_x^0_2 () Int)
(declare-fun FV_y^0_2 () Int)
(assert ( and ( <= ( - 1 ) Nl1x^01 ) ( <= Nl1x^01 1 ) ( <= ( - 1 ) Nl1y^01 ) ( <= Nl1y^01 1 ) ( <= ( - 1 ) Nl1x^02 ) ( <= Nl1x^02 1 ) ( <= ( - 1 ) Nl1y^02 ) ( <= Nl1y^02 1 ) ( <= ( - 1 ) Nl1x^03 ) ( <= Nl1x^03 1 ) ( <= ( - 1 ) Nl1y^03 ) ( <= Nl1y^03 1 ) ))
(assert ( or ( and ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * Nl1CT1 lam0n1 ) ( * Nl1CT2 lam0n2 ) ( * Nl1CT3 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl1x^01 lam0n1 ) ( * Nl1x^02 lam0n2 ) ( * Nl1x^03 lam0n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * Nl1y^01 lam0n1 ) ( * Nl1y^02 lam0n2 ) ( * Nl1y^03 lam0n3 ) ) 0 ) ) ( and ( >= lam1n1 0 ) ( >= lam1n2 0 ) ( >= lam1n3 0 ) ( > ( + ( * Nl1CT1 lam1n1 ) ( * Nl1CT2 lam1n2 ) ( * Nl1CT3 lam1n3 ) ( - 1 Nl1CT1 ) ) 0 ) ( = ( + ( * 1 lam1n0 ) ( * Nl1x^01 lam1n1 ) ( * Nl1x^02 lam1n2 ) ( * Nl1x^03 lam1n3 ) ( - ( + 0 Nl1x^01 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * Nl1y^01 lam1n1 ) ( * Nl1y^02 lam1n2 ) ( * Nl1y^03 lam1n3 ) ( - ( + 0 Nl1y^01 ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * Nl1CT1 lam0n1 ) ( * Nl1CT2 lam0n2 ) ( * Nl1CT3 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl1x^01 lam0n1 ) ( * Nl1x^02 lam0n2 ) ( * Nl1x^03 lam0n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * Nl1y^01 lam0n1 ) ( * Nl1y^02 lam0n2 ) ( * Nl1y^03 lam0n3 ) ) 0 ) ) ( and ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( >= lam2n3 0 ) ( > ( + ( * Nl1CT1 lam2n1 ) ( * Nl1CT2 lam2n2 ) ( * Nl1CT3 lam2n3 ) ( - 1 Nl1CT2 ) ) 0 ) ( = ( + ( * 1 lam2n0 ) ( * Nl1x^01 lam2n1 ) ( * Nl1x^02 lam2n2 ) ( * Nl1x^03 lam2n3 ) ( - ( + 0 Nl1x^02 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * Nl1y^01 lam2n1 ) ( * Nl1y^02 lam2n2 ) ( * Nl1y^03 lam2n3 ) ( - ( + 0 Nl1y^02 ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * Nl1CT1 lam0n1 ) ( * Nl1CT2 lam0n2 ) ( * Nl1CT3 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl1x^01 lam0n1 ) ( * Nl1x^02 lam0n2 ) ( * Nl1x^03 lam0n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * Nl1y^01 lam0n1 ) ( * Nl1y^02 lam0n2 ) ( * Nl1y^03 lam0n3 ) ) 0 ) ) ( and ( >= lam3n1 0 ) ( >= lam3n2 0 ) ( >= lam3n3 0 ) ( > ( + ( * Nl1CT1 lam3n1 ) ( * Nl1CT2 lam3n2 ) ( * Nl1CT3 lam3n3 ) ( - 1 Nl1CT3 ) ) 0 ) ( = ( + ( * 1 lam3n0 ) ( * Nl1x^01 lam3n1 ) ( * Nl1x^02 lam3n2 ) ( * Nl1x^03 lam3n3 ) ( - ( + 0 Nl1x^03 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n0 ) ( * Nl1y^01 lam3n1 ) ( * Nl1y^02 lam3n2 ) ( * Nl1y^03 lam3n3 ) ( - ( + 0 Nl1y^03 ) ) ) 0 ) ) ))
(assert ( and ( <= ( + Nl1CT1 ( * Nl1x^01 FV_x^0_1 ) ( * Nl1y^01 FV_y^0_1 ) ) 0 ) ( <= ( + Nl1CT2 ( * Nl1x^02 FV_x^0_1 ) ( * Nl1y^02 FV_y^0_1 ) ) 0 ) ( <= ( + Nl1CT3 ( * Nl1x^03 FV_x^0_1 ) ( * Nl1y^03 FV_y^0_1 ) ) 0 ) ( <= ( + ( * ( - 1 ) FV_x^0_1 ) FV_y^0_1 ) 0 ) ))
(assert ( and ( >= lam7n0 0 ) ( >= lam7n1 0 ) ( >= lam7n2 0 ) ( >= lam7n3 0 ) ( > ( + ( * 1 lam7n0 ) ( * Nl1CT1 lam7n1 ) ( * Nl1CT2 lam7n2 ) ( * Nl1CT3 lam7n3 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * Nl1x^01 lam7n1 ) ( * Nl1x^02 lam7n2 ) ( * Nl1x^03 lam7n3 ) ) 0 ) ( = ( + ( * 1 lam7n0 ) ( * Nl1y^01 lam7n1 ) ( * Nl1y^02 lam7n2 ) ( * Nl1y^03 lam7n3 ) ) 0 ) ))
(assert ( and ( and ( <= ( + Nl1CT1 ( * Nl1x^01 FV_x^0_2 ) ( * Nl1y^01 FV_y^0_2 ) ) 0 ) ( <= ( + Nl1CT2 ( * Nl1x^02 FV_x^0_2 ) ( * Nl1y^02 FV_y^0_2 ) ) 0 ) ( <= ( + Nl1CT3 ( * Nl1x^03 FV_x^0_2 ) ( * Nl1y^03 FV_y^0_2 ) ) 0 ) ) ( = ( + FV_x^0_2 ( * ( - 1 ) FV_y^0_2 ) ) 0 ) ))
(check-sat)
(exit)
