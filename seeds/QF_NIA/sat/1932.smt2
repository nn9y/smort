(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun global_invc1_0 () Int)
(declare-fun global_invc1_1 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n5 () Int)
(declare-fun global_invc1_2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun lam0n4 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n5 () Int)
(declare-fun lam1n6 () Int)
(declare-fun lam1n7 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n4 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n5 () Int)
(declare-fun lam2n6 () Int)
(declare-fun lam2n7 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n4 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n4 () Int)
(declare-fun lam3n5 () Int)
(declare-fun lam3n6 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n3 () Int)
(declare-fun disabled3 () Bool)
(declare-fun non_inc3 () Bool)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam4n2 () Int)
(declare-fun lam4n5 () Int)
(declare-fun lam4n6 () Int)
(declare-fun lam4n7 () Int)
(declare-fun lam4n3 () Int)
(declare-fun lam4n4 () Int)
(declare-fun rfc0 () Int)
(declare-fun rfc1 () Int)
(declare-fun bounded3 () Bool)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam5n5 () Int)
(declare-fun lam5n6 () Int)
(declare-fun lam5n7 () Int)
(declare-fun lam5n3 () Int)
(declare-fun lam5n4 () Int)
(declare-fun rfc2 () Int)
(declare-fun dec3 () Bool)
(declare-fun lam6n0 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam6n2 () Int)
(declare-fun lam6n5 () Int)
(declare-fun lam6n6 () Int)
(declare-fun lam6n7 () Int)
(declare-fun lam6n3 () Int)
(declare-fun lam6n4 () Int)
(declare-fun bnd_and_dec3 () Bool)
(declare-fun disabled4 () Bool)
(declare-fun non_inc4 () Bool)
(declare-fun lam7n0 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam7n2 () Int)
(declare-fun lam7n5 () Int)
(declare-fun lam7n6 () Int)
(declare-fun lam7n7 () Int)
(declare-fun lam7n3 () Int)
(declare-fun lam7n4 () Int)
(declare-fun bounded4 () Bool)
(declare-fun lam8n0 () Int)
(declare-fun lam8n1 () Int)
(declare-fun lam8n2 () Int)
(declare-fun lam8n5 () Int)
(declare-fun lam8n6 () Int)
(declare-fun lam8n7 () Int)
(declare-fun lam8n3 () Int)
(declare-fun lam8n4 () Int)
(declare-fun dec4 () Bool)
(declare-fun lam9n0 () Int)
(declare-fun lam9n1 () Int)
(declare-fun lam9n2 () Int)
(declare-fun lam9n5 () Int)
(declare-fun lam9n6 () Int)
(declare-fun lam9n7 () Int)
(declare-fun lam9n3 () Int)
(declare-fun lam9n4 () Int)
(declare-fun bnd_and_dec4 () Bool)
(declare-fun disabled5 () Bool)
(declare-fun non_inc5 () Bool)
(declare-fun lam10n0 () Int)
(declare-fun lam10n1 () Int)
(declare-fun lam10n4 () Int)
(declare-fun lam10n5 () Int)
(declare-fun lam10n6 () Int)
(declare-fun lam10n2 () Int)
(declare-fun lam10n3 () Int)
(declare-fun bounded5 () Bool)
(declare-fun lam11n0 () Int)
(declare-fun lam11n1 () Int)
(declare-fun lam11n4 () Int)
(declare-fun lam11n5 () Int)
(declare-fun lam11n6 () Int)
(declare-fun lam11n2 () Int)
(declare-fun lam11n3 () Int)
(declare-fun dec5 () Bool)
(declare-fun lam12n0 () Int)
(declare-fun lam12n1 () Int)
(declare-fun lam12n4 () Int)
(declare-fun lam12n5 () Int)
(declare-fun lam12n6 () Int)
(declare-fun lam12n2 () Int)
(declare-fun lam12n3 () Int)
(declare-fun bnd_and_dec5 () Bool)
(declare-fun GLOBAL_NT_1 () Bool)
(declare-fun global_V0_1 () Int)
(declare-fun global_V1_1 () Int)
(declare-fun ALL_NON_INC_0 () Bool)
(declare-fun DIS_OR_ALL_NON_INC_0 () Bool)
(declare-fun SOME_BND_AND_DEC_0 () Bool)
(declare-fun V0_NIV () Int)
(declare-fun V1_NIV () Int)
(declare-fun V2_NIV () Int)
(declare-fun V3_NIV () Int)
(assert ( and ( >= global_invc1_0 ( - 1 ) ) ( <= global_invc1_0 1 ) ( >= global_invc1_1 ( - 1 ) ) ( <= global_invc1_1 1 ) ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( <= 0 lam0n5 ) ( < lam0n5 1 ) ( and ( = ( + ( * ( - 1 ) lam0n0 ) ( * lam0n1 ( - 9 ) ) ( * lam0n2 ( - 4 ) ) ) ( + global_invc1_2 ( * ( - 1 ) lam0n5 ) ) ) ( = ( * lam0n3 ( - 1 ) ) global_invc1_0 ) ( = ( * lam0n4 ( - 1 ) ) global_invc1_1 ) ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n2 0 ) ( >= lam1n5 0 ) ( >= lam1n6 0 ) ( <= 0 lam1n7 ) ( < lam1n7 1 ) ( and ( = ( + ( * ( - 1 ) lam1n0 ) ( * lam1n1 ( - 8 ) ) ( * lam1n2 5 ) ( * lam1n3 1 ) ( * lam1n4 1 ) ( * lam1n5 ( - 14 ) ) ( * lam1n6 global_invc1_2 ) ) ( + global_invc1_2 ( * ( - 1 ) lam1n7 ) ) ) ( = ( + ( * lam1n1 1 ) ( * lam1n2 ( - 1 ) ) ( * lam1n3 1 ) ( * lam1n4 1 ) ( * lam1n6 global_invc1_0 ) ) 0 ) ( = ( + ( * lam1n5 1 ) ( * lam1n6 global_invc1_1 ) ) 0 ) ( = ( * lam1n3 ( - 1 ) ) global_invc1_0 ) ( = ( * lam1n4 ( - 1 ) ) global_invc1_1 ) ) ) ( and ( >= lam2n0 0 ) ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( >= lam2n5 0 ) ( >= lam2n6 0 ) ( <= 0 lam2n7 ) ( < lam2n7 1 ) ( and ( = ( + ( * ( - 1 ) lam2n0 ) ( * lam2n1 ( - 8 ) ) ( * lam2n2 ( - 3 ) ) ( * lam2n3 1 ) ( * lam2n4 1 ) ( * lam2n5 ( - 14 ) ) ( * lam2n6 global_invc1_2 ) ) ( + global_invc1_2 ( * ( - 1 ) lam2n7 ) ) ) ( = ( + ( * lam2n1 1 ) ( * lam2n2 1 ) ( * lam2n3 1 ) ( * lam2n4 1 ) ( * lam2n6 global_invc1_0 ) ) 0 ) ( = ( + ( * lam2n5 1 ) ( * lam2n6 global_invc1_1 ) ) 0 ) ( = ( * lam2n3 ( - 1 ) ) global_invc1_0 ) ( = ( * lam2n4 ( - 1 ) ) global_invc1_1 ) ) ) ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n4 0 ) ( >= lam3n5 0 ) ( <= 0 lam3n6 ) ( < lam3n6 1 ) ( and ( = ( + ( * ( - 1 ) lam3n0 ) ( * lam3n1 ( - 8 ) ) ( * lam3n2 ( - 4 ) ) ( * lam3n4 ( - 14 ) ) ( * lam3n5 global_invc1_2 ) ) ( + global_invc1_2 ( * ( - 1 ) lam3n6 ) ) ) ( = ( + ( * lam3n1 1 ) ( * lam3n2 1 ) ( * lam3n5 global_invc1_0 ) ) 0 ) ( = ( + ( * lam3n3 1 ) ( * lam3n4 1 ) ( * lam3n5 global_invc1_1 ) ) 0 ) ( = ( * lam3n3 ( - 1 ) ) global_invc1_1 ) ( = 0 global_invc1_0 ) ) ) ( = disabled3 false ) ( = non_inc3 ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n2 0 ) ( >= lam4n5 0 ) ( >= lam4n6 0 ) ( <= 0 lam4n7 ) ( < lam4n7 1 ) ( and ( = ( + ( * ( - 1 ) lam4n0 ) ( * lam4n1 ( - 8 ) ) ( * lam4n2 5 ) ( * lam4n3 1 ) ( * lam4n4 1 ) ( * lam4n5 ( - 14 ) ) ( * lam4n6 global_invc1_2 ) ) ( + 0 ( * ( - 1 ) lam4n7 ) ) ) ( = ( + ( * lam4n1 1 ) ( * lam4n2 ( - 1 ) ) ( * lam4n3 1 ) ( * lam4n4 1 ) ( * lam4n6 global_invc1_0 ) ) ( * ( - 1 ) rfc0 ) ) ( = ( + ( * lam4n5 1 ) ( * lam4n6 global_invc1_1 ) ) ( * ( - 1 ) rfc1 ) ) ( = ( * lam4n3 ( - 1 ) ) rfc0 ) ( = ( * lam4n4 ( - 1 ) ) rfc1 ) ) ) ) ( = bounded3 ( and ( >= lam5n0 0 ) ( >= lam5n1 0 ) ( >= lam5n2 0 ) ( >= lam5n5 0 ) ( >= lam5n6 0 ) ( <= 0 lam5n7 ) ( < lam5n7 1 ) ( and ( = ( + ( * ( - 1 ) lam5n0 ) ( * lam5n1 ( - 8 ) ) ( * lam5n2 5 ) ( * lam5n3 1 ) ( * lam5n4 1 ) ( * lam5n5 ( - 14 ) ) ( * lam5n6 global_invc1_2 ) ) ( + ( * ( - 1 ) rfc2 ) ( * ( - 1 ) lam5n7 ) ) ) ( = ( + ( * lam5n1 1 ) ( * lam5n2 ( - 1 ) ) ( * lam5n3 1 ) ( * lam5n4 1 ) ( * lam5n6 global_invc1_0 ) ) ( * ( - 1 ) rfc0 ) ) ( = ( + ( * lam5n5 1 ) ( * lam5n6 global_invc1_1 ) ) ( * ( - 1 ) rfc1 ) ) ( = ( * lam5n3 ( - 1 ) ) 0 ) ( = ( * lam5n4 ( - 1 ) ) 0 ) ) ) ) ( = dec3 ( and ( >= lam6n0 0 ) ( >= lam6n1 0 ) ( >= lam6n2 0 ) ( >= lam6n5 0 ) ( >= lam6n6 0 ) ( <= 0 lam6n7 ) ( < lam6n7 1 ) ( and ( = ( + ( * ( - 1 ) lam6n0 ) ( * lam6n1 ( - 8 ) ) ( * lam6n2 5 ) ( * lam6n3 1 ) ( * lam6n4 1 ) ( * lam6n5 ( - 14 ) ) ( * lam6n6 global_invc1_2 ) ) ( + 1 ( * ( - 1 ) lam6n7 ) ) ) ( = ( + ( * lam6n1 1 ) ( * lam6n2 ( - 1 ) ) ( * lam6n3 1 ) ( * lam6n4 1 ) ( * lam6n6 global_invc1_0 ) ) ( * ( - 1 ) rfc0 ) ) ( = ( + ( * lam6n5 1 ) ( * lam6n6 global_invc1_1 ) ) ( * ( - 1 ) rfc1 ) ) ( = ( * lam6n3 ( - 1 ) ) rfc0 ) ( = ( * lam6n4 ( - 1 ) ) rfc1 ) ) ) ) ( = bnd_and_dec3 ( and bounded3 dec3 ) ) ( = disabled4 false ) ( = non_inc4 ( and ( >= lam7n0 0 ) ( >= lam7n1 0 ) ( >= lam7n2 0 ) ( >= lam7n5 0 ) ( >= lam7n6 0 ) ( <= 0 lam7n7 ) ( < lam7n7 1 ) ( and ( = ( + ( * ( - 1 ) lam7n0 ) ( * lam7n1 ( - 8 ) ) ( * lam7n2 ( - 3 ) ) ( * lam7n3 1 ) ( * lam7n4 1 ) ( * lam7n5 ( - 14 ) ) ( * lam7n6 global_invc1_2 ) ) ( + 0 ( * ( - 1 ) lam7n7 ) ) ) ( = ( + ( * lam7n1 1 ) ( * lam7n2 1 ) ( * lam7n3 1 ) ( * lam7n4 1 ) ( * lam7n6 global_invc1_0 ) ) ( * ( - 1 ) rfc0 ) ) ( = ( + ( * lam7n5 1 ) ( * lam7n6 global_invc1_1 ) ) ( * ( - 1 ) rfc1 ) ) ( = ( * lam7n3 ( - 1 ) ) rfc0 ) ( = ( * lam7n4 ( - 1 ) ) rfc1 ) ) ) ) ( = bounded4 ( and ( >= lam8n0 0 ) ( >= lam8n1 0 ) ( >= lam8n2 0 ) ( >= lam8n5 0 ) ( >= lam8n6 0 ) ( <= 0 lam8n7 ) ( < lam8n7 1 ) ( and ( = ( + ( * ( - 1 ) lam8n0 ) ( * lam8n1 ( - 8 ) ) ( * lam8n2 ( - 3 ) ) ( * lam8n3 1 ) ( * lam8n4 1 ) ( * lam8n5 ( - 14 ) ) ( * lam8n6 global_invc1_2 ) ) ( + ( * ( - 1 ) rfc2 ) ( * ( - 1 ) lam8n7 ) ) ) ( = ( + ( * lam8n1 1 ) ( * lam8n2 1 ) ( * lam8n3 1 ) ( * lam8n4 1 ) ( * lam8n6 global_invc1_0 ) ) ( * ( - 1 ) rfc0 ) ) ( = ( + ( * lam8n5 1 ) ( * lam8n6 global_invc1_1 ) ) ( * ( - 1 ) rfc1 ) ) ( = ( * lam8n3 ( - 1 ) ) 0 ) ( = ( * lam8n4 ( - 1 ) ) 0 ) ) ) ) ( = dec4 ( and ( >= lam9n0 0 ) ( >= lam9n1 0 ) ( >= lam9n2 0 ) ( >= lam9n5 0 ) ( >= lam9n6 0 ) ( <= 0 lam9n7 ) ( < lam9n7 1 ) ( and ( = ( + ( * ( - 1 ) lam9n0 ) ( * lam9n1 ( - 8 ) ) ( * lam9n2 ( - 3 ) ) ( * lam9n3 1 ) ( * lam9n4 1 ) ( * lam9n5 ( - 14 ) ) ( * lam9n6 global_invc1_2 ) ) ( + 1 ( * ( - 1 ) lam9n7 ) ) ) ( = ( + ( * lam9n1 1 ) ( * lam9n2 1 ) ( * lam9n3 1 ) ( * lam9n4 1 ) ( * lam9n6 global_invc1_0 ) ) ( * ( - 1 ) rfc0 ) ) ( = ( + ( * lam9n5 1 ) ( * lam9n6 global_invc1_1 ) ) ( * ( - 1 ) rfc1 ) ) ( = ( * lam9n3 ( - 1 ) ) rfc0 ) ( = ( * lam9n4 ( - 1 ) ) rfc1 ) ) ) ) ( = bnd_and_dec4 ( and bounded4 dec4 ) ) ( = disabled5 false ) ( = non_inc5 ( and ( >= lam10n0 0 ) ( >= lam10n1 0 ) ( >= lam10n4 0 ) ( >= lam10n5 0 ) ( <= 0 lam10n6 ) ( < lam10n6 1 ) ( and ( = ( + ( * ( - 1 ) lam10n0 ) ( * lam10n1 ( - 8 ) ) ( * lam10n2 ( - 4 ) ) ( * lam10n4 ( - 14 ) ) ( * lam10n5 global_invc1_2 ) ) ( + 0 ( * ( - 1 ) lam10n6 ) ) ) ( = ( + ( * lam10n1 1 ) ( * lam10n2 1 ) ( * lam10n5 global_invc1_0 ) ) ( * ( - 1 ) rfc0 ) ) ( = ( + ( * lam10n3 1 ) ( * lam10n4 1 ) ( * lam10n5 global_invc1_1 ) ) ( * ( - 1 ) rfc1 ) ) ( = ( * lam10n3 ( - 1 ) ) rfc1 ) ( = 0 rfc0 ) ) ) ) ( = bounded5 ( and ( >= lam11n0 0 ) ( >= lam11n1 0 ) ( >= lam11n4 0 ) ( >= lam11n5 0 ) ( <= 0 lam11n6 ) ( < lam11n6 1 ) ( and ( = ( + ( * ( - 1 ) lam11n0 ) ( * lam11n1 ( - 8 ) ) ( * lam11n2 ( - 4 ) ) ( * lam11n4 ( - 14 ) ) ( * lam11n5 global_invc1_2 ) ) ( + ( * ( - 1 ) rfc2 ) ( * ( - 1 ) lam11n6 ) ) ) ( = ( + ( * lam11n1 1 ) ( * lam11n2 1 ) ( * lam11n5 global_invc1_0 ) ) ( * ( - 1 ) rfc0 ) ) ( = ( + ( * lam11n3 1 ) ( * lam11n4 1 ) ( * lam11n5 global_invc1_1 ) ) ( * ( - 1 ) rfc1 ) ) ( = ( * lam11n3 ( - 1 ) ) 0 ) ) ) ) ( = dec5 ( and ( >= lam12n0 0 ) ( >= lam12n1 0 ) ( >= lam12n4 0 ) ( >= lam12n5 0 ) ( <= 0 lam12n6 ) ( < lam12n6 1 ) ( and ( = ( + ( * ( - 1 ) lam12n0 ) ( * lam12n1 ( - 8 ) ) ( * lam12n2 ( - 4 ) ) ( * lam12n4 ( - 14 ) ) ( * lam12n5 global_invc1_2 ) ) ( + 1 ( * ( - 1 ) lam12n6 ) ) ) ( = ( + ( * lam12n1 1 ) ( * lam12n2 1 ) ( * lam12n5 global_invc1_0 ) ) ( * ( - 1 ) rfc0 ) ) ( = ( + ( * lam12n3 1 ) ( * lam12n4 1 ) ( * lam12n5 global_invc1_1 ) ) ( * ( - 1 ) rfc1 ) ) ( = ( * lam12n3 ( - 1 ) ) rfc1 ) ( = 0 rfc0 ) ) ) ) ( = bnd_and_dec5 ( and bounded5 dec5 ) ) ( = GLOBAL_NT_1 ( or ( not ( = global_invc1_0 0 ) ) ( not ( = global_invc1_1 0 ) ) ) ) ( or ( and ( not ( <= ( + global_invc1_2 ( * global_invc1_0 global_V0_1 ) ( * global_invc1_1 global_V1_1 ) ) 0 ) ) ( <= ( + 0 global_V1_1 ( - 14 ) ) 0 ) ) ( and ( = global_invc1_0 0 ) ( = global_invc1_1 0 ) ) ) ( = ALL_NON_INC_0 ( and non_inc3 non_inc4 non_inc5 ) ) ( = DIS_OR_ALL_NON_INC_0 ( or disabled3 disabled4 disabled5 ALL_NON_INC_0 ) ) ( = SOME_BND_AND_DEC_0 ( or bnd_and_dec3 bnd_and_dec4 bnd_and_dec5 ) ) ( or ( not ALL_NON_INC_0 ) ( and ( >= rfc0 ( - 2 ) ) ( <= rfc0 2 ) ( >= rfc1 ( - 2 ) ) ( <= rfc1 2 ) ( or ( not ( = rfc0 0 ) ) ( not ( = rfc1 0 ) ) ) ( >= rfc2 0 ) ( or SOME_BND_AND_DEC_0 ( <= ( + ( * rfc0 V0_NIV ) ( * rfc1 V1_NIV ) 1 ) ( + ( * rfc0 V2_NIV ) ( * rfc1 V3_NIV ) ) ) ) ) ) ( or GLOBAL_NT_1 ALL_NON_INC_0 ) ))
(check-sat)
(exit)
