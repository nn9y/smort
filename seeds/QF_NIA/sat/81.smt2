(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun global_invc1_0 () Int)
(declare-fun global_invc1_1 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun lam0n5 () Int)
(declare-fun global_invc1_2 () Int)
(declare-fun lam0n4 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n4 () Int)
(declare-fun lam1n6 () Int)
(declare-fun lam1n7 () Int)
(declare-fun lam1n9 () Int)
(declare-fun lam1n8 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n5 () Int)
(declare-fun global_disabled7 () Bool)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n4 () Int)
(declare-fun lam2n6 () Int)
(declare-fun lam2n7 () Int)
(declare-fun lam2n9 () Int)
(declare-fun lam2n8 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n5 () Int)
(declare-fun global_disabled15 () Bool)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam3n4 () Int)
(declare-fun lam3n6 () Int)
(declare-fun lam3n7 () Int)
(declare-fun lam3n9 () Int)
(declare-fun lam3n8 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n5 () Int)
(declare-fun global_disabled19 () Bool)
(declare-fun disabled7 () Bool)
(declare-fun disabled15 () Bool)
(declare-fun disabled19 () Bool)
(declare-fun GLOBAL_NT_1 () Bool)
(declare-fun global_V0_1 () Int)
(declare-fun global_V1_1 () Int)
(assert ( and ( >= global_invc1_0 ( - 1 ) ) ( <= global_invc1_0 1 ) ( >= global_invc1_1 ( - 1 ) ) ( <= global_invc1_1 1 ) ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( <= 0 lam0n5 ) ( < lam0n5 1 ) ( and ( = ( + ( * ( - 1 ) lam0n0 ) ( * lam0n1 1 ) ( * lam0n2 2 ) ( * lam0n3 3 ) ) ( + global_invc1_2 ( * ( - 1 ) lam0n5 ) ) ) ( = ( * lam0n4 1 ) 0 ) ( = ( + ( * lam0n1 ( - 1 ) ) ( * lam0n2 ( - 1 ) ) ( * lam0n3 ( - 1 ) ) ) global_invc1_0 ) ( = ( * lam0n4 ( - 1 ) ) global_invc1_1 ) ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n3 0 ) ( >= lam1n4 0 ) ( >= lam1n6 0 ) ( >= lam1n7 0 ) ( <= 0 lam1n9 ) ( < lam1n9 1 ) ( <= lam1n8 1 ) ( >= lam1n8 0 ) ( and ( > ( + ( * ( - 1 ) lam1n0 ) ( * lam1n1 ( - 3 ) ) ( * lam1n2 1 ) ( * lam1n3 1 ) ( * lam1n4 2 ) ( * lam1n5 1 ) ( * lam1n6 1 ) ( * lam1n7 global_invc1_2 ) ( * lam1n8 ( + ( + ( * ( - 1 ) global_invc1_2 ) 1 ) ( * ( - 1 ) lam1n9 ) ) ) ) 0 ) ( = ( + ( * lam1n1 1 ) ( * lam1n2 ( - 1 ) ) ( * lam1n3 ( - 3 ) ) ( * lam1n4 ( - 3 ) ) ( * lam1n5 3 ) ( * lam1n6 ( - 1 ) ) ( * lam1n7 global_invc1_0 ) ) 0 ) ( = ( * lam1n7 global_invc1_1 ) 0 ) ( = ( + ( * lam1n5 ( - 1 ) ) ( * lam1n8 ( * ( - 1 ) global_invc1_0 ) ) ) 0 ) ( = ( + ( * lam1n2 2 ) ( * lam1n8 ( * ( - 1 ) global_invc1_1 ) ) ) 0 ) ) ) ( = global_disabled7 ( = lam1n8 0 ) ) ( and ( >= lam2n0 0 ) ( >= lam2n1 0 ) ( >= lam2n3 0 ) ( >= lam2n4 0 ) ( >= lam2n6 0 ) ( >= lam2n7 0 ) ( <= 0 lam2n9 ) ( < lam2n9 1 ) ( <= lam2n8 1 ) ( >= lam2n8 0 ) ( and ( > ( + ( * ( - 1 ) lam2n0 ) ( * lam2n1 5 ) ( * lam2n2 1 ) ( * lam2n3 1 ) ( * lam2n4 2 ) ( * lam2n5 1 ) ( * lam2n6 1 ) ( * lam2n7 global_invc1_2 ) ( * lam2n8 ( + ( + ( * ( - 1 ) global_invc1_2 ) 1 ) ( * ( - 1 ) lam2n9 ) ) ) ) 0 ) ( = ( + ( * lam2n1 ( - 1 ) ) ( * lam2n2 ( - 1 ) ) ( * lam2n3 ( - 3 ) ) ( * lam2n4 ( - 3 ) ) ( * lam2n5 3 ) ( * lam2n6 ( - 1 ) ) ( * lam2n7 global_invc1_0 ) ) 0 ) ( = ( * lam2n7 global_invc1_1 ) 0 ) ( = ( + ( * lam2n5 ( - 1 ) ) ( * lam2n8 ( * ( - 1 ) global_invc1_0 ) ) ) 0 ) ( = ( + ( * lam2n2 2 ) ( * lam2n8 ( * ( - 1 ) global_invc1_1 ) ) ) 0 ) ) ) ( = global_disabled15 ( = lam2n8 0 ) ) ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n3 0 ) ( >= lam3n4 0 ) ( >= lam3n6 0 ) ( >= lam3n7 0 ) ( <= 0 lam3n9 ) ( < lam3n9 1 ) ( <= lam3n8 1 ) ( >= lam3n8 0 ) ( and ( > ( + ( * ( - 1 ) lam3n0 ) ( * lam3n1 5 ) ( * lam3n3 2 ) ( * lam3n4 3 ) ( * lam3n6 1 ) ( * lam3n7 global_invc1_2 ) ( * lam3n8 ( + ( + ( * ( - 1 ) global_invc1_2 ) 1 ) ( * ( - 1 ) lam3n9 ) ) ) ) 0 ) ( = ( + ( * lam3n1 ( - 1 ) ) ( * lam3n2 ( - 1 ) ) ( * lam3n6 ( - 1 ) ) ( * lam3n7 global_invc1_0 ) ) 0 ) ( = ( * lam3n7 global_invc1_1 ) 0 ) ( = ( + ( * lam3n2 2 ) ( * lam3n3 ( - 1 ) ) ( * lam3n4 ( - 1 ) ) ( * lam3n5 1 ) ( * lam3n8 ( * ( - 1 ) global_invc1_0 ) ) ) 0 ) ( = ( + ( * lam3n5 ( - 1 ) ) ( * lam3n8 ( * ( - 1 ) global_invc1_1 ) ) ) 0 ) ) ) ( = global_disabled19 ( = lam3n8 0 ) ) ( = disabled7 global_disabled7 ) ( = disabled15 global_disabled15 ) ( = disabled19 global_disabled19 ) ( = GLOBAL_NT_1 ( or ( not ( = global_invc1_0 0 ) ) ( not ( = global_invc1_1 0 ) ) ) ) ( or ( and ( not ( <= ( + global_invc1_2 ( * global_invc1_0 global_V0_1 ) ( * global_invc1_1 global_V1_1 ) ) 0 ) ) ( <= ( + ( * ( - 1 ) global_V0_1 ) 0 1 ) 0 ) ) ( and ( = global_invc1_0 0 ) ( = global_invc1_1 0 ) ) ) GLOBAL_NT_1 ))
(check-sat)
(exit)
