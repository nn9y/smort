(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((List!1167 0)) (((Cons!1168 (head!1169 (_ BitVec 32)) (tail!1170 List!1167)) (Nil!1171))
))
(declare-datatypes ((OptInt!1172 0)) (((None!1173) (Some!1174 (i!1175 (_ BitVec 32))))
))
(declare-fun error_value!1176 () OptInt!1172)
(declare-fun error_value!1177 () OptInt!1172)
(declare-fun max!216 (List!1167) OptInt!1172)
(declare-fun error_value!1178 () List!1167)
(declare-fun equals!239 ((_ BitVec 32) List!1167) List!1167)
(declare-fun error_value!1179 () Bool)
(declare-sort I_max!216 0)
(declare-fun max!216_arg_0_1 (I_max!216) List!1167)
(declare-sort I_equals!239 0)
(declare-fun equals!239_arg_0_2 (I_equals!239) (_ BitVec 32))
(declare-fun equals!239_arg_1_3 (I_equals!239) List!1167)
(assert (forall ((?i I_max!216)) (and (= (max!216 (max!216_arg_0_1 ?i)) (ite ((_ is Nil!1171) (max!216_arg_0_1 ?i)) None!1173 (ite ((_ is Cons!1168) (max!216_arg_0_1 ?i)) (ite ((_ is Some!1174) (max!216 (tail!1170 (max!216_arg_0_1 ?i)))) (ite (not (bvslt (head!1169 (max!216_arg_0_1 ?i)) (i!1175 (max!216 (tail!1170 (max!216_arg_0_1 ?i)))))) (Some!1174 (head!1169 (max!216_arg_0_1 ?i))) (Some!1174 (i!1175 (max!216 (tail!1170 (max!216_arg_0_1 ?i)))))) (ite ((_ is None!1173) (max!216 (tail!1170 (max!216_arg_0_1 ?i)))) (Some!1174 (head!1169 (max!216_arg_0_1 ?i))) error_value!1176)) error_value!1177))) (ite ((_ is Nil!1171) (max!216_arg_0_1 ?i)) true (ite ((_ is Cons!1168) (max!216_arg_0_1 ?i)) (and (not (forall ((?z I_max!216)) (not (= (max!216_arg_0_1 ?z) (tail!1170 (max!216_arg_0_1 ?i)))) )) (ite ((_ is Some!1174) (max!216 (tail!1170 (max!216_arg_0_1 ?i)))) (and (not (forall ((?z I_max!216)) (not (= (max!216_arg_0_1 ?z) (tail!1170 (max!216_arg_0_1 ?i)))) )) (ite (not (bvslt (head!1169 (max!216_arg_0_1 ?i)) (i!1175 (max!216 (tail!1170 (max!216_arg_0_1 ?i)))))) true (not (forall ((?z I_max!216)) (not (= (max!216_arg_0_1 ?z) (tail!1170 (max!216_arg_0_1 ?i)))) )))) (not (forall ((?z I_max!216)) (not (= (max!216_arg_0_1 ?z) (tail!1170 (max!216_arg_0_1 ?i)))) )))) true))) ))
(assert (forall ((?i I_equals!239)) (and (= (equals!239 (equals!239_arg_0_2 ?i) (equals!239_arg_1_3 ?i)) (ite ((_ is Nil!1171) (equals!239_arg_1_3 ?i)) Nil!1171 (ite ((_ is Cons!1168) (equals!239_arg_1_3 ?i)) (ite (= (head!1169 (equals!239_arg_1_3 ?i)) (equals!239_arg_0_2 ?i)) (Cons!1168 (head!1169 (equals!239_arg_1_3 ?i)) (equals!239 (equals!239_arg_0_2 ?i) (tail!1170 (equals!239_arg_1_3 ?i)))) (equals!239 (equals!239_arg_0_2 ?i) (tail!1170 (equals!239_arg_1_3 ?i)))) error_value!1178))) (ite ((_ is Nil!1171) (equals!239_arg_1_3 ?i)) true (ite ((_ is Cons!1168) (equals!239_arg_1_3 ?i)) (ite (= (head!1169 (equals!239_arg_1_3 ?i)) (equals!239_arg_0_2 ?i)) (not (forall ((?z I_equals!239)) (not (and (= (equals!239_arg_0_2 ?z) (equals!239_arg_0_2 ?i)) (= (equals!239_arg_1_3 ?z) (tail!1170 (equals!239_arg_1_3 ?i))))) )) (not (forall ((?z I_equals!239)) (not (and (= (equals!239_arg_0_2 ?z) (equals!239_arg_0_2 ?i)) (= (equals!239_arg_1_3 ?z) (tail!1170 (equals!239_arg_1_3 ?i))))) ))) true))) ))
(assert (not (forall ((n!240 (_ BitVec 32))) (or (ite ((_ is None!1173) (max!216 (equals!239 n!240 Nil!1171))) (or (= (i!1175 (max!216 (equals!239 n!240 Nil!1171))) n!240) (forall ((?z I_max!216)) (not (= (max!216_arg_0_1 ?z) (equals!239 n!240 Nil!1171))) ) (forall ((?z I_equals!239)) (not (and (= (equals!239_arg_0_2 ?z) n!240) (= (equals!239_arg_1_3 ?z) Nil!1171))) )) (or (ite ((_ is Some!1174) (max!216 (equals!239 n!240 Nil!1171))) true error_value!1179) (forall ((?z I_max!216)) (not (= (max!216_arg_0_1 ?z) (equals!239 n!240 Nil!1171))) ) (forall ((?z I_equals!239)) (not (and (= (equals!239_arg_0_2 ?z) n!240) (= (equals!239_arg_1_3 ?z) Nil!1171))) ))) (forall ((?z I_max!216)) (not (= (max!216_arg_0_1 ?z) (equals!239 n!240 Nil!1171))) ) (forall ((?z I_equals!239)) (not (and (= (equals!239_arg_0_2 ?z) n!240) (= (equals!239_arg_1_3 ?z) Nil!1171))) )) )))
(check-sat)
(exit)

