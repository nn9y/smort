(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((List!1122 0)) (((Cons!1123 (head!1124 (_ BitVec 32)) (tail!1125 List!1122)) (Nil!1126))
))
(declare-fun error_value!1127 () (_ BitVec 32))
(declare-fun listSize!229 (List!1122) (_ BitVec 32))
(declare-fun error_value!1128 () (_ BitVec 32))
(declare-sort I_listSize!229 0)
(declare-fun listSize!229_arg_0_1 (I_listSize!229) List!1122)
(assert (forall ((?i I_listSize!229)) (and (= (ite ((_ is Nil!1126) (listSize!229_arg_0_1 ?i)) (_ bv0 32) (ite ((_ is Cons!1123) (listSize!229_arg_0_1 ?i)) (bvadd (listSize!229 (tail!1125 (listSize!229_arg_0_1 ?i))) (_ bv1 32)) error_value!1127)) (listSize!229 (listSize!229_arg_0_1 ?i))) (ite ((_ is Nil!1126) (listSize!229_arg_0_1 ?i)) true (ite ((_ is Cons!1123) (listSize!229_arg_0_1 ?i)) (not (forall ((?z I_listSize!229)) (not (= (listSize!229_arg_0_1 ?z) (tail!1125 (listSize!229_arg_0_1 ?i)))) )) true))) ))
(check-sat)
(exit)

