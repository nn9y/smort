(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Tree!915 0)) (((Leaf!916) (Node!917 (nvalue!918 (_ BitVec 32)) (left!919 Tree!915) (right!920 Tree!915)))
))
(declare-fun error_value!921 () (_ BitVec 32))
(declare-fun height!209 (Tree!915) (_ BitVec 32))
(declare-fun error_value!922 () (_ BitVec 32))
(declare-sort I_height!209 0)
(declare-fun height!209_arg_0_1 (I_height!209) Tree!915)
(assert (forall ((?i I_height!209)) (and (= (ite ((_ is Leaf!916) (height!209_arg_0_1 ?i)) (_ bv0 32) (ite ((_ is Node!917) (height!209_arg_0_1 ?i)) (ite (bvslt (height!209 (right!920 (height!209_arg_0_1 ?i))) (height!209 (left!919 (height!209_arg_0_1 ?i)))) (bvadd (height!209 (left!919 (height!209_arg_0_1 ?i))) (_ bv1 32)) (bvadd (height!209 (right!920 (height!209_arg_0_1 ?i))) (_ bv1 32))) error_value!921)) (height!209 (height!209_arg_0_1 ?i))) (ite ((_ is Leaf!916) (height!209_arg_0_1 ?i)) true (ite ((_ is Node!917) (height!209_arg_0_1 ?i)) (and (not (forall ((?z I_height!209)) (not (= (height!209_arg_0_1 ?z) (right!920 (height!209_arg_0_1 ?i)))) )) (not (forall ((?z I_height!209)) (not (= (height!209_arg_0_1 ?z) (left!919 (height!209_arg_0_1 ?i)))) )) (ite (bvslt (height!209 (right!920 (height!209_arg_0_1 ?i))) (height!209 (left!919 (height!209_arg_0_1 ?i)))) (not (forall ((?z I_height!209)) (not (= (height!209_arg_0_1 ?z) (left!919 (height!209_arg_0_1 ?i)))) )) (not (forall ((?z I_height!209)) (not (= (height!209_arg_0_1 ?z) (right!920 (height!209_arg_0_1 ?i)))) )))) true))) ))
(check-sat)
(exit)

