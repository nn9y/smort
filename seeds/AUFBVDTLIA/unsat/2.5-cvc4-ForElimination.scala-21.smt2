(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Statement!2368 0)(Expression!2390 0)(List!2429 0)) (((Assign!2369 (varID!2370 (_ BitVec 32)) (expr!2371 Expression!2390)) (Block!2372 (body!2373 List!2429)) (For!2374 (init!2375 Statement!2368) (expr!2376 Expression!2390) (step!2377 Statement!2368) (body!2378 Statement!2368)) (IfThenElse!2379 (expr!2380 Expression!2390) (then!2381 Statement!2368) (elze!2382 Statement!2368)) (Print!2383 (msg!2384 (_ BitVec 32)) (varID!2385 (_ BitVec 32))) (Skip!2386) (While!2387 (expr!2388 Expression!2390) (body!2389 Statement!2368)))
((And!2391 (lhs!2392 Expression!2390) (rhs!2393 Expression!2390)) (Division!2394 (lhs!2395 Expression!2390) (rhs!2396 Expression!2390)) (Equals!2397 (lhs!2398 Expression!2390) (rhs!2399 Expression!2390)) (GreaterThan!2400 (lhs!2401 Expression!2390) (rhs!2402 Expression!2390)) (IntLiteral!2403 (value!2404 (_ BitVec 32))) (LessThan!2405 (lhs!2406 Expression!2390) (rhs!2407 Expression!2390)) (Minus!2408 (lhs!2409 Expression!2390) (rhs!2410 Expression!2390)) (Modulo!2411 (lhs!2412 Expression!2390) (rhs!2413 Expression!2390)) (Neg!2414 (expr!2415 Expression!2390)) (Not!2416 (expr!2417 Expression!2390)) (Or!2418 (lhs!2419 Expression!2390) (rhs!2420 Expression!2390)) (Plus!2421 (lhs!2422 Expression!2390) (rhs!2423 Expression!2390)) (Times!2424 (lhs!2425 Expression!2390) (rhs!2426 Expression!2390)) (Var!2427 (varID!2428 (_ BitVec 32))))
((Cons!2430 (head!2431 Statement!2368) (tail!2432 List!2429)) (Nil!2433))
))
(declare-fun error_value!2434 () Bool)
(declare-fun isWhileFree!221 (Statement!2368) Bool)
(declare-fun isWhileFreeList!219 (List!2429) Bool)
(declare-fun error_value!2435 () List!2429)
(declare-fun eliminateWhileLoops!213 (Statement!2368) Statement!2368)
(declare-fun eliminateWhileLoopsList!211 (List!2429) List!2429)
(assert (forall ((stat!220 Statement!2368)) (= (isWhileFree!221 stat!220) (ite ((_ is Block!2372) stat!220) (isWhileFreeList!219 (body!2373 stat!220)) (ite ((_ is IfThenElse!2379) stat!220) (and (and (isWhileFree!221 (then!2381 stat!220)) (isWhileFree!221 (then!2381 stat!220))) (isWhileFree!221 (elze!2382 stat!220))) (ite ((_ is While!2387) stat!220) false (ite ((_ is For!2374) stat!220) (and (and (and (isWhileFree!221 (init!2375 stat!220)) (isWhileFree!221 (init!2375 stat!220))) (isWhileFree!221 (step!2377 stat!220))) (isWhileFree!221 (body!2378 stat!220))) true))))) ))
(assert (forall ((l!218 List!2429)) (= (isWhileFreeList!219 l!218) (ite ((_ is Nil!2433) l!218) true (ite ((_ is Cons!2430) l!218) (and (and (isWhileFree!221 (head!2431 l!218)) (isWhileFree!221 (head!2431 l!218))) (isWhileFreeList!219 (tail!2432 l!218))) error_value!2434))) ))
(assert (forall ((stat!212 Statement!2368)) (= (eliminateWhileLoops!213 stat!212) (ite ((_ is Block!2372) stat!212) (Block!2372 (eliminateWhileLoopsList!211 (body!2373 stat!212))) (ite ((_ is IfThenElse!2379) stat!212) (IfThenElse!2379 (expr!2380 stat!212) (eliminateWhileLoops!213 (then!2381 stat!212)) (eliminateWhileLoops!213 (elze!2382 stat!212))) (ite ((_ is While!2387) stat!212) (For!2374 Skip!2386 (expr!2388 stat!212) Skip!2386 (eliminateWhileLoops!213 (body!2389 stat!212))) (ite ((_ is For!2374) stat!212) (For!2374 (eliminateWhileLoops!213 (init!2375 stat!212)) (expr!2376 stat!212) (eliminateWhileLoops!213 (step!2377 stat!212)) (eliminateWhileLoops!213 (body!2378 stat!212))) stat!212))))) ))
(assert (forall ((l!210 List!2429)) (= (eliminateWhileLoopsList!211 l!210) (ite ((_ is Nil!2433) l!210) Nil!2433 (ite ((_ is Cons!2430) l!210) (Cons!2430 (eliminateWhileLoops!213 (head!2431 l!210)) (eliminateWhileLoopsList!211 (tail!2432 l!210))) error_value!2435))) ))
(assert (exists ((stat!228 Statement!2368)) (not (=> (and (and ((_ is Skip!2386) stat!228) ((_ is Skip!2386) stat!228)) (isWhileFree!221 stat!228)) (= (eliminateWhileLoops!213 stat!228) stat!228))) ))
(check-sat)
(exit)

