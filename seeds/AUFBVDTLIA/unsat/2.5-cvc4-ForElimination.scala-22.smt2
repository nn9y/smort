(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Statement!2436 0)(Expression!2458 0)(List!2497 0)) (((Assign!2437 (varID!2438 (_ BitVec 32)) (expr!2439 Expression!2458)) (Block!2440 (body!2441 List!2497)) (For!2442 (init!2443 Statement!2436) (expr!2444 Expression!2458) (step!2445 Statement!2436) (body!2446 Statement!2436)) (IfThenElse!2447 (expr!2448 Expression!2458) (then!2449 Statement!2436) (elze!2450 Statement!2436)) (Print!2451 (msg!2452 (_ BitVec 32)) (varID!2453 (_ BitVec 32))) (Skip!2454) (While!2455 (expr!2456 Expression!2458) (body!2457 Statement!2436)))
((And!2459 (lhs!2460 Expression!2458) (rhs!2461 Expression!2458)) (Division!2462 (lhs!2463 Expression!2458) (rhs!2464 Expression!2458)) (Equals!2465 (lhs!2466 Expression!2458) (rhs!2467 Expression!2458)) (GreaterThan!2468 (lhs!2469 Expression!2458) (rhs!2470 Expression!2458)) (IntLiteral!2471 (value!2472 (_ BitVec 32))) (LessThan!2473 (lhs!2474 Expression!2458) (rhs!2475 Expression!2458)) (Minus!2476 (lhs!2477 Expression!2458) (rhs!2478 Expression!2458)) (Modulo!2479 (lhs!2480 Expression!2458) (rhs!2481 Expression!2458)) (Neg!2482 (expr!2483 Expression!2458)) (Not!2484 (expr!2485 Expression!2458)) (Or!2486 (lhs!2487 Expression!2458) (rhs!2488 Expression!2458)) (Plus!2489 (lhs!2490 Expression!2458) (rhs!2491 Expression!2458)) (Times!2492 (lhs!2493 Expression!2458) (rhs!2494 Expression!2458)) (Var!2495 (varID!2496 (_ BitVec 32))))
((Cons!2498 (head!2499 Statement!2436) (tail!2500 List!2497)) (Nil!2501))
))
(declare-fun error_value!2502 () Bool)
(declare-fun isWhileFree!221 (Statement!2436) Bool)
(declare-fun isWhileFreeList!219 (List!2497) Bool)
(declare-fun error_value!2503 () List!2497)
(declare-fun eliminateWhileLoops!213 (Statement!2436) Statement!2436)
(declare-fun eliminateWhileLoopsList!211 (List!2497) List!2497)
(assert (forall ((stat!220 Statement!2436)) (= (isWhileFree!221 stat!220) (ite ((_ is Block!2440) stat!220) (isWhileFreeList!219 (body!2441 stat!220)) (ite ((_ is IfThenElse!2447) stat!220) (and (and (isWhileFree!221 (then!2449 stat!220)) (isWhileFree!221 (then!2449 stat!220))) (isWhileFree!221 (elze!2450 stat!220))) (ite ((_ is While!2455) stat!220) false (ite ((_ is For!2442) stat!220) (and (and (and (isWhileFree!221 (init!2443 stat!220)) (isWhileFree!221 (init!2443 stat!220))) (isWhileFree!221 (step!2445 stat!220))) (isWhileFree!221 (body!2446 stat!220))) true))))) ))
(assert (forall ((l!218 List!2497)) (= (isWhileFreeList!219 l!218) (ite ((_ is Nil!2501) l!218) true (ite ((_ is Cons!2498) l!218) (and (and (isWhileFree!221 (head!2499 l!218)) (isWhileFree!221 (head!2499 l!218))) (isWhileFreeList!219 (tail!2500 l!218))) error_value!2502))) ))
(assert (forall ((stat!212 Statement!2436)) (= (eliminateWhileLoops!213 stat!212) (ite ((_ is Block!2440) stat!212) (Block!2440 (eliminateWhileLoopsList!211 (body!2441 stat!212))) (ite ((_ is IfThenElse!2447) stat!212) (IfThenElse!2447 (expr!2448 stat!212) (eliminateWhileLoops!213 (then!2449 stat!212)) (eliminateWhileLoops!213 (elze!2450 stat!212))) (ite ((_ is While!2455) stat!212) (For!2442 Skip!2454 (expr!2456 stat!212) Skip!2454 (eliminateWhileLoops!213 (body!2457 stat!212))) (ite ((_ is For!2442) stat!212) (For!2442 (eliminateWhileLoops!213 (init!2443 stat!212)) (expr!2444 stat!212) (eliminateWhileLoops!213 (step!2445 stat!212)) (eliminateWhileLoops!213 (body!2446 stat!212))) stat!212))))) ))
(assert (forall ((l!210 List!2497)) (= (eliminateWhileLoopsList!211 l!210) (ite ((_ is Nil!2501) l!210) Nil!2501 (ite ((_ is Cons!2498) l!210) (Cons!2498 (eliminateWhileLoops!213 (head!2499 l!210)) (eliminateWhileLoopsList!211 (tail!2500 l!210))) error_value!2503))) ))
(assert (exists ((stat!228 Statement!2436)) (not (=> (and (and (and ((_ is While!2455) stat!228) ((_ is While!2455) stat!228)) (isWhileFree!221 stat!228)) (=> (isWhileFree!221 (body!2457 stat!228)) (= (eliminateWhileLoops!213 (body!2457 stat!228)) (body!2457 stat!228)))) (= (eliminateWhileLoops!213 stat!228) stat!228))) ))
(check-sat)
(exit)

