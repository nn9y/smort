(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((tuple3!899 0)) (((tuple3!899!900 (_1!901 Int) (_2!902 Int) (_3!903 Int)))
))
(declare-fun rec!222 (Int Int Int Int) tuple3!899)
(declare-fun propSum!208 (Int Int Int Int) Bool)
(declare-fun prop!213 (Int Int Int Int) Bool)
(assert (forall ((total!218 Int) (r!219 Int) (h!220 Int) (m!221 Int)) (= (rec!222 total!218 r!219 h!220 m!221) (ite (>= r!219 3600) (rec!222 total!218 (- r!219 3600) (+ h!220 1) m!221) (ite (>= r!219 60) (rec!222 total!218 (- r!219 60) h!220 (+ m!221 1)) (tuple3!899!900 h!220 m!221 r!219)))) ))
(assert (forall ((t!204 Int) (h!205 Int) (m!206 Int) (s!207 Int)) (= (propSum!208 t!204 h!205 m!206 s!207) (= (+ (+ (* h!205 3600) (* m!206 60)) s!207) t!204)) ))
(assert (forall ((t!209 Int) (h!210 Int) (m!211 Int) (s!212 Int)) (= (prop!213 t!209 h!210 m!211 s!212) (and (and (and (and (and (propSum!208 t!209 h!210 m!211 s!212) (propSum!208 t!209 h!210 m!211 s!212)) (>= m!211 (- 0))) (< m!211 60)) (>= s!212 (- 0))) (< s!212 60))) ))
(assert (not (forall ((total!214 Int)) (or (not (prop!213 total!214 (_1!901 (rec!222 total!214 total!214 0 0)) (_2!902 (rec!222 total!214 total!214 0 0)) (_3!903 (rec!222 total!214 total!214 0 0)))) (>= total!214 0)) )))
(check-sat)
(exit)

