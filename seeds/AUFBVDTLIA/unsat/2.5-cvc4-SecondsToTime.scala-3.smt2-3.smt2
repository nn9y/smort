(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((tuple3!904 0)) (((tuple3!904!905 (_1!906 Int) (_2!907 Int) (_3!908 Int)))
))
(declare-fun rec2!227 (Int Int Int Int) tuple3!904)
(declare-fun propSum!208 (Int Int Int Int) Bool)
(declare-fun prop!213 (Int Int Int Int) Bool)
(assert (forall ((total!223 Int) (r!224 Int) (h!225 Int) (m!226 Int)) (= (rec2!227 total!223 r!224 h!225 m!226) (ite (and (and (>= r!224 60) (>= r!224 60)) (= m!226 59)) (rec2!227 total!223 (- r!224 60) (+ h!225 1) (- 0)) (ite (>= r!224 60) (rec2!227 total!223 (- r!224 60) h!225 (+ m!226 1)) (tuple3!904!905 h!225 m!226 r!224)))) ))
(assert (forall ((t!204 Int) (h!205 Int) (m!206 Int) (s!207 Int)) (= (propSum!208 t!204 h!205 m!206 s!207) (= (+ (+ (* h!205 3600) (* m!206 60)) s!207) t!204)) ))
(assert (forall ((t!209 Int) (h!210 Int) (m!211 Int) (s!212 Int)) (= (prop!213 t!209 h!210 m!211 s!212) (and (and (and (and (and (propSum!208 t!209 h!210 m!211 s!212) (propSum!208 t!209 h!210 m!211 s!212)) (>= m!211 (- 0))) (< m!211 60)) (>= s!212 (- 0))) (< s!212 60))) ))
(assert (not (forall ((total!216 Int)) (or (not (prop!213 total!216 (_1!906 (rec2!227 total!216 total!216 0 0)) (_2!907 (rec2!227 total!216 total!216 0 0)) (_3!908 (rec2!227 total!216 total!216 0 0)))) (>= total!216 0)) )))
(check-sat)
(exit)

