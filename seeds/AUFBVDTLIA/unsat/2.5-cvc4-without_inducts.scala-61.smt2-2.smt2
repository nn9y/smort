(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-datatypes ((Nat!2044 0)) (((succ!2045 (pred!2046 Nat!2044)) (zero!2047))
))
(declare-datatypes ((Lst!2048 0)) (((cons!2049 (head!2050 Nat!2044) (tail!2051 Lst!2048)) (nil!2052))
))
(declare-fun error_value!2053 () Bool)
(declare-fun mem!270 (Nat!2044 Lst!2048) Bool)
(declare-fun error_value!2054 () Lst!2048)
(declare-fun append!252 (Lst!2048 Lst!2048) Lst!2048)
(assert (forall ((n!268 Nat!2044) (l!269 Lst!2048)) (= (mem!270 n!268 l!269) (ite ((_ is nil!2052) l!269) false (ite ((_ is cons!2049) l!269) (or (or (= n!268 (head!2050 l!269)) (= n!268 (head!2050 l!269))) (mem!270 n!268 (tail!2051 l!269))) error_value!2053))) ))
(assert (forall ((l1!250 Lst!2048) (l2!251 Lst!2048)) (= (append!252 l1!250 l2!251) (ite ((_ is nil!2052) l1!250) l2!251 (ite ((_ is cons!2049) l1!250) (cons!2049 (head!2050 l1!250) (append!252 (tail!2051 l1!250) l2!251)) error_value!2054))) ))
(assert (not (forall ((x!384 Nat!2044)) (mem!270 x!384 (cons!2049 x!384 nil!2052)) )))
(check-sat)
(exit)

