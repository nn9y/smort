(set-info :smt-lib-version 2.6)
(set-logic AUFBVDTLIA)
(set-info :source |
Generated by: Andrew Reynolds
Generated on: 2017-04-28
Generator: Nunchaku, Leon, CVC4, converted to v2.6 by CVC4
Application: Counterexample generation for higher-order theorem provers
Target solver: CVC4, Z3
Publications: "Model Finding for Recursive Functions in SMT" by Andrew Reynolds, Jasmin Christian Blanchette, Simon Cruanes, and Cesare Tinelli, IJCAR 2016.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)


(declare-fun turnOffRightmostOneRec!227 ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun bitAt!206 ((_ BitVec 32) (_ BitVec 32)) Bool)
(declare-fun toggleBitN!221 ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun isBitNSet!213 ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(assert (forall ((x!225 (_ BitVec 32)) (index!226 (_ BitVec 32))) (= (turnOffRightmostOneRec!227 x!225 index!226) (ite (bitAt!206 x!225 index!226) (toggleBitN!221 x!225 index!226) (ite (= index!226 (_ bv31 32)) x!225 (turnOffRightmostOneRec!227 x!225 (bvadd index!226 (_ bv1 32)))))) ))
(assert (forall ((x!204 (_ BitVec 32)) (n!205 (_ BitVec 32))) (= (bitAt!206 x!204 n!205) (= (bvand (bvashr x!204 n!205) (_ bv1 32)) (_ bv1 32))) ))
(assert (forall ((x!219 (_ BitVec 32)) (n!220 (_ BitVec 32))) (= (toggleBitN!221 x!219 n!220) (bvxor x!219 (bvshl (_ bv1 32) n!220))) ))
(assert (forall ((x!211 (_ BitVec 32)) (n!212 (_ BitVec 32))) (= (isBitNSet!213 x!211 n!212) (bvand x!211 (bvshl (_ bv1 32) n!212))) ))
(assert (exists ((x!228 (_ BitVec 32))) (not (= (bvand x!228 (bvsub x!228 (_ bv1 32))) (turnOffRightmostOneRec!227 x!228 (_ bv0 32)))) ))
(check-sat)
(exit)

