(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun T2_60 () (_ BitVec 16))
(declare-fun T2_58 () (_ BitVec 16))
(declare-fun T2_62 () (_ BitVec 16))
(declare-fun T2_56 () (_ BitVec 16))
(declare-fun T2_54 () (_ BitVec 16))
(declare-fun T1_62 () (_ BitVec 8))
(declare-fun T1_63 () (_ BitVec 8))
(declare-fun T1_60 () (_ BitVec 8))
(declare-fun T1_61 () (_ BitVec 8))
(declare-fun T1_58 () (_ BitVec 8))
(declare-fun T1_59 () (_ BitVec 8))
(declare-fun T1_56 () (_ BitVec 8))
(declare-fun T1_57 () (_ BitVec 8))
(declare-fun T1_54 () (_ BitVec 8))
(declare-fun T1_55 () (_ BitVec 8))
(assert (let ((?v_0 ((_ zero_extend 16) T2_60))) (let ((?v_2 (bvadd ?v_0 (_ bv2 32))) (?v_1 ((_ zero_extend 16) T2_58))) (and true (= T2_54 (bvor (bvshl ((_ zero_extend 8) T1_55) (_ bv8 16)) ((_ zero_extend 8) T1_54))) (= T2_56 (bvor (bvshl ((_ zero_extend 8) T1_57) (_ bv8 16)) ((_ zero_extend 8) T1_56))) (= T2_58 (bvor (bvshl ((_ zero_extend 8) T1_59) (_ bv8 16)) ((_ zero_extend 8) T1_58))) (= T2_60 (bvor (bvshl ((_ zero_extend 8) T1_61) (_ bv8 16)) ((_ zero_extend 8) T1_60))) (= T2_62 (bvor (bvshl ((_ zero_extend 8) T1_63) (_ bv8 16)) ((_ zero_extend 8) T1_62))) (= ?v_2 (_ bv0 32)) (bvule T2_54 T2_56) (bvule ((_ zero_extend 16) T2_56) ?v_1) (bvult ((_ zero_extend 16) T2_62) ?v_0) (bvule ?v_1 ?v_0) (bvule ?v_2 (_ bv4294967264 32))))))
(check-sat)
(exit)
