(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun T1_114101 () (_ BitVec 8))
(declare-fun T1_114102 () (_ BitVec 8))
(declare-fun T1_114103 () (_ BitVec 8))
(declare-fun T1_114104 () (_ BitVec 8))
(declare-fun T1_122043 () (_ BitVec 8))
(declare-fun T1_122044 () (_ BitVec 8))
(declare-fun T1_122045 () (_ BitVec 8))
(declare-fun T1_122046 () (_ BitVec 8))
(declare-fun T1_122047 () (_ BitVec 8))
(declare-fun T1_122048 () (_ BitVec 8))
(declare-fun T1_122049 () (_ BitVec 8))
(declare-fun T1_122050 () (_ BitVec 8))
(declare-fun T1_122051 () (_ BitVec 8))
(declare-fun T1_122052 () (_ BitVec 8))
(assert (let ((?v_3 ((_ zero_extend 24) (_ bv1 8))) (?v_2 ((_ zero_extend 24) (_ bv2 8))) (?v_0 (bvsub ((_ zero_extend 24) T1_114101) (_ bv48 32)))) (let ((?v_1 (bvsub (bvadd ((_ zero_extend 24) T1_114102) (bvshl (bvadd ?v_0 (bvshl ?v_0 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_4 (bvsub (bvadd ((_ zero_extend 24) T1_114103) (bvshl (bvadd ?v_1 (bvshl ?v_1 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_5 (bvsub (bvadd ((_ zero_extend 24) T1_114104) (bvshl (bvadd ?v_4 (bvshl ?v_4 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_22 (bvadd ?v_5 (_ bv4294965504 32)))) (let ((?v_24 (bvand (bvsub (_ bv2816 32) ?v_22) (_ bv0 32))) (?v_23 (bvule ?v_22 (_ bv4294967295 32))) (?v_6 (bvsub ((_ zero_extend 24) T1_122043) (_ bv48 32)))) (let ((?v_7 (bvsub (bvadd ((_ zero_extend 24) T1_122044) (bvshl (bvadd ?v_6 (bvshl ?v_6 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_8 (bvsub (bvadd ((_ zero_extend 24) T1_122045) (bvshl (bvadd ?v_7 (bvshl ?v_7 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_9 (bvsub (bvadd ((_ zero_extend 24) T1_122046) (bvshl (bvadd ?v_8 (bvshl ?v_8 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_10 (bvsub (bvadd ((_ zero_extend 24) T1_122047) (bvshl (bvadd ?v_9 (bvshl ?v_9 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_11 (bvsub (bvadd ((_ zero_extend 24) T1_122048) (bvshl (bvadd ?v_10 (bvshl ?v_10 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_12 (bvsub (bvadd ((_ zero_extend 24) T1_122049) (bvshl (bvadd ?v_11 (bvshl ?v_11 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_13 (bvsub (bvadd ((_ zero_extend 24) T1_122050) (bvshl (bvadd ?v_12 (bvshl ?v_12 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_14 (bvsub (bvadd ((_ zero_extend 24) T1_122051) (bvshl (bvadd ?v_13 (bvshl ?v_13 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_17 (bvadd ((_ zero_extend 24) T1_122052) (bvshl (bvadd ?v_14 (bvshl ?v_14 ?v_2)) ?v_3)))) (let ((?v_19 (bvadd ?v_17 (_ bv30 32)))) (let ((?v_21 (bvadd ?v_5 ?v_19)) (?v_20 (bvadd ?v_17 (_ bv1822 32))) (?v_18 (bvadd ?v_19 ?v_5)) (?v_16 (bvadd ?v_5 (_ bv41718680 32))) (?v_15 (bvsub ?v_17 (_ bv48 32)))) (and true (not (= (bvand ?v_24 (_ bv0 32)) (_ bv0 32))) (not (= (bvsub ((_ zero_extend 24) (_ bv0 8)) (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult (_ bv41720472 32) ?v_16) (_ bv1 8) (_ bv0 8))))) (_ bv0 32))) (not (= ?v_15 (_ bv4294967295 32))) (bvule (_ bv0 32) ?v_15) (bvult (_ bv41720542 32) ?v_16) (bvule (bvadd ?v_5 (_ bv41713128 32)) (_ bv41720472 32)) (bvult ?v_18 (bvadd ?v_17 (_ bv2078 32))) (bvule ?v_20 ?v_18) (not (= ?v_19 (_ bv4294967295 32))) (bvule (_ bv0 32) ?v_19) (bvult ?v_20 ?v_21) (not (= ?v_21 (_ bv4294967295 32))) (bvule (_ bv0 32) ?v_21) (bvule (_ bv8 32) (bvashr ?v_22 ?v_2)) (bvult ?v_22 (_ bv256 32)) ?v_23 (bvult ?v_22 (_ bv2816 32)) ?v_23 (not (= ?v_22 (_ bv0 32))) (= ?v_24 (_ bv0 32)) (bvsle (_ bv0 32) ?v_24))))))))))))))))))))
(check-sat)
(exit)
