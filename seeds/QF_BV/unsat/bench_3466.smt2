(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun T4_25470 () (_ BitVec 32))
(declare-fun T2_25478 () (_ BitVec 16))
(declare-fun T4_25465 () (_ BitVec 32))
(declare-fun T4_25989 () (_ BitVec 32))
(declare-fun T4_25984 () (_ BitVec 32))
(declare-fun T2_25997 () (_ BitVec 16))
(declare-fun T1_25997 () (_ BitVec 8))
(declare-fun T1_25998 () (_ BitVec 8))
(declare-fun T1_25989 () (_ BitVec 8))
(declare-fun T1_25990 () (_ BitVec 8))
(declare-fun T1_25991 () (_ BitVec 8))
(declare-fun T1_25992 () (_ BitVec 8))
(declare-fun T1_25984 () (_ BitVec 8))
(declare-fun T1_25985 () (_ BitVec 8))
(declare-fun T1_25986 () (_ BitVec 8))
(declare-fun T1_25987 () (_ BitVec 8))
(declare-fun T1_25478 () (_ BitVec 8))
(declare-fun T1_25479 () (_ BitVec 8))
(declare-fun T1_25470 () (_ BitVec 8))
(declare-fun T1_25471 () (_ BitVec 8))
(declare-fun T1_25472 () (_ BitVec 8))
(declare-fun T1_25473 () (_ BitVec 8))
(declare-fun T1_25465 () (_ BitVec 8))
(declare-fun T1_25466 () (_ BitVec 8))
(declare-fun T1_25467 () (_ BitVec 8))
(declare-fun T1_25468 () (_ BitVec 8))
(assert (let ((?v_4 (bvadd T4_25470 (_ bv1 32)))) (let ((?v_5 ((_ extract 7 0) (bvsub (_ bv144 32) ?v_4))) (?v_2 ((_ zero_extend 16) T2_25478))) (let ((?v_3 (bvadd ?v_2 T4_25465)) (?v_1 ((_ zero_extend 16) T2_25997)) (?v_0 (bvadd T4_25470 (_ bv58683015 32)))) (and true (= T4_25465 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_25468) (_ bv8 32)) ((_ zero_extend 24) T1_25467)) (_ bv8 32)) ((_ zero_extend 24) T1_25466)) (_ bv8 32)) ((_ zero_extend 24) T1_25465))) (= T4_25470 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_25473) (_ bv8 32)) ((_ zero_extend 24) T1_25472)) (_ bv8 32)) ((_ zero_extend 24) T1_25471)) (_ bv8 32)) ((_ zero_extend 24) T1_25470))) (= T2_25478 (bvor (bvshl ((_ zero_extend 8) T1_25479) (_ bv8 16)) ((_ zero_extend 8) T1_25478))) (= T4_25984 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_25987) (_ bv8 32)) ((_ zero_extend 24) T1_25986)) (_ bv8 32)) ((_ zero_extend 24) T1_25985)) (_ bv8 32)) ((_ zero_extend 24) T1_25984))) (= T4_25989 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_25992) (_ bv8 32)) ((_ zero_extend 24) T1_25991)) (_ bv8 32)) ((_ zero_extend 24) T1_25990)) (_ bv8 32)) ((_ zero_extend 24) T1_25989))) (= T2_25997 (bvor (bvshl ((_ zero_extend 8) T1_25998) (_ bv8 16)) ((_ zero_extend 8) T1_25997))) (not (= (bvand ?v_5 (_ bv128 8)) (_ bv0 8))) (bvule (_ bv0 32) (bvsub ?v_1 (_ bv4 32))) (not (= (bvand (bvadd ?v_2 (_ bv58683016 32)) (_ bv3 32)) (_ bv0 32))) (bvult T4_25465 T4_25984) (not (= T4_25984 T4_25465)) (= T4_25465 (_ bv0 32)) (not (= (_ bv58683145 32) ?v_0)) (bvule ?v_0 (_ bv58683145 32)) (= (_ bv58683144 32) ?v_0) (bvule ?v_0 (_ bv58683144 32)) (bvult (_ bv58683140 32) ?v_0) (bvult (_ bv58683138 32) ?v_0) (bvult (_ bv58683130 32) ?v_0) (bvult (_ bv58683048 32) ?v_0) (bvult (_ bv58683044 32) ?v_0) (bvule ?v_1 (bvsub T4_25470 ?v_2)) (not (= T4_25989 (_ bv0 32))) (not (= T4_25989 ?v_1)) (= T4_25984 ?v_3) (bvule ?v_2 T4_25470) (bvsle (_ bv0 32) T4_25470) (= (bvadd ?v_1 T4_25984) T4_25470) (= T4_25989 T4_25470) (not (= ?v_3 T4_25470)) (not (= T4_25470 (_ bv0 32))) (not (= T4_25470 ?v_2)) (not (= ?v_4 (_ bv0 32))) (not (= (bvand ?v_5 (_ bv63 8)) (_ bv0 8))) (not (= ?v_5 (_ bv5 8))))))))
(check-sat)
(exit)
