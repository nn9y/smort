(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun T4_46 () (_ BitVec 32))
(declare-fun T4_16 () (_ BitVec 32))
(declare-fun T2_62 () (_ BitVec 16))
(declare-fun T2_60 () (_ BitVec 16))
(declare-fun T2_58 () (_ BitVec 16))
(declare-fun T2_56 () (_ BitVec 16))
(declare-fun T2_54 () (_ BitVec 16))
(declare-fun T1_62 () (_ BitVec 8))
(declare-fun T1_63 () (_ BitVec 8))
(declare-fun T1_60 () (_ BitVec 8))
(declare-fun T1_61 () (_ BitVec 8))
(declare-fun T1_58 () (_ BitVec 8))
(declare-fun T1_59 () (_ BitVec 8))
(declare-fun T1_56 () (_ BitVec 8))
(declare-fun T1_57 () (_ BitVec 8))
(declare-fun T1_54 () (_ BitVec 8))
(declare-fun T1_55 () (_ BitVec 8))
(declare-fun T1_46 () (_ BitVec 8))
(declare-fun T1_47 () (_ BitVec 8))
(declare-fun T1_48 () (_ BitVec 8))
(declare-fun T1_49 () (_ BitVec 8))
(declare-fun T1_16 () (_ BitVec 8))
(declare-fun T1_17 () (_ BitVec 8))
(declare-fun T1_18 () (_ BitVec 8))
(declare-fun T1_19 () (_ BitVec 8))
(assert (let ((?v_15 (bvsub T4_16 (_ bv30 32))) (?v_12 ((_ zero_extend 16) T2_62)) (?v_7 ((_ zero_extend 16) T2_60)) (?v_9 ((_ zero_extend 16) T2_58)) (?v_4 ((_ zero_extend 16) T2_56)) (?v_1 ((_ zero_extend 16) T2_54))) (let ((?v_10 (bvadd ?v_1 (_ bv34 32)))) (let ((?v_11 (bvadd ?v_10 ?v_4))) (let ((?v_13 (bvadd ?v_11 ?v_9))) (let ((?v_14 (bvadd ?v_13 ?v_7))) (let ((?v_16 (bvadd ?v_14 ?v_12)) (?v_8 (bvadd ?v_7 (_ bv2 32))) (?v_3 (bvadd ?v_1 (_ bv4190152 32)))) (let ((?v_5 (bvadd ?v_3 ?v_4))) (let ((?v_6 (bvadd ?v_5 ?v_9)) (?v_2 (bvsub (_ bv56 32) ?v_8))) (let ((?v_0 ((_ extract 7 0) ?v_2))) (and true (= T4_16 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_19) (_ bv8 32)) ((_ zero_extend 24) T1_18)) (_ bv8 32)) ((_ zero_extend 24) T1_17)) (_ bv8 32)) ((_ zero_extend 24) T1_16))) (= T4_46 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_49) (_ bv8 32)) ((_ zero_extend 24) T1_48)) (_ bv8 32)) ((_ zero_extend 24) T1_47)) (_ bv8 32)) ((_ zero_extend 24) T1_46))) (= T2_54 (bvor (bvshl ((_ zero_extend 8) T1_55) (_ bv8 16)) ((_ zero_extend 8) T1_54))) (= T2_56 (bvor (bvshl ((_ zero_extend 8) T1_57) (_ bv8 16)) ((_ zero_extend 8) T1_56))) (= T2_58 (bvor (bvshl ((_ zero_extend 8) T1_59) (_ bv8 16)) ((_ zero_extend 8) T1_58))) (= T2_60 (bvor (bvshl ((_ zero_extend 8) T1_61) (_ bv8 16)) ((_ zero_extend 8) T1_60))) (= T2_62 (bvor (bvshl ((_ zero_extend 8) T1_63) (_ bv8 16)) ((_ zero_extend 8) T1_62))) (= (bvadd T4_46 (_ bv4190118 32)) (_ bv0 32)) (= (bvand ?v_0 (_ bv128 8)) (_ bv0 8)) (not (= (bvand ?v_0 (_ bv63 8)) (_ bv0 8))) (not (= ?v_0 (_ bv4 8))) (not (= ?v_0 (_ bv5 8))) (bvule (_ bv1296496 32) ?v_3) (bvult ?v_1 (_ bv256 32)) (not (= T2_54 (_ bv0 16))) (bvult ?v_2 (_ bv63 32)) (bvule (_ bv1296496 32) ?v_5) (bvult ?v_4 (_ bv256 32)) (not (= T2_56 (_ bv0 16))) (bvule T2_54 T2_56) (bvule ?v_1 ?v_10) (bvule (_ bv1296496 32) ?v_6) (bvule (_ bv1296496 32) (bvadd ?v_6 ?v_7)) (bvule (_ bv4 32) ?v_8) (bvult ?v_8 (_ bv256 32)) (bvult ?v_8 (_ bv2147483648 32)) (bvule ?v_8 (_ bv2147483647 32)) (not (= ?v_8 (_ bv0 32))) (bvule ?v_8 (_ bv4294967264 32)) (bvult ?v_9 (_ bv256 32)) (not (= T2_58 (_ bv0 16))) (bvule ?v_4 ?v_9) (bvule ?v_4 ?v_11) (bvult ?v_7 (_ bv256 32)) (not (= T2_60 (_ bv0 16))) (bvule ?v_9 ?v_7) (bvule ?v_9 ?v_13) (bvult ?v_12 (_ bv256 32)) (not (= T2_62 (_ bv0 16))) (bvult ?v_12 ?v_7) (bvule ?v_7 ?v_14) (bvule (_ bv30 32) T4_16) (not (= T4_16 (_ bv0 32))) (bvule (_ bv24 32) T4_16) (bvule T4_16 (_ bv2000 32)) (bvult (_ bv480 32) T4_16) (bvult (_ bv30 32) T4_16) (bvult T4_16 (_ bv10485760 32)) (not (= (bvsub ?v_15 T4_46) (_ bv0 32))) (bvule ?v_12 ?v_16) (bvule (bvadd T4_46 (_ bv24 32)) ?v_15) (bvule (_ bv34 32) ?v_15) (bvule (_ bv24 32) ?v_15) (bvule ?v_15 (_ bv955 32)) (not (= ?v_15 (_ bv0 32))) (= ?v_16 T4_46) (bvule T4_46 ?v_15) (not (= T4_46 (_ bv0 32))))))))))))))
(check-sat)
(exit)
