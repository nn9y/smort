(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun T2_582 () (_ BitVec 16))
(declare-fun T2_240 () (_ BitVec 16))
(declare-fun T2_468 () (_ BitVec 16))
(declare-fun T2_234 () (_ BitVec 16))
(declare-fun T1_582 () (_ BitVec 8))
(declare-fun T1_583 () (_ BitVec 8))
(declare-fun T1_468 () (_ BitVec 8))
(declare-fun T1_469 () (_ BitVec 8))
(declare-fun T1_240 () (_ BitVec 8))
(declare-fun T1_241 () (_ BitVec 8))
(declare-fun T1_234 () (_ BitVec 8))
(declare-fun T1_235 () (_ BitVec 8))
(assert (let ((?v_12 ((_ zero_extend 16) T2_582)) (?v_11 (not true)) (?v_8 ((_ zero_extend 16) T2_468)) (?v_1 ((_ zero_extend 24) (_ bv0 8)))) (let ((?v_2 (bvadd (bvsub ?v_1 (bvsub (_ bv0 32) ?v_12)) (_ bv48 32))) (?v_0 (bvadd (bvsub ?v_1 (bvsub (_ bv0 32) ?v_8)) (_ bv48 32))) (?v_3 ((_ zero_extend 16) (_ bv0 16))) (?v_9 (bvadd ?v_8 ((_ zero_extend 24) (_ bv1 8))))) (let ((?v_10 (bvadd ((_ zero_extend 24) ((_ extract 7 0) ?v_9)) (bvshl ((_ zero_extend 24) ((_ extract 15 8) ?v_9)) (_ bv8 32)))) (?v_6 ((_ extract 7 0) ?v_2))) (let ((?v_7 ((_ zero_extend 8) ?v_6)) (?v_4 ((_ extract 7 0) ?v_0))) (let ((?v_5 ((_ zero_extend 8) ?v_4))) (and true (= T2_234 (bvor (bvshl ((_ zero_extend 8) T1_235) (_ bv8 16)) ((_ zero_extend 8) T1_234))) (= T2_240 (bvor (bvshl ((_ zero_extend 8) T1_241) (_ bv8 16)) ((_ zero_extend 8) T1_240))) (= T2_468 (bvor (bvshl ((_ zero_extend 8) T1_469) (_ bv8 16)) ((_ zero_extend 8) T1_468))) (= T2_582 (bvor (bvshl ((_ zero_extend 8) T1_583) (_ bv8 16)) ((_ zero_extend 8) T1_582))) (not (= T2_582 (_ bv2 16))) (not (= (bvadd ((_ zero_extend 24) ?v_4) (bvshl ((_ zero_extend 24) ((_ extract 15 8) ?v_0)) (_ bv8 32))) ?v_3)) (not (= (bvadd ((_ zero_extend 24) ?v_6) (bvshl ((_ zero_extend 24) ((_ extract 15 8) ?v_2)) (_ bv8 32))) ?v_3)) (not (= ?v_5 (_ bv0 16))) (not (= ?v_5 (_ bv65535 16))) (not (= ?v_4 (_ bv0 8))) (not (= ?v_7 (_ bv0 16))) (not (= ?v_7 (_ bv65535 16))) (not (= ?v_6 (_ bv0 8))) (bvule ?v_10 ((_ zero_extend 16) (_ bv63 16))) (not (= ?v_10 ?v_3)) (bvsle ?v_0 (_ bv57 32)) (bvsle ?v_2 (_ bv57 32)) (= (not (= T2_468 T2_468)) ?v_11) (not (= (not (= ?v_8 (_ bv71 32))) ?v_11)) (not (= (not (= ?v_8 (_ bv64 32))) ?v_11)) (not (= (not (= ?v_8 (_ bv57 32))) ?v_11)) (not (= (not (= ?v_8 (_ bv50 32))) ?v_11)) (not (= (not (= ?v_8 (_ bv43 32))) ?v_11)) (not (= (not (= ?v_8 (_ bv36 32))) ?v_11)) (not (= (not (= ?v_8 (_ bv29 32))) ?v_11)) (not (= (not (= ?v_8 (_ bv22 32))) ?v_11)) (not (= (not (= ?v_8 (_ bv15 32))) ?v_11)) (not (= (not (= ?v_8 (_ bv8 32))) ?v_11)) (= (not (= ?v_8 (_ bv1 32))) ?v_11) (= (not (= T2_582 T2_582)) ?v_11) (not (= T2_468 (_ bv2 16))) (= T2_468 (_ bv1 16)) (bvule (_ bv1 16) T2_468) (not (= T2_468 (_ bv65535 16))) (not (= T2_468 (_ bv0 16))) (= (_ bv1 16) T2_468) (not (= ?v_8 (_ bv0 32))) (bvule (_ bv0 32) ?v_8) (bvule T2_468 (_ bv63 16)) (= T2_234 T2_468) (bvsle (_ bv0 16) T2_468) (not (= (not (= ?v_12 (_ bv72 32))) ?v_11)) (not (= (not (= ?v_12 (_ bv65 32))) ?v_11)) (not (= (not (= ?v_12 (_ bv58 32))) ?v_11)) (not (= (not (= ?v_12 (_ bv51 32))) ?v_11)) (not (= (not (= ?v_12 (_ bv44 32))) ?v_11)) (not (= (not (= ?v_12 (_ bv37 32))) ?v_11)) (not (= (not (= ?v_12 (_ bv30 32))) ?v_11)) (not (= (not (= ?v_12 (_ bv23 32))) ?v_11)) (not (= (not (= ?v_12 (_ bv16 32))) ?v_11)) (not (= (not (= ?v_12 (_ bv9 32))) ?v_11)) (= (not (= ?v_12 (_ bv2 32))) ?v_11) (not (= T2_468 T2_240)) (not (= T2_240 T2_468)) (not (= T2_582 (_ bv65535 16))) (not (= T2_582 (_ bv0 16))) (= (_ bv2 16) T2_582) (not (= (_ bv1 16) T2_582)) (not (= ?v_12 (_ bv0 32))) (bvule (_ bv0 32) ?v_12) (not (= T2_582 T2_468)) (not (= T2_468 T2_582)) (bvule T2_582 (_ bv63 16)) (= T2_582 T2_240) (bvsle (_ bv0 16) T2_582))))))))
(check-sat)
(exit)
