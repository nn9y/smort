(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun T1_8699 () (_ BitVec 8))
(declare-fun T1_8700 () (_ BitVec 8))
(declare-fun T1_8701 () (_ BitVec 8))
(declare-fun T1_670 () (_ BitVec 8))
(declare-fun T1_671 () (_ BitVec 8))
(declare-fun T1_672 () (_ BitVec 8))
(declare-fun T1_673 () (_ BitVec 8))
(declare-fun T1_674 () (_ BitVec 8))
(declare-fun T1_675 () (_ BitVec 8))
(declare-fun T1_676 () (_ BitVec 8))
(declare-fun T1_677 () (_ BitVec 8))
(declare-fun T1_678 () (_ BitVec 8))
(declare-fun T1_679 () (_ BitVec 8))
(assert (let ((?v_3 ((_ zero_extend 24) (_ bv1 8))) (?v_2 ((_ zero_extend 24) (_ bv2 8))) (?v_0 (bvsub ((_ zero_extend 24) T1_8699) (_ bv48 32)))) (let ((?v_1 (bvsub (bvadd ((_ zero_extend 24) T1_8700) (bvshl (bvadd ?v_0 (bvshl ?v_0 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_4 (bvsub (bvadd ((_ zero_extend 24) T1_8701) (bvshl (bvadd ?v_1 (bvshl ?v_1 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_20 (bvadd ?v_4 (_ bv4294966527 32)))) (let ((?v_22 (bvand (bvsub (_ bv511 32) ?v_20) (_ bv0 32))) (?v_21 (bvule ?v_20 (_ bv4294967294 32))) (?v_7 (bvsub ((_ zero_extend 24) T1_670) (_ bv48 32)))) (let ((?v_8 (bvsub (bvadd ((_ zero_extend 24) T1_671) (bvshl (bvadd ?v_7 (bvshl ?v_7 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_9 (bvsub (bvadd ((_ zero_extend 24) T1_672) (bvshl (bvadd ?v_8 (bvshl ?v_8 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_10 (bvsub (bvadd ((_ zero_extend 24) T1_673) (bvshl (bvadd ?v_9 (bvshl ?v_9 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_11 (bvsub (bvadd ((_ zero_extend 24) T1_674) (bvshl (bvadd ?v_10 (bvshl ?v_10 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_12 (bvsub (bvadd ((_ zero_extend 24) T1_675) (bvshl (bvadd ?v_11 (bvshl ?v_11 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_13 (bvsub (bvadd ((_ zero_extend 24) T1_676) (bvshl (bvadd ?v_12 (bvshl ?v_12 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_14 (bvsub (bvadd ((_ zero_extend 24) T1_677) (bvshl (bvadd ?v_13 (bvshl ?v_13 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_15 (bvsub (bvadd ((_ zero_extend 24) T1_678) (bvshl (bvadd ?v_14 (bvshl ?v_14 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_16 (bvadd ((_ zero_extend 24) T1_679) (bvshl (bvadd ?v_15 (bvshl ?v_15 ?v_2)) ?v_3)))) (let ((?v_19 (bvadd ?v_16 (_ bv3 32))) (?v_18 (bvadd ?v_16 (_ bv771 32)))) (let ((?v_17 (bvadd ?v_19 ?v_4)) (?v_6 (bvadd ?v_4 (_ bv4294966528 32))) (?v_5 (bvadd ?v_4 (_ bv41806040 32)))) (and true (not (= (bvand ?v_22 (_ bv0 32)) (_ bv0 32))) (not (= (bvsub ((_ zero_extend 24) (_ bv0 8)) (bvsub (_ bv0 32) ((_ zero_extend 24) (ite (bvult (_ bv41806808 32) ?v_5) (_ bv1 8) (_ bv0 8))))) (_ bv0 32))) (bvult (bvashr (bvadd ?v_4 (_ bv4294966524 32)) ?v_2) (_ bv8 32)) (bvult (_ bv41806824 32) ?v_5) (bvule (_ bv0 32) (bvadd ?v_4 (_ bv4294966523 32))) (bvult ?v_6 (_ bv512 32)) (bvule ?v_6 (_ bv4294967295 32)) (not (= ?v_6 (_ bv0 32))) (bvult ?v_17 (bvadd ?v_16 (_ bv1027 32))) (bvule ?v_18 ?v_17) (bvult ?v_18 (bvadd ?v_4 ?v_19)) (bvult ?v_20 (_ bv256 32)) ?v_21 ?v_21 (bvult ?v_20 (_ bv511 32)) (not (= ?v_20 (_ bv0 32))) (= ?v_22 (_ bv0 32)) (bvsle (_ bv0 32) ?v_22)))))))))))))))))))
(check-sat)
(exit)
