(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun T1_8890 () (_ BitVec 8))
(declare-fun T1_8889 () (_ BitVec 8))
(declare-fun T1_8888 () (_ BitVec 8))
(declare-fun T1_8887 () (_ BitVec 8))
(declare-fun T1_8886 () (_ BitVec 8))
(declare-fun T1_8885 () (_ BitVec 8))
(declare-fun T1_8884 () (_ BitVec 8))
(declare-fun T1_8883 () (_ BitVec 8))
(declare-fun T1_8882 () (_ BitVec 8))
(declare-fun T1_8881 () (_ BitVec 8))
(assert (let ((?v_2 ((_ zero_extend 24) (_ bv6 8))) (?v_0 ((_ zero_extend 24) (_ bv4 8))) (?v_3 ((_ zero_extend 24) (_ bv2 8))) (?v_1 ((_ zero_extend 24) (_ bv3 8)))) (and true (bvslt (_ bv4294967295 32) (bvadd (bvashr (bvashr (bvadd (bvashr (bvadd (bvashr (bvashr (bvadd (bvashr (bvadd (bvashr (bvadd (bvashr (bvashr (bvadd (bvashr (bvadd (bvashr (bvadd (bvashr (bvashr (bvadd (bvshl ((_ zero_extend 24) T1_8881) ?v_3) (_ bv3 32)) ?v_2) ?v_0) ((_ zero_extend 24) T1_8882)) ?v_0) (bvshl ((_ zero_extend 24) T1_8883) ?v_0)) ((_ zero_extend 24) (_ bv9 8))) (bvshl ((_ zero_extend 24) T1_8884) ?v_1)) ?v_0) ?v_1) (bvshl ((_ zero_extend 24) T1_8885) ?v_0)) ?v_2) (bvshl ((_ zero_extend 24) T1_8886) ?v_2)) ((_ zero_extend 24) (_ bv10 8))) (bvshl ((_ zero_extend 24) T1_8887) ?v_0)) ?v_2) ?v_3) (bvshl ((_ zero_extend 24) T1_8888) ?v_0)) ((_ zero_extend 24) (_ bv5 8))) (bvshl ((_ zero_extend 24) T1_8889) ((_ zero_extend 24) (_ bv7 8)))) ((_ zero_extend 24) (_ bv8 8))) ?v_2) (bvshl ((_ zero_extend 24) T1_8890) ((_ zero_extend 24) (_ bv1 8))))))))
(check-sat)
(exit)
