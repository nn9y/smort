(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun T1_9114 () (_ BitVec 8))
(declare-fun T1_9091 () (_ BitVec 8))
(declare-fun T1_9074 () (_ BitVec 8))
(declare-fun T1_9070 () (_ BitVec 8))
(declare-fun T2_8678 () (_ BitVec 16))
(declare-fun T1_8669 () (_ BitVec 8))
(declare-fun T1_9141 () (_ BitVec 8))
(declare-fun T2_9072 () (_ BitVec 16))
(declare-fun T1_9163 () (_ BitVec 8))
(declare-fun T4_8670 () (_ BitVec 32))
(declare-fun T1_9072 () (_ BitVec 8))
(declare-fun T1_9073 () (_ BitVec 8))
(declare-fun T1_8678 () (_ BitVec 8))
(declare-fun T1_8679 () (_ BitVec 8))
(declare-fun T1_8670 () (_ BitVec 8))
(declare-fun T1_8671 () (_ BitVec 8))
(declare-fun T1_8672 () (_ BitVec 8))
(declare-fun T1_8673 () (_ BitVec 8))
(assert (let ((?v_20 ((_ zero_extend 24) T1_9114)) (?v_0 ((_ zero_extend 24) (_ bv1 8))) (?v_14 ((_ zero_extend 24) T1_9091)) (?v_7 ((_ zero_extend 24) T1_9074)) (?v_10 ((_ zero_extend 24) T1_9070)) (?v_3 ((_ zero_extend 16) T2_8678)) (?v_2 ((_ zero_extend 24) T1_8669))) (let ((?v_4 (bvsub ?v_2 (_ bv8 32)))) (let ((?v_5 (bvadd (bvadd (bvadd (bvadd ?v_4 (_ bv4261991 32)) ?v_3) (_ bv7 32)) ?v_10))) (let ((?v_12 (bvadd (bvadd ?v_5 (_ bv3 32)) ?v_7))) (let ((?v_22 (bvadd (bvadd ?v_12 ?v_0) ?v_14))) (let ((?v_1 (bvsub (bvadd (bvadd ?v_22 ?v_0) ?v_20) (_ bv4261959 32)))) (let ((?v_30 (bvadd ?v_1 (_ bv4261960 32))) (?v_23 (bvsub ?v_22 (_ bv4261959 32)))) (let ((?v_29 (bvadd ?v_23 (_ bv4261960 32))) (?v_21 ((_ zero_extend 24) T1_9141)) (?v_17 ((_ zero_extend 16) T2_9072))) (let ((?v_19 (bvadd ?v_17 (bvsub (_ bv4294967295 32) ?v_7)))) (let ((?v_26 (bvadd ?v_19 (bvsub (_ bv4294967295 32) ?v_14)))) (let ((?v_27 (bvadd ?v_26 (bvsub (_ bv4294967295 32) ?v_20)))) (let ((?v_28 (bvadd ?v_27 (bvsub (_ bv4294967295 32) ?v_21))) (?v_24 (bvsub (bvadd ?v_29 ?v_20) (_ bv1 32))) (?v_25 (bvadd ?v_23 (_ bv4261986 32))) (?v_13 (bvsub ?v_12 (_ bv4261959 32)))) (let ((?v_18 (bvadd ?v_13 (_ bv4261960 32)))) (let ((?v_15 (bvsub (bvadd ?v_18 ?v_14) (_ bv1 32))) (?v_16 (bvadd ?v_13 (_ bv4261982 32))) (?v_6 (bvsub ?v_5 (_ bv4261957 32)))) (let ((?v_11 (bvadd ?v_6 (_ bv4261960 32)))) (let ((?v_8 (bvsub (bvadd ?v_11 ?v_7) (_ bv1 32))) (?v_9 (bvadd ?v_6 (_ bv4261976 32)))) (and true (= T4_8670 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_8673) (_ bv8 32)) ((_ zero_extend 24) T1_8672)) (_ bv8 32)) ((_ zero_extend 24) T1_8671)) (_ bv8 32)) ((_ zero_extend 24) T1_8670))) (= T2_8678 (bvor (bvshl ((_ zero_extend 8) T1_8679) (_ bv8 16)) ((_ zero_extend 8) T1_8678))) (= T2_9072 (bvor (bvshl ((_ zero_extend 8) T1_9073) (_ bv8 16)) ((_ zero_extend 8) T1_9072))) (bvule (bvsub (bvadd ?v_30 ?v_21) (_ bv1 32)) (bvadd ?v_1 (_ bv4261970 32))) (bvule (bvadd (bvadd (bvadd (bvadd (bvadd ?v_2 (_ bv1 32)) (_ bv4261982 32)) ?v_3) (_ bv6 32)) (_ bv1 32)) (_ bv4262806 32)) (not (= (bvadd (bvadd ?v_4 (_ bv31 32)) (_ bv4261960 32)) (_ bv0 32))) (bvule (_ bv8 32) ?v_2) (not (= ?v_2 (_ bv1 32))) (bvule ?v_4 (_ bv0 32)) (bvult (_ bv0 32) ?v_3) (not (= ?v_3 (_ bv0 32))) (= T4_8670 ?v_3) (not (= ?v_9 ?v_8)) (bvule ?v_8 ?v_9) (bvult ?v_10 (_ bv8 32)) (not (= ?v_10 (_ bv0 32))) (= ?v_10 (_ bv1 32)) (not (= ?v_11 (_ bv0 32))) (not (= ?v_17 (_ bv0 32))) (not (= ?v_16 ?v_15)) (bvule ?v_15 ?v_16) (bvult (bvadd ?v_13 (_ bv4261970 32)) ?v_15) (not (= ?v_19 (_ bv0 32))) (not (= ?v_18 (_ bv0 32))) (= (bvadd ?v_28 (bvsub (_ bv4294967295 32) ((_ zero_extend 24) T1_9163))) (_ bv0 32)) (not (= ?v_25 ?v_24)) (bvule ?v_24 ?v_25) (bvult (bvadd ?v_23 (_ bv4261982 32)) ?v_24) (not (= ?v_26 (_ bv0 32))) (not (= ?v_27 (_ bv0 32))) (not (= ?v_28 (_ bv0 32))) (not (= ?v_29 (_ bv0 32))) (not (= ?v_30 (_ bv0 32)))))))))))))))))))))
(check-sat)
(exit)
