(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun T1_810 () (_ BitVec 8))
(declare-fun T1_811 () (_ BitVec 8))
(declare-fun T1_812 () (_ BitVec 8))
(declare-fun T1_813 () (_ BitVec 8))
(declare-fun T1_814 () (_ BitVec 8))
(declare-fun T1_815 () (_ BitVec 8))
(declare-fun T1_816 () (_ BitVec 8))
(declare-fun T1_817 () (_ BitVec 8))
(declare-fun T1_818 () (_ BitVec 8))
(declare-fun T1_819 () (_ BitVec 8))
(assert (let ((?v_3 ((_ zero_extend 24) (_ bv1 8))) (?v_2 ((_ zero_extend 24) (_ bv2 8))) (?v_0 (bvsub ((_ zero_extend 24) T1_810) (_ bv48 32)))) (let ((?v_1 (bvsub (bvadd ((_ zero_extend 24) T1_811) (bvshl (bvadd ?v_0 (bvshl ?v_0 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_4 (bvsub (bvadd ((_ zero_extend 24) T1_812) (bvshl (bvadd ?v_1 (bvshl ?v_1 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_5 (bvsub (bvadd ((_ zero_extend 24) T1_813) (bvshl (bvadd ?v_4 (bvshl ?v_4 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_6 (bvsub (bvadd ((_ zero_extend 24) T1_814) (bvshl (bvadd ?v_5 (bvshl ?v_5 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_7 (bvsub (bvadd ((_ zero_extend 24) T1_815) (bvshl (bvadd ?v_6 (bvshl ?v_6 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_8 (bvsub (bvadd ((_ zero_extend 24) T1_816) (bvshl (bvadd ?v_7 (bvshl ?v_7 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_9 (bvsub (bvadd ((_ zero_extend 24) T1_817) (bvshl (bvadd ?v_8 (bvshl ?v_8 ?v_2)) ?v_3)) (_ bv48 32)))) (let ((?v_10 (bvsub (bvadd ((_ zero_extend 24) T1_818) (bvshl (bvadd ?v_9 (bvshl ?v_9 ?v_2)) ?v_3)) (_ bv48 32)))) (and true (= (bvsub (bvadd ((_ zero_extend 24) T1_819) (bvshl (bvadd ?v_10 (bvshl ?v_10 ?v_2)) ?v_3)) (_ bv48 32)) (_ bv4294967295 32)))))))))))))
(check-sat)
(exit)
