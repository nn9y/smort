(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun T1_1053 () (_ BitVec 8))
(declare-fun T2_1062 () (_ BitVec 16))
(declare-fun T4_1054 () (_ BitVec 32))
(declare-fun T1_1454 () (_ BitVec 8))
(declare-fun T2_1463 () (_ BitVec 16))
(declare-fun T1_1463 () (_ BitVec 8))
(declare-fun T1_1464 () (_ BitVec 8))
(declare-fun T1_1062 () (_ BitVec 8))
(declare-fun T1_1063 () (_ BitVec 8))
(declare-fun T1_1054 () (_ BitVec 8))
(declare-fun T1_1055 () (_ BitVec 8))
(declare-fun T1_1056 () (_ BitVec 8))
(declare-fun T1_1057 () (_ BitVec 8))
(assert (let ((?v_0 ((_ zero_extend 24) T1_1053))) (let ((?v_6 (bvadd ?v_0 (_ bv1 32))) (?v_5 ((_ zero_extend 16) T2_1062))) (let ((?v_4 (bvadd (bvadd ?v_6 (_ bv1584444 32)) ?v_5))) (let ((?v_3 (bvadd ?v_4 (_ bv6 32))) (?v_1 ((_ zero_extend 24) T1_1454))) (let ((?v_2 (bvadd (bvadd ?v_3 (bvadd ?v_1 (_ bv1 32))) (_ bv2 32)))) (and true (= T4_1054 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_1057) (_ bv8 32)) ((_ zero_extend 24) T1_1056)) (_ bv8 32)) ((_ zero_extend 24) T1_1055)) (_ bv8 32)) ((_ zero_extend 24) T1_1054))) (= T2_1062 (bvor (bvshl ((_ zero_extend 8) T1_1063) (_ bv8 16)) ((_ zero_extend 8) T1_1062))) (= T2_1463 (bvor (bvshl ((_ zero_extend 8) T1_1464) (_ bv8 16)) ((_ zero_extend 8) T1_1463))) (bvult (_ bv0 32) (bvsub ?v_0 (_ bv8 32))) (bvule (bvsub (bvadd ?v_2 ((_ zero_extend 16) T2_1463)) (_ bv1584424 32)) (_ bv846 32)) (not (= ?v_1 (_ bv1 32))) (bvule ?v_2 (_ bv1585270 32)) (bvule (bvadd ?v_3 (_ bv1 32)) (_ bv1585270 32)) (bvule (bvsub ?v_4 (_ bv1584424 32)) (_ bv846 32)) (= T4_1054 ?v_5) (bvule (bvadd (bvadd ?v_6 (_ bv1584442 32)) (_ bv2 32)) (_ bv1585270 32)) (bvule (_ bv8 32) ?v_0) (not (= ?v_0 (_ bv1 32))))))))))
(check-sat)
(exit)
