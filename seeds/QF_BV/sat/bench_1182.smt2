(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun T2_5276 () (_ BitVec 16))
(declare-fun T2_6122 () (_ BitVec 16))
(declare-fun T2_4430 () (_ BitVec 16))
(declare-fun T4_326 () (_ BitVec 32))
(declare-fun T2_3583 () (_ BitVec 16))
(declare-fun T2_1890 () (_ BitVec 16))
(declare-fun T2_1044 () (_ BitVec 16))
(declare-fun T2_2736 () (_ BitVec 16))
(declare-fun T2_6968 () (_ BitVec 16))
(declare-fun T1_6968 () (_ BitVec 8))
(declare-fun T1_6969 () (_ BitVec 8))
(declare-fun T1_6122 () (_ BitVec 8))
(declare-fun T1_6123 () (_ BitVec 8))
(declare-fun T1_5276 () (_ BitVec 8))
(declare-fun T1_5277 () (_ BitVec 8))
(declare-fun T1_4430 () (_ BitVec 8))
(declare-fun T1_4431 () (_ BitVec 8))
(declare-fun T1_3583 () (_ BitVec 8))
(declare-fun T1_3584 () (_ BitVec 8))
(declare-fun T1_2736 () (_ BitVec 8))
(declare-fun T1_2737 () (_ BitVec 8))
(declare-fun T1_1890 () (_ BitVec 8))
(declare-fun T1_1891 () (_ BitVec 8))
(declare-fun T1_1044 () (_ BitVec 8))
(declare-fun T1_1045 () (_ BitVec 8))
(declare-fun T1_326 () (_ BitVec 8))
(declare-fun T1_327 () (_ BitVec 8))
(declare-fun T1_328 () (_ BitVec 8))
(declare-fun T1_329 () (_ BitVec 8))
(assert (let ((?v_6 ((_ zero_extend 16) T2_5276)) (?v_5 ((_ zero_extend 16) T2_6122)) (?v_4 ((_ zero_extend 16) T2_4430)) (?v_0 ((_ zero_extend 16) T2_3583)) (?v_2 ((_ zero_extend 16) T2_1890)) (?v_3 ((_ zero_extend 16) T2_1044)) (?v_1 ((_ zero_extend 16) T2_2736))) (and true (= T4_326 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_329) (_ bv8 32)) ((_ zero_extend 24) T1_328)) (_ bv8 32)) ((_ zero_extend 24) T1_327)) (_ bv8 32)) ((_ zero_extend 24) T1_326))) (= T2_1044 (bvor (bvshl ((_ zero_extend 8) T1_1045) (_ bv8 16)) ((_ zero_extend 8) T1_1044))) (= T2_1890 (bvor (bvshl ((_ zero_extend 8) T1_1891) (_ bv8 16)) ((_ zero_extend 8) T1_1890))) (= T2_2736 (bvor (bvshl ((_ zero_extend 8) T1_2737) (_ bv8 16)) ((_ zero_extend 8) T1_2736))) (= T2_3583 (bvor (bvshl ((_ zero_extend 8) T1_3584) (_ bv8 16)) ((_ zero_extend 8) T1_3583))) (= T2_4430 (bvor (bvshl ((_ zero_extend 8) T1_4431) (_ bv8 16)) ((_ zero_extend 8) T1_4430))) (= T2_5276 (bvor (bvshl ((_ zero_extend 8) T1_5277) (_ bv8 16)) ((_ zero_extend 8) T1_5276))) (= T2_6122 (bvor (bvshl ((_ zero_extend 8) T1_6123) (_ bv8 16)) ((_ zero_extend 8) T1_6122))) (= T2_6968 (bvor (bvshl ((_ zero_extend 8) T1_6969) (_ bv8 16)) ((_ zero_extend 8) T1_6968))) (bvult ?v_5 ((_ zero_extend 16) T2_6968)) (bvult (_ bv0 32) ?v_3) (bvule (_ bv323 32) (bvadd ?v_4 T4_326)) (bvule (_ bv323 32) (bvadd ?v_0 T4_326)) (bvule ?v_0 ?v_1) (bvule (_ bv323 32) (bvadd ?v_1 T4_326)) (bvule ?v_1 ?v_2) (bvule ?v_2 ?v_3) (bvule (_ bv322 32) (bvadd ?v_2 T4_326)) (bvule (_ bv323 32) (bvadd ?v_6 T4_326)) (bvule ?v_4 ?v_0) (bvult T4_326 (bvadd T4_326 (_ bv1000 32))) (bvule T4_326 (_ bv13535 32)) (not (= T4_326 (_ bv4294967295 32))) (not (= T4_326 (_ bv0 32))) (bvule T4_326 (_ bv100000 32)) (bvule (_ bv323 32) (bvadd ?v_5 T4_326)) (bvule ?v_6 ?v_4) (bvule ?v_5 ?v_6))))
(check-sat)
(exit)
