(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun T1_11730 () (_ BitVec 8))
(declare-fun T1_11670 () (_ BitVec 8))
(declare-fun T1_11611 () (_ BitVec 8))
(declare-fun T1_11607 () (_ BitVec 8))
(declare-fun T2_11215 () (_ BitVec 16))
(declare-fun T1_11206 () (_ BitVec 8))
(declare-fun T1_11790 () (_ BitVec 8))
(declare-fun T2_11609 () (_ BitVec 16))
(declare-fun T4_11207 () (_ BitVec 32))
(declare-fun T1_11609 () (_ BitVec 8))
(declare-fun T1_11610 () (_ BitVec 8))
(declare-fun T1_11215 () (_ BitVec 8))
(declare-fun T1_11216 () (_ BitVec 8))
(declare-fun T1_11207 () (_ BitVec 8))
(declare-fun T1_11208 () (_ BitVec 8))
(declare-fun T1_11209 () (_ BitVec 8))
(declare-fun T1_11210 () (_ BitVec 8))
(assert (let ((?v_18 ((_ zero_extend 24) T1_11730)) (?v_0 ((_ zero_extend 24) (_ bv1 8))) (?v_13 ((_ zero_extend 24) T1_11670)) (?v_7 ((_ zero_extend 24) T1_11611)) (?v_9 ((_ zero_extend 24) T1_11607)) (?v_3 ((_ zero_extend 16) T2_11215)) (?v_2 ((_ zero_extend 24) T1_11206))) (let ((?v_4 (bvsub ?v_2 (_ bv8 32)))) (let ((?v_5 (bvadd (bvadd (bvadd (bvadd ?v_4 (_ bv1589894 32)) ?v_3) (_ bv7 32)) ?v_9))) (let ((?v_11 (bvadd (bvadd ?v_5 (_ bv3 32)) ?v_7))) (let ((?v_16 (bvadd (bvadd ?v_11 ?v_0) ?v_13))) (let ((?v_1 (bvsub (bvadd (bvadd ?v_16 ?v_0) ?v_18) (_ bv1589863 32)))) (let ((?v_25 (bvadd ?v_1 (_ bv1589864 32))) (?v_17 (bvsub ?v_16 (_ bv1589863 32)))) (let ((?v_24 (bvadd ?v_17 (_ bv1589864 32))) (?v_23 ((_ zero_extend 24) T1_11790)) (?v_22 ((_ zero_extend 16) T2_11609))) (let ((?v_19 (bvsub (bvadd ?v_24 ?v_18) (_ bv1 32))) (?v_21 (bvadd ?v_17 (_ bv1589922 32))) (?v_20 (bvadd ?v_17 (_ bv1589923 32))) (?v_12 (bvsub ?v_11 (_ bv1589863 32)))) (let ((?v_15 (bvadd ?v_12 (_ bv1589864 32)))) (let ((?v_14 (bvsub (bvadd ?v_15 ?v_13) (_ bv1 32))) (?v_6 (bvsub ?v_5 (_ bv1589861 32)))) (let ((?v_10 (bvadd ?v_6 (_ bv1589864 32)))) (let ((?v_8 (bvsub (bvadd ?v_10 ?v_7) (_ bv1 32)))) (and true (= T4_11207 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_11210) (_ bv8 32)) ((_ zero_extend 24) T1_11209)) (_ bv8 32)) ((_ zero_extend 24) T1_11208)) (_ bv8 32)) ((_ zero_extend 24) T1_11207))) (= T2_11215 (bvor (bvshl ((_ zero_extend 8) T1_11216) (_ bv8 16)) ((_ zero_extend 8) T1_11215))) (= T2_11609 (bvor (bvshl ((_ zero_extend 8) T1_11610) (_ bv8 16)) ((_ zero_extend 8) T1_11609))) (bvule (bvsub (bvadd ?v_25 ?v_23) (_ bv1 32)) (bvadd ?v_1 (_ bv1589898 32))) (bvule (bvadd (bvadd (bvadd (bvadd (bvadd ?v_2 (_ bv1 32)) (_ bv1589885 32)) ?v_3) (_ bv6 32)) (_ bv1 32)) (_ bv1590710 32)) (not (= (bvadd (bvadd ?v_4 (_ bv30 32)) (_ bv1589864 32)) (_ bv0 32))) (bvule (_ bv8 32) ?v_2) (not (= ?v_2 (_ bv1 32))) (bvule ?v_4 (_ bv0 32)) (bvult (_ bv0 32) ?v_3) (not (= ?v_3 (_ bv0 32))) (= T4_11207 ?v_3) (bvult (bvadd ?v_6 (_ bv1589910 32)) ?v_8) (bvult (bvadd ?v_6 (_ bv1589880 32)) ?v_8) (bvult ?v_9 (_ bv8 32)) (not (= ?v_9 (_ bv0 32))) (= ?v_9 (_ bv1 32)) (not (= ?v_10 (_ bv0 32))) (not (= ?v_22 (_ bv0 32))) (= (bvadd ?v_12 (_ bv1589922 32)) ?v_14) (bvult (bvadd ?v_12 (_ bv1589900 32)) ?v_14) (bvult (bvadd ?v_12 (_ bv1589888 32)) ?v_14) (bvult (bvadd ?v_12 (_ bv1589870 32)) ?v_14) (not (= ?v_15 (_ bv0 32))) (not (= ?v_20 ?v_19)) (bvule ?v_19 ?v_20) (= ?v_21 ?v_19) (bvule ?v_19 ?v_21) (bvult (bvadd ?v_17 (_ bv1589894 32)) ?v_19) (bvult (bvadd ?v_17 (_ bv1589874 32)) ?v_19) (= (bvadd (bvadd (bvadd (bvadd ?v_22 (bvsub (_ bv4294967295 32) ?v_7)) (bvsub (_ bv4294967295 32) ?v_13)) (bvsub (_ bv4294967295 32) ?v_18)) (bvsub (_ bv4294967295 32) ?v_23)) (_ bv0 32)) (not (= ?v_24 (_ bv0 32))) (not (= ?v_25 (_ bv0 32))))))))))))))))))
(check-sat)
(exit)
