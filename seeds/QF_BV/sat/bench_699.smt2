(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun T4_10985 () (_ BitVec 32))
(declare-fun T4_7210 () (_ BitVec 32))
(declare-fun T2_10993 () (_ BitVec 16))
(declare-fun T2_7220 () (_ BitVec 16))
(declare-fun T2_7241 () (_ BitVec 16))
(declare-fun T2_7218 () (_ BitVec 16))
(declare-fun T1_10993 () (_ BitVec 8))
(declare-fun T1_10994 () (_ BitVec 8))
(declare-fun T1_10985 () (_ BitVec 8))
(declare-fun T1_10986 () (_ BitVec 8))
(declare-fun T1_10987 () (_ BitVec 8))
(declare-fun T1_10988 () (_ BitVec 8))
(declare-fun T1_7241 () (_ BitVec 8))
(declare-fun T1_7242 () (_ BitVec 8))
(declare-fun T1_7220 () (_ BitVec 8))
(declare-fun T1_7221 () (_ BitVec 8))
(declare-fun T1_7218 () (_ BitVec 8))
(declare-fun T1_7219 () (_ BitVec 8))
(declare-fun T1_7210 () (_ BitVec 8))
(declare-fun T1_7211 () (_ BitVec 8))
(declare-fun T1_7212 () (_ BitVec 8))
(declare-fun T1_7213 () (_ BitVec 8))
(assert (let ((?v_0 ((_ zero_extend 16) T2_10993))) (let ((?v_7 (bvadd ?v_0 (_ bv30 32))) (?v_4 ((_ zero_extend 16) T2_7220))) (let ((?v_6 (bvule (_ bv4 32) ?v_4)) (?v_5 (bvadd ((_ zero_extend 16) T2_7241) (_ bv4 32))) (?v_2 ((_ zero_extend 24) (_ bv1 8)))) (let ((?v_3 (bvadd ?v_0 ?v_2)) (?v_1 (bvadd ?v_0 (_ bv2 32)))) (and true (= T4_7210 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_7213) (_ bv8 32)) ((_ zero_extend 24) T1_7212)) (_ bv8 32)) ((_ zero_extend 24) T1_7211)) (_ bv8 32)) ((_ zero_extend 24) T1_7210))) (= T2_7218 (bvor (bvshl ((_ zero_extend 8) T1_7219) (_ bv8 16)) ((_ zero_extend 8) T1_7218))) (= T2_7220 (bvor (bvshl ((_ zero_extend 8) T1_7221) (_ bv8 16)) ((_ zero_extend 8) T1_7220))) (= T2_7241 (bvor (bvshl ((_ zero_extend 8) T1_7242) (_ bv8 16)) ((_ zero_extend 8) T1_7241))) (= T4_10985 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_10988) (_ bv8 32)) ((_ zero_extend 24) T1_10987)) (_ bv8 32)) ((_ zero_extend 24) T1_10986)) (_ bv8 32)) ((_ zero_extend 24) T1_10985))) (= T2_10993 (bvor (bvshl ((_ zero_extend 8) T1_10994) (_ bv8 16)) ((_ zero_extend 8) T1_10993))) (bvslt (_ bv4294967295 32) (bvadd (bvadd ?v_7 ?v_4) T4_10985)) (not (= (bvadd (bvshl (bvsub ?v_0 (_ bv8 32)) ?v_2) (_ bv141881768 32)) (_ bv0 32))) (bvslt (_ bv0 32) (bvadd ?v_1 ?v_1)) (bvule (_ bv4 16) T2_7241) (bvule (bvadd ?v_0 (_ bv31 32)) (_ bv2114 32)) (bvsle (_ bv0 32) (bvadd ?v_0 (_ bv1 32))) (bvslt ?v_3 (_ bv1024 32)) (bvsle ?v_3 (_ bv32768 32)) (bvslt (_ bv0 32) ?v_3) (bvsle (_ bv0 32) ?v_3) (not (= ?v_3 (_ bv0 32))) (bvule ?v_3 (_ bv2147483647 32)) (= ((_ zero_extend 16) T2_7218) ?v_0) (bvule ?v_0 (_ bv17 32)) (bvult (_ bv16 32) ?v_0) (bvule ?v_0 (_ bv2147483645 32)) (= (_ bv17 32) ?v_0) (bvult (_ bv0 32) ?v_0) (bvult (_ bv0 16) T2_10993) (not (= T4_7210 (_ bv4294967295 32))) (= ?v_5 ?v_4) (bvule ?v_4 ?v_5) (bvule ?v_5 ?v_4) ?v_6 (bvult (_ bv0 32) ?v_4) (= ?v_4 (_ bv264 32)) (bvule ?v_4 (_ bv512 32)) ?v_6 (not (= ?v_4 (_ bv0 32))) (= ?v_7 (_ bv47 32)) (bvult (_ bv0 32) ?v_7) (= T4_7210 T4_10985)))))))
(check-sat)
(exit)
