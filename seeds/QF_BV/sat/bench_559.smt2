(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun T1_14202 () (_ BitVec 8))
(declare-fun T1_14185 () (_ BitVec 8))
(declare-fun T1_14168 () (_ BitVec 8))
(declare-fun T1_14150 () (_ BitVec 8))
(declare-fun T1_14146 () (_ BitVec 8))
(declare-fun T2_13754 () (_ BitVec 16))
(declare-fun T1_13745 () (_ BitVec 8))
(declare-fun T1_14229 () (_ BitVec 8))
(declare-fun T2_14148 () (_ BitVec 16))
(declare-fun T4_13746 () (_ BitVec 32))
(declare-fun T1_14148 () (_ BitVec 8))
(declare-fun T1_14149 () (_ BitVec 8))
(declare-fun T1_13754 () (_ BitVec 8))
(declare-fun T1_13755 () (_ BitVec 8))
(declare-fun T1_13746 () (_ BitVec 8))
(declare-fun T1_13747 () (_ BitVec 8))
(declare-fun T1_13748 () (_ BitVec 8))
(declare-fun T1_13749 () (_ BitVec 8))
(assert (let ((?v_16 ((_ zero_extend 24) T1_14202)) (?v_15 ((_ zero_extend 24) T1_14185)) (?v_0 ((_ zero_extend 24) (_ bv1 8))) (?v_14 ((_ zero_extend 24) T1_14168)) (?v_7 ((_ zero_extend 24) T1_14150)) (?v_10 ((_ zero_extend 24) T1_14146)) (?v_3 ((_ zero_extend 16) T2_13754)) (?v_2 ((_ zero_extend 24) T1_13745))) (let ((?v_4 (bvsub ?v_2 (_ bv8 32)))) (let ((?v_5 (bvadd (bvadd (bvadd (bvadd ?v_4 (_ bv4280007 32)) ?v_3) (_ bv7 32)) ?v_10))) (let ((?v_11 (bvadd (bvadd ?v_5 (_ bv3 32)) ?v_7))) (let ((?v_17 (bvadd (bvadd ?v_11 ?v_0) ?v_14))) (let ((?v_1 (bvsub (bvadd (bvadd ?v_17 ?v_0) ?v_15) (_ bv4279975 32)))) (let ((?v_22 (bvsub (bvadd (bvadd ?v_1 (_ bv4279976 32)) ?v_16) (_ bv1 32))) (?v_18 (bvsub ?v_17 (_ bv4279975 32)))) (let ((?v_21 (bvadd ?v_18 (_ bv4279976 32)))) (let ((?v_20 (bvsub (bvadd ?v_21 ?v_15) (_ bv1 32))) (?v_19 (bvadd ?v_18 (_ bv4279992 32))) (?v_13 ((_ zero_extend 16) T2_14148)) (?v_6 (bvsub ?v_5 (_ bv4279973 32)))) (let ((?v_12 (bvadd ?v_6 (_ bv4279976 32)))) (let ((?v_8 (bvsub (bvadd ?v_12 ?v_7) (_ bv1 32))) (?v_9 (bvadd ?v_6 (_ bv4279993 32)))) (and true (= T4_13746 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_13749) (_ bv8 32)) ((_ zero_extend 24) T1_13748)) (_ bv8 32)) ((_ zero_extend 24) T1_13747)) (_ bv8 32)) ((_ zero_extend 24) T1_13746))) (= T2_13754 (bvor (bvshl ((_ zero_extend 8) T1_13755) (_ bv8 16)) ((_ zero_extend 8) T1_13754))) (= T2_14148 (bvor (bvshl ((_ zero_extend 8) T1_14149) (_ bv8 16)) ((_ zero_extend 8) T1_14148))) (bvult (bvadd ?v_1 (_ bv4280002 32)) ?v_22) (bvule (bvadd (bvadd (bvadd (bvadd (bvadd ?v_2 (_ bv1 32)) (_ bv4279998 32)) ?v_3) (_ bv6 32)) (_ bv1 32)) (_ bv4280822 32)) (not (= (bvadd (bvadd ?v_4 (_ bv31 32)) (_ bv4279976 32)) (_ bv0 32))) (bvule (_ bv8 32) ?v_2) (not (= ?v_2 (_ bv1 32))) (bvule ?v_4 (_ bv0 32)) (bvult (_ bv0 32) ?v_3) (not (= ?v_3 (_ bv0 32))) (= T4_13746 ?v_3) (not (= ?v_9 ?v_8)) (bvule ?v_8 ?v_9) (bvult ?v_10 (_ bv8 32)) (not (= ?v_10 (_ bv0 32))) (= ?v_10 (_ bv1 32)) (not (= (bvadd (bvsub ?v_11 (_ bv4279975 32)) (_ bv4279976 32)) (_ bv0 32))) (not (= ?v_12 (_ bv0 32))) (not (= ?v_13 (_ bv0 32))) (= (bvadd (bvadd (bvadd (bvadd (bvadd ?v_13 (bvsub (_ bv4294967295 32) ?v_7)) (bvsub (_ bv4294967295 32) ?v_14)) (bvsub (_ bv4294967295 32) ?v_15)) (bvsub (_ bv4294967295 32) ?v_16)) (bvsub (_ bv4294967295 32) ((_ zero_extend 24) T1_14229))) (_ bv0 32)) (bvule ?v_20 ?v_19) (not (= ?v_19 ?v_20)) (not (= ?v_21 (_ bv0 32))) (bvult (bvadd ?v_1 (_ bv4279996 32)) ?v_22))))))))))))))
(check-sat)
(exit)
