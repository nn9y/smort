(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
 Patrice Godefroid, SAGE (systematic dynamic test generation)
 For more information: http://research.microsoft.com/en-us/um/people/pg/public_psfiles/ndss2008.pdf
|)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun T1_9091 () (_ BitVec 8))
(declare-fun T1_9074 () (_ BitVec 8))
(declare-fun T1_9070 () (_ BitVec 8))
(declare-fun T2_8678 () (_ BitVec 16))
(declare-fun T1_8669 () (_ BitVec 8))
(declare-fun T2_9072 () (_ BitVec 16))
(declare-fun T1_9114 () (_ BitVec 8))
(declare-fun T1_9141 () (_ BitVec 8))
(declare-fun T4_8670 () (_ BitVec 32))
(declare-fun T1_9163 () (_ BitVec 8))
(declare-fun T1_9072 () (_ BitVec 8))
(declare-fun T1_9073 () (_ BitVec 8))
(declare-fun T1_8678 () (_ BitVec 8))
(declare-fun T1_8679 () (_ BitVec 8))
(declare-fun T1_8670 () (_ BitVec 8))
(declare-fun T1_8671 () (_ BitVec 8))
(declare-fun T1_8672 () (_ BitVec 8))
(declare-fun T1_8673 () (_ BitVec 8))
(assert (let ((?v_5 ((_ zero_extend 24) T1_9091)) (?v_4 ((_ zero_extend 24) T1_9074)) (?v_13 ((_ zero_extend 24) T1_9070)) (?v_2 ((_ zero_extend 16) T2_8678)) (?v_1 ((_ zero_extend 24) T1_8669))) (let ((?v_3 (bvsub ?v_1 (_ bv8 32)))) (let ((?v_8 (bvadd (bvadd (bvadd (bvadd ?v_3 (_ bv1575015 32)) ?v_2) (_ bv7 32)) ?v_13))) (let ((?v_0 (bvsub (bvadd (bvadd ?v_8 (_ bv3 32)) ?v_4) (_ bv1574983 32)))) (let ((?v_17 (bvadd ?v_0 (_ bv1574984 32)))) (let ((?v_18 (bvsub (bvadd ?v_17 ?v_5) (_ bv1 32))) (?v_19 (bvadd ?v_0 (_ bv1575006 32))) (?v_9 (bvsub ?v_8 (_ bv1574981 32)))) (let ((?v_16 (bvadd ?v_9 (_ bv1574984 32))) (?v_12 ((_ zero_extend 16) T2_9072))) (let ((?v_14 (bvadd ?v_12 (bvsub (_ bv4294967295 32) ?v_4)))) (let ((?v_15 (bvadd ?v_14 (bvsub (_ bv4294967295 32) ?v_5))) (?v_10 (bvsub (bvadd ?v_16 ?v_4) (_ bv1 32))) (?v_11 (bvadd ?v_9 (_ bv1575000 32)))) (let ((?v_7 (bvadd ?v_15 (bvsub (_ bv4294967295 32) ((_ zero_extend 24) T1_9114))))) (let ((?v_6 (bvadd ?v_7 (bvsub (_ bv4294967295 32) ((_ zero_extend 24) T1_9141))))) (and true (= T4_8670 (bvor (bvshl (bvor (bvshl (bvor (bvshl ((_ zero_extend 24) T1_8673) (_ bv8 32)) ((_ zero_extend 24) T1_8672)) (_ bv8 32)) ((_ zero_extend 24) T1_8671)) (_ bv8 32)) ((_ zero_extend 24) T1_8670))) (= T2_8678 (bvor (bvshl ((_ zero_extend 8) T1_8679) (_ bv8 16)) ((_ zero_extend 8) T1_8678))) (= T2_9072 (bvor (bvshl ((_ zero_extend 8) T1_9073) (_ bv8 16)) ((_ zero_extend 8) T1_9072))) (= ?v_19 ?v_18) (bvule (bvadd (bvadd (bvadd (bvadd (bvadd ?v_1 (_ bv1 32)) (_ bv1575006 32)) ?v_2) (_ bv6 32)) (_ bv1 32)) (_ bv1575830 32)) (not (= (bvadd (bvadd ?v_3 (_ bv31 32)) (_ bv1574984 32)) (_ bv0 32))) (bvule (_ bv8 32) ?v_1) (not (= ?v_1 (_ bv1 32))) (bvule ?v_3 (_ bv0 32)) (= (bvadd ?v_6 (bvsub (_ bv4294967295 32) ((_ zero_extend 24) T1_9163))) (_ bv0 32)) (bvult (_ bv0 32) ?v_2) (not (= ?v_2 (_ bv0 32))) (= T4_8670 ?v_2) (not (= ?v_6 (_ bv0 32))) (not (= ?v_7 (_ bv0 32))) (not (= ?v_11 ?v_10)) (bvule ?v_10 ?v_11) (not (= ?v_12 (_ bv0 32))) (bvult ?v_13 (_ bv8 32)) (not (= ?v_13 (_ bv0 32))) (= ?v_13 (_ bv1 32)) (not (= ?v_14 (_ bv0 32))) (not (= ?v_15 (_ bv0 32))) (not (= ?v_16 (_ bv0 32))) (not (= ?v_17 (_ bv0 32))) (bvult (bvadd ?v_0 (_ bv1574994 32)) ?v_18) (bvule ?v_18 ?v_19))))))))))))))
(check-sat)
(exit)
