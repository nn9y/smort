(set-info :smt-lib-version 2.6)
(set-logic BV)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.

Translated to BV by Mathias Preiner.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun W_S1_V1 () Bool)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V4 () Bool)
(assert
 (let
 (($x691
   (forall
    ((V4_0 (_ BitVec 32)) (V5_0 (_ BitVec 32)) 
     (V2_0 (_ BitVec 32)) (MW_S1_V4 Bool) 
     (MW_S1_V5 Bool) (MW_S1_V2 Bool) 
     (MW_S1_V1 Bool) (S1_V4_!72 (_ BitVec 32)) 
     (S1_V4_!76 (_ BitVec 32)) (S1_V1_!75 (_ BitVec 32)) 
     (S1_V1_!79 (_ BitVec 32)) (S1_V2_!74 (_ BitVec 32)) 
     (S1_V2_!78 (_ BitVec 32)) (S1_V5_!73 (_ BitVec 32)) 
     (S1_V5_!77 (_ BitVec 32)))
    (let
    (($x716
      (and (= (ite MW_S1_V4 S1_V4_!72 V4_0) (ite MW_S1_V4 S1_V4_!76 V4_0))
      (= (ite MW_S1_V5 S1_V5_!73 V5_0) (ite MW_S1_V5 S1_V5_!77 V5_0))
      (= (ite MW_S1_V2 S1_V2_!74 V2_0) (ite MW_S1_V2 S1_V2_!78 V2_0))
      (= (ite MW_S1_V1 S1_V1_!75 (_ bv0 32)) (bvadd (bvneg (_ bv1 32)) (ite MW_S1_V2 S1_V2_!78 V2_0))))))
    (let
    (($x705
      (and (not (bvsle V2_0 (_ bv0 32)))
      (bvsge (ite MW_S1_V1 S1_V1_!75 (_ bv0 32)) (bvadd (bvneg (_ bv1 32)) (ite MW_S1_V2 S1_V2_!74 V2_0)))
      (bvsge V2_0 (_ bv1 32)) (not (bvsle (_ bv2 32) V2_0))
      (not (bvsle (ite MW_S1_V2 S1_V2_!78 V2_0) (_ bv0 32))))))
    (let
    (($x554
      (and (= S1_V4_!76 S1_V4_!72) 
      (= S1_V1_!75 S1_V1_!79) 
      (= S1_V2_!74 S1_V2_!78) 
      (= S1_V5_!73 S1_V5_!77) 
      (or (not MW_S1_V5) W_S1_V5) 
      (or (not MW_S1_V2) W_S1_V2) 
      (or (not MW_S1_V1) W_S1_V1)))) 
    (or (not $x554) (not $x705) $x716)))))))
 (let
 (($x25
   (or R_S1_V4 (and W_S1_V5 R_S1_V5) 
   (and W_S1_V2 R_S1_V2) (and W_S1_V1 R_S1_V1))))
 (let (($x27 (= DISJ_W_S1_R_S1 (not $x25)))) (and W_S1_V4 $x27 $x691)))))
(check-sat)
(exit)

