(set-info :smt-lib-version 2.6)
(set-logic BV)
(set-info :source |
   Scholl, Christoph; Disch, Stefan; Pigorsch, Florian and Kupferschmid, 
   Stefan; Using an SMT Solver and Craig Interpolation to Detect and Remove 
   Redundant Linear Constraints in Representations of Non-Convex Polyhedra.
   Proceedings of 6th International Workshop on Satisfiability Modulo
   Theories, Princeton, USA, July 2008.
   <http://abs.informatik.uni-freiburg.de/smtbench/>

Translated to BV by Mathias Preiner.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status sat)
(declare-fun x1 () (_ BitVec 32))
(declare-fun x2 () (_ BitVec 32))
(declare-fun x3 () (_ BitVec 32))
(assert (exists ((?x1 (_ BitVec 32))) (forall ((?x2 (_ BitVec 32))) (exists ((?x3 (_ BitVec 32))) (let ((?v_2 (bvmul (_ bv77 32) ?x2)) (?v_3 (bvmul (_ bv55 32) ?x2)) (?v_0 (bvmul (_ bv75 32) ?x1)) (?v_5 (bvmul (_ bv97 32) ?x2)) (?v_6 (bvmul (_ bv94 32) ?x2)) (?v_1 (bvmul (bvneg (_ bv61 32)) ?x1)) (?v_4 (bvmul (bvneg (_ bv31 32)) ?x1))) (or (or (or (and (and (bvslt (bvadd (bvmul (_ bv91 32) ?x1) (bvmul (bvneg (_ bv4 32)) ?x3)) (_ bv34 32)) (bvsge (bvadd (bvadd (bvmul (_ bv93 32) ?x1) (bvmul (bvneg (_ bv88 32)) ?x2)) (bvmul (bvneg (_ bv1 32)) ?x3)) (_ bv91 32))) (and (bvsle (bvadd (bvadd (bvmul (_ bv63 32) ?x1) ?v_2) (bvmul (bvneg (_ bv75 32)) ?x3)) (bvneg (_ bv96 32))) (= (bvadd (bvmul (bvneg (_ bv50 32)) ?x2) (bvmul (bvneg (_ bv67 32)) ?x3)) (_ bv3 32)))) (and (bvsle (bvadd (bvmul (_ bv84 32) ?x2) (bvmul (bvneg (_ bv34 32)) ?x3)) (_ bv56 32)) (= (bvmul (_ bv46 32) ?x1) (_ bv0 32)))) (or (or (or (bvsle (bvadd (bvmul (_ bv57 32) ?x2) (bvmul (_ bv85 32) ?x3)) (_ bv36 32)) (bvslt (bvadd (bvmul (_ bv38 32) ?x1) (bvmul (_ bv64 32) ?x3)) (bvneg (_ bv32 32)))) (and (bvslt (bvadd (bvadd (bvmul (bvneg (_ bv88 32)) ?x1) (bvmul (bvneg (_ bv51 32)) ?x2)) (bvmul (_ bv35 32) ?x3)) (_ bv88 32)) (and (bvsge (bvadd (bvmul (bvneg (_ bv62 32)) ?x2) (bvmul (_ bv40 32) ?x3)) (_ bv10 32)) (bvsgt (bvadd (bvmul (_ bv2 32) ?x1) (bvmul (_ bv51 32) ?x2)) (bvneg (_ bv60 32)))))) (and (and (and (= (bvadd (bvadd ?v_1 (bvmul (_ bv48 32) ?x2)) (bvmul (bvneg (_ bv54 32)) ?x3)) (_ bv26 32)) (bvsle (bvadd (bvmul (_ bv22 32) ?x1) (bvmul (bvneg (_ bv14 32)) ?x2)) (_ bv29 32))) (or (= (bvadd (bvadd (bvmul (bvneg (_ bv85 32)) ?x1) ?v_3) (bvmul (bvneg (_ bv100 32)) ?x3)) (bvneg (_ bv10 32))) (bvsgt (bvadd (bvadd (bvmul (bvneg (_ bv48 32)) ?x1) (bvmul (bvneg (_ bv86 32)) ?x2)) (bvmul (bvneg (_ bv21 32)) ?x3)) (_ bv72 32)))) (or (and (not (= (bvmul (bvneg (_ bv24 32)) ?x3) (_ bv24 32))) (bvslt (bvadd (bvmul (bvneg (_ bv21 32)) ?x1) (bvmul (bvneg (_ bv39 32)) ?x3)) (_ bv0 32))) (or (bvslt (bvadd ?v_0 (bvmul (_ bv16 32) ?x2)) (_ bv0 32)) (bvsge (bvmul (_ bv58 32) ?x3) (bvneg (_ bv23 32)))))))) (and (or (or (or (bvsgt (bvadd (bvmul (_ bv65 32) ?x1) (bvmul (_ bv50 32) ?x2)) (bvneg (_ bv31 32))) (or (= (bvadd (bvmul (bvneg (_ bv13 32)) ?x1) (bvmul (_ bv68 32) ?x3)) (_ bv11 32)) (bvsgt (bvmul (bvneg (_ bv96 32)) ?x1) (_ bv0 32)))) (or (not (= (bvadd (bvadd (bvmul (bvneg (_ bv82 32)) ?x1) (bvmul (_ bv28 32) ?x2)) (bvmul (_ bv95 32) ?x3)) (bvneg (_ bv82 32)))) (or (bvsge (bvadd ?v_0 (bvmul (_ bv56 32) ?x3)) (_ bv73 32)) (not (= (bvadd (bvadd ?v_1 (bvmul (_ bv18 32) ?x2)) (bvmul (_ bv19 32) ?x3)) (_ bv81 32)))))) (or (or (or (not (= (bvadd (bvadd (bvmul (_ bv40 32) ?x1) ?v_5) (bvmul (_ bv73 32) ?x3)) (_ bv90 32))) (= (bvadd (bvadd (bvmul (_ bv88 32) ?x1) (bvmul (bvneg (_ bv98 32)) ?x2)) (bvmul (bvneg (_ bv93 32)) ?x3)) (_ bv0 32))) (bvsgt (bvadd (bvadd ?v_4 ?v_2) (bvmul (bvneg (_ bv27 32)) ?x3)) (_ bv38 32))) (and (or (not (= (bvmul (bvneg (_ bv83 32)) ?x2) (bvneg (_ bv12 32)))) (bvsle (bvadd ?v_3 (bvmul (bvneg (_ bv80 32)) ?x3)) (bvneg (_ bv52 32)))) (or (bvsge (bvadd (bvadd ?v_4 ?v_5) (bvmul (bvneg (_ bv58 32)) ?x3)) (_ bv25 32)) (bvsge (bvadd (bvadd (bvmul (_ bv24 32) ?x1) (bvmul (bvneg (_ bv82 32)) ?x2)) (bvmul (bvneg (_ bv11 32)) ?x3)) (bvneg (_ bv8 32))))))) (or (and (or (bvsgt (bvadd ?v_6 (bvmul (_ bv91 32) ?x3)) (bvneg (_ bv25 32))) (not (= (bvadd (bvadd (bvmul (_ bv74 32) ?x1) (bvmul (bvneg (_ bv60 32)) ?x2)) (bvmul (bvneg (_ bv70 32)) ?x3)) (_ bv0 32)))) (not (= (bvadd (bvmul (bvneg (_ bv45 32)) ?x1) (bvmul (bvneg (_ bv78 32)) ?x3)) (bvneg (_ bv3 32))))) (and (= (bvmul (bvneg (_ bv25 32)) ?x1) (_ bv29 32)) (or (or (not (= (bvadd (bvmul (bvneg (_ bv39 32)) ?x1) (bvmul (bvneg (_ bv35 32)) ?x3)) (_ bv63 32))) (= (bvmul (bvneg (_ bv60 32)) ?x1) (_ bv35 32))) (and (bvsge (bvadd (bvmul (_ bv25 32) ?x1) (bvmul (_ bv52 32) ?x3)) (_ bv46 32)) (bvsgt (bvadd (bvmul (_ bv80 32) ?x1) ?v_6) (_ bv63 32)))))))))))))
(check-sat)
(exit)
