(set-info :smt-lib-version 2.6)
(set-logic BV)
(set-info
  :source |
 Generated by PSyCO 0.1
 More info in N. P. Lopes and J. Monteiro. Weakest Precondition Synthesis for
 Compiler Optimizations, VMCAI'14.

Translated to BV by Mathias Preiner.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun W_S1_V2 () Bool)
(declare-fun W_S1_V5 () Bool)
(declare-fun R_S1_V2 () Bool)
(declare-fun R_S1_V5 () Bool)
(declare-fun R_S1_V4 () Bool)
(declare-fun DISJ_W_S1_R_S1 () Bool)
(declare-fun W_S1_V4 () Bool)
(declare-fun R_S1_V1 () Bool)
(declare-fun W_S1_V1 () Bool)
(assert
 (let
 (($x982
   (forall
    ((V4_0 (_ BitVec 32)) (V5_0 (_ BitVec 32)) 
     (V2_0 (_ BitVec 32)) (MW_S1_V4 Bool) 
     (MW_S1_V5 Bool) (MW_S1_V2 Bool) 
     (MW_S1_V1 Bool) (S1_V4_!380 (_ BitVec 32)) 
     (S1_V4_!384 (_ BitVec 32)) (S1_V1_!383 (_ BitVec 32)) 
     (S1_V1_!387 (_ BitVec 32)) (S1_V2_!382 (_ BitVec 32)) 
     (S1_V2_!386 (_ BitVec 32)) (S1_V5_!381 (_ BitVec 32)) 
     (S1_V5_!385 (_ BitVec 32)))
    (let
    (($x998
      (and (= (ite MW_S1_V4 S1_V4_!380 V4_0) (ite MW_S1_V4 S1_V4_!384 V4_0))
      (= (ite MW_S1_V5 S1_V5_!381 V5_0) (ite MW_S1_V5 S1_V5_!385 V5_0))
      (= (ite MW_S1_V2 S1_V2_!382 V2_0) (ite MW_S1_V2 S1_V2_!386 V2_0))
      (= (ite MW_S1_V1 S1_V1_!383 (_ bv0 32)) (bvneg (_ bv1 32))))))
    (let
    (($x617
      (and (not (bvsle V2_0 (_ bv0 32)))
      (bvsge (ite MW_S1_V1 S1_V1_!383 (_ bv0 32))
      (bvadd (bvneg (_ bv1 32)) (ite MW_S1_V2 S1_V2_!382 V2_0))) 
      (bvsge V2_0 (_ bv1 32)) (not (bvsle (_ bv2 32) V2_0)) 
      (bvsle (ite MW_S1_V2 S1_V2_!386 V2_0) (_ bv0 32)))))
    (let
    (($x1163
      (and (= S1_V4_!384 S1_V4_!380) 
      (= S1_V1_!387 S1_V1_!383) 
      (= S1_V2_!382 S1_V2_!386) 
      (= S1_V5_!385 S1_V5_!381) 
      (or (not MW_S1_V5) W_S1_V5) 
      (or (not MW_S1_V2) W_S1_V2) 
      (not MW_S1_V1)))) (or (not $x1163) (not $x617) $x998)))))))
 (let
 (($x960 (not (or R_S1_V4 (and W_S1_V5 R_S1_V5) (and W_S1_V2 R_S1_V2)))))
 (let (($x516 (not W_S1_V2)))
 (let (($x1278 (or $x516 (and (not R_S1_V1) DISJ_W_S1_R_S1))))
 (let (($x522 (not W_S1_V1)))
 (and $x522 $x1278 W_S1_V4 (= DISJ_W_S1_R_S1 $x960) $x982)))))))
(check-sat)
(exit)

