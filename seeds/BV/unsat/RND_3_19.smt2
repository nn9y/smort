(set-info :smt-lib-version 2.6)
(set-logic BV)
(set-info :source |
   Scholl, Christoph; Disch, Stefan; Pigorsch, Florian and Kupferschmid, 
   Stefan; Using an SMT Solver and Craig Interpolation to Detect and Remove 
   Redundant Linear Constraints in Representations of Non-Convex Polyhedra.
   Proceedings of 6th International Workshop on Satisfiability Modulo
   Theories, Princeton, USA, July 2008.
   <http://abs.informatik.uni-freiburg.de/smtbench/>

Translated to BV by Mathias Preiner.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unsat)
(declare-fun y2 () (_ BitVec 32))
(declare-fun y3 () (_ BitVec 32))
(declare-fun x1 () (_ BitVec 32))
(declare-fun y1 () (_ BitVec 32))
(assert (and (and (exists ((?y2 (_ BitVec 32))) (or (exists ((?y3 (_ BitVec 32))) (and (or (bvslt (bvadd (bvmul (bvneg (_ bv48 32)) ?y3) (bvmul (_ bv84 32) ?y2)) (bvneg (_ bv32 32))) (not (= (bvmul (bvneg (_ bv60 32)) x1) (_ bv0 32)))) (and (bvsge (bvadd (bvmul (bvneg (_ bv51 32)) ?y3) (bvmul (bvneg (_ bv87 32)) ?y2)) (_ bv0 32)) (bvsgt (bvadd (bvmul (bvneg (_ bv61 32)) ?y3) (bvmul (bvneg (_ bv94 32)) x1)) (_ bv86 32))))) (and (exists ((?y3 (_ BitVec 32))) (or (not (= (bvmul (bvneg (_ bv31 32)) ?y2) (bvneg (_ bv25 32)))) (bvsge (bvadd (bvmul (_ bv30 32) ?y3) (bvmul (_ bv54 32) ?y2)) (_ bv0 32)))) (and (bvslt (bvmul (bvneg (_ bv88 32)) ?y2) (bvneg (_ bv86 32))) (bvsge (bvadd (bvmul (_ bv73 32) ?y2) (bvmul (bvneg (_ bv59 32)) x1)) (_ bv82 32)))))) (exists ((?y2 (_ BitVec 32))) (and (forall ((?y3 (_ BitVec 32))) (and (and (= (bvmul (_ bv20 32) ?y2) (bvneg (_ bv90 32))) (not (= (bvadd (bvadd (bvmul (_ bv90 32) ?y3) (bvmul (_ bv5 32) ?y2)) (bvmul (bvneg (_ bv23 32)) x1)) (_ bv8 32)))) (and (not (= (bvadd (bvmul (_ bv100 32) ?y3) (bvmul (_ bv91 32) ?y2)) (bvneg (_ bv28 32)))) (bvslt (bvadd (bvmul (bvneg (_ bv43 32)) ?y3) (bvmul (_ bv14 32) x1)) (bvneg (_ bv41 32)))))) (or (and (and (bvsle (bvmul (bvneg (_ bv89 32)) ?y2) (_ bv30 32)) (bvsgt (bvadd (bvmul (_ bv56 32) ?y2) (bvmul (_ bv31 32) x1)) (bvneg (_ bv46 32)))) (forall ((?y3 (_ BitVec 32))) (not (= (bvadd (bvmul (bvneg (_ bv36 32)) ?y3) (bvmul (bvneg (_ bv10 32)) x1)) (_ bv0 32))))) (bvsge (bvadd (bvmul (_ bv34 32) ?y2) (bvmul (_ bv98 32) x1)) (bvneg (_ bv71 32))))))) (and (and (and (exists ((?y1 (_ BitVec 32))) (or (forall ((?y3 (_ BitVec 32))) (bvsge (bvadd (bvadd (bvmul (_ bv55 32) ?y3) (bvmul (_ bv34 32) ?y1)) (bvmul (_ bv41 32) x1)) (_ bv0 32))) (or (= (bvadd (bvmul (_ bv33 32) ?y1) (bvmul (_ bv100 32) x1)) (_ bv63 32)) (bvsge (bvmul (_ bv85 32) x1) (bvneg (_ bv8 32)))))) (forall ((?y1 (_ BitVec 32))) (and (and (bvsge (bvadd (bvmul (_ bv54 32) ?y1) (bvmul (_ bv11 32) x1)) (_ bv0 32)) (and (= (bvadd (bvmul (bvneg (_ bv61 32)) ?y1) (bvmul (_ bv25 32) x1)) (_ bv0 32)) (bvsgt (bvadd (bvmul (_ bv14 32) ?y1) (bvmul (_ bv97 32) x1)) (bvneg (_ bv45 32))))) (exists ((?y2 (_ BitVec 32))) (forall ((?y3 (_ BitVec 32))) (bvsle (bvadd (bvadd (bvmul (_ bv74 32) ?y3) (bvmul (bvneg (_ bv20 32)) ?y2)) (bvmul (bvneg (_ bv67 32)) ?y1)) (bvneg (_ bv100 32)))))))) (or (forall ((?y1 (_ BitVec 32))) (forall ((?y2 (_ BitVec 32))) (exists ((?y3 (_ BitVec 32))) (or (not (= (bvadd (bvadd (bvadd (bvmul (_ bv6 32) ?y3) (bvmul (_ bv82 32) ?y2)) (bvmul (bvneg (_ bv78 32)) ?y1)) (bvmul (_ bv32 32) x1)) (bvneg (_ bv9 32)))) (bvsge (bvadd (bvadd (bvmul (bvneg (_ bv73 32)) ?y3) (bvmul (_ bv84 32) ?y2)) (bvmul (bvneg (_ bv88 32)) ?y1)) (bvneg (_ bv62 32))))))) (exists ((?y1 (_ BitVec 32))) (and (forall ((?y2 (_ BitVec 32))) (bvsgt (bvadd (bvmul (_ bv3 32) ?y2) (bvmul (bvneg (_ bv82 32)) ?y1)) (bvneg (_ bv54 32)))) (bvsge (bvmul (_ bv35 32) ?y1) (_ bv0 32)))))) (or (forall ((?y1 (_ BitVec 32))) (exists ((?y3 (_ BitVec 32))) (and (and (bvsle (bvadd (bvmul (bvneg (_ bv81 32)) ?y3) (bvmul (bvneg (_ bv41 32)) x1)) (bvneg (_ bv81 32))) (not (= (bvadd (bvadd (bvmul (bvneg (_ bv74 32)) ?y3) (bvmul (_ bv62 32) ?y1)) (bvmul (bvneg (_ bv78 32)) x1)) (_ bv0 32)))) (bvsgt (bvmul (bvneg (_ bv34 32)) ?y1) (_ bv0 32))))) (and (or (exists ((?y1 (_ BitVec 32))) (or (exists ((?y2 (_ BitVec 32))) (bvsle (bvadd (bvadd (bvmul (_ bv65 32) ?y2) (bvmul (_ bv100 32) ?y1)) (bvmul (bvneg (_ bv71 32)) x1)) (_ bv53 32))) (exists ((?y2 (_ BitVec 32))) (bvsle (bvadd (bvadd (bvmul (_ bv28 32) ?y2) (bvmul (_ bv62 32) ?y1)) (bvmul (_ bv43 32) x1)) (_ bv80 32))))) (exists ((?y1 (_ BitVec 32))) (exists ((?y2 (_ BitVec 32))) (bvslt (bvadd (bvmul (_ bv91 32) ?y2) (bvmul (bvneg (_ bv18 32)) x1)) (_ bv1 32))))) (or (exists ((?y1 (_ BitVec 32))) (or (= (bvadd (bvmul (bvneg (_ bv8 32)) ?y1) (bvmul (_ bv87 32) x1)) (_ bv3 32)) (bvsgt (bvadd (bvmul (bvneg (_ bv67 32)) ?y1) (bvmul (_ bv29 32) x1)) (_ bv47 32)))) (forall ((?y1 (_ BitVec 32))) (forall ((?y2 (_ BitVec 32))) (bvsge (bvadd (bvadd (bvmul (_ bv26 32) ?y2) (bvmul (bvneg (_ bv62 32)) ?y1)) (bvmul (_ bv67 32) x1)) (_ bv0 32))))))))))
(check-sat)
(exit)
