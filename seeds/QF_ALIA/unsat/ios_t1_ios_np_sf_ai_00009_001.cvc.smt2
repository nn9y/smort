(set-info :smt-lib-version 2.6)
(set-logic QF_ALIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun earray_12 () (Array Int Int))
(declare-fun earray_15 () (Array Int Int))
(declare-fun earray_18 () (Array Int Int))
(declare-fun earray_21 () (Array Int Int))
(declare-fun earray_24 () (Array Int Int))
(declare-fun earray_27 () (Array Int Int))
(declare-fun earray_3 () (Array Int Int))
(declare-fun earray_30 () (Array Int Int))
(declare-fun earray_32 () (Array Int Int))
(declare-fun earray_34 () (Array Int Int))
(declare-fun earray_36 () (Array Int Int))
(declare-fun earray_38 () (Array Int Int))
(declare-fun earray_40 () (Array Int Int))
(declare-fun earray_42 () (Array Int Int))
(declare-fun earray_44 () (Array Int Int))
(declare-fun earray_46 () (Array Int Int))
(declare-fun earray_6 () (Array Int Int))
(declare-fun earray_9 () (Array Int Int))
(declare-fun elem_0 () Int)
(declare-fun elem_1 () Int)
(declare-fun elem_10 () Int)
(declare-fun elem_11 () Int)
(declare-fun elem_13 () Int)
(declare-fun elem_14 () Int)
(declare-fun elem_16 () Int)
(declare-fun elem_17 () Int)
(declare-fun elem_19 () Int)
(declare-fun elem_2 () Int)
(declare-fun elem_20 () Int)
(declare-fun elem_22 () Int)
(declare-fun elem_23 () Int)
(declare-fun elem_25 () Int)
(declare-fun elem_26 () Int)
(declare-fun elem_28 () Int)
(declare-fun elem_29 () Int)
(declare-fun elem_31 () Int)
(declare-fun elem_33 () Int)
(declare-fun elem_35 () Int)
(declare-fun elem_37 () Int)
(declare-fun elem_39 () Int)
(declare-fun elem_4 () Int)
(declare-fun elem_41 () Int)
(declare-fun elem_43 () Int)
(declare-fun elem_45 () Int)
(declare-fun elem_5 () Int)
(declare-fun elem_7 () Int)
(declare-fun elem_8 () Int)
(declare-fun a () (Array Int Int))
(declare-fun i () Int)
(assert (= earray_12 (store earray_9 elem_10 elem_11)))
(assert (= earray_15 (store earray_12 elem_13 elem_14)))
(assert (= earray_18 (store earray_15 elem_16 elem_17)))
(assert (= earray_21 (store earray_18 elem_19 elem_20)))
(assert (= earray_24 (store earray_21 elem_22 elem_23)))
(assert (= earray_27 (store earray_24 elem_25 elem_26)))
(assert (= earray_3 (store a elem_0 elem_2)))
(assert (= earray_30 (store a elem_22 elem_29)))
(assert (= earray_32 (store earray_30 elem_19 elem_31)))
(assert (= earray_34 (store earray_32 elem_16 elem_33)))
(assert (= earray_36 (store earray_34 elem_13 elem_35)))
(assert (= earray_38 (store earray_36 elem_10 elem_37)))
(assert (= earray_40 (store earray_38 elem_7 elem_39)))
(assert (= earray_42 (store earray_40 elem_4 elem_41)))
(assert (= earray_44 (store earray_42 elem_0 elem_43)))
(assert (= earray_46 (store earray_44 i elem_45)))
(assert (= earray_6 (store earray_3 elem_4 elem_5)))
(assert (= earray_9 (store earray_6 elem_7 elem_8)))
(assert (= elem_0 (+ i 1)))
(assert (= elem_1 (select a i)))
(assert (= elem_10 (+ elem_7 1)))
(assert (= elem_11 (+ elem_8 1)))
(assert (= elem_13 (+ elem_10 1)))
(assert (= elem_14 (+ elem_11 1)))
(assert (= elem_16 (+ elem_13 1)))
(assert (= elem_17 (+ elem_14 1)))
(assert (= elem_19 (+ elem_16 1)))
(assert (= elem_2 (+ elem_1 1)))
(assert (= elem_20 (+ elem_17 1)))
(assert (= elem_22 (+ elem_19 1)))
(assert (= elem_23 (+ elem_20 1)))
(assert (= elem_25 (+ elem_22 1)))
(assert (= elem_26 (+ elem_23 1)))
(assert (= elem_28 (select a elem_25)))
(assert (= elem_29 (- elem_28 1)))
(assert (= elem_31 (- elem_29 1)))
(assert (= elem_33 (- elem_31 1)))
(assert (= elem_35 (- elem_33 1)))
(assert (= elem_37 (- elem_35 1)))
(assert (= elem_39 (- elem_37 1)))
(assert (= elem_4 (+ elem_0 1)))
(assert (= elem_41 (- elem_39 1)))
(assert (= elem_43 (- elem_41 1)))
(assert (= elem_45 (- elem_43 1)))
(assert (= elem_5 (+ elem_2 1)))
(assert (= elem_7 (+ elem_4 1)))
(assert (= elem_8 (+ elem_5 1)))
(assert (= earray_27 earray_46))
(assert (not (= elem_26 elem_28)))
(check-sat)
(exit)
