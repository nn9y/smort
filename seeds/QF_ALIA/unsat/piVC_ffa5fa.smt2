(set-info :smt-lib-version 2.6)
(set-logic QF_ALIA)
(set-info :source |pvc|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun length3 () Int)
(declare-fun length2 () Int)
(declare-fun length1 () Int)
(declare-fun a2 () (Array Int Int))
(declare-fun a1 () (Array Int Int))
(assert (let ((?v_12 (< 0 0)) (?v_11 (select a1 0)) (?v_21 (select a2 0)) (?v_5 (* (- 1) length2))) (let ((?v_0 (< 0 (+ ?v_5 1))) (?v_2 (* (- 1) length1))) (let ((?v_6 (< 0 (+ ?v_2 length2))) (?v_1 (+ (- 1) length2))) (let ((?v_8 (select a1 ?v_1))) (let ((?v_3 (* (- 1) ?v_8)) (?v_9 (+ (- 1) length1))) (let ((?v_7 (select a1 ?v_9)) (?v_15 (< 0 ?v_1)) (?v_4 (< 0 (+ ?v_2 1))) (?v_14 (< 0 (+ ?v_5 length1)))) (let ((?v_10 (* (- 1) ?v_7)) (?v_19 (< 0 ?v_9)) (?v_13 (* (- 1) ?v_11)) (?v_18 (select a2 ?v_1))) (let ((?v_16 (* (- 1) ?v_18)) (?v_17 (select a2 ?v_9))) (let ((?v_20 (* (- 1) ?v_17)) (?v_22 (* (- 1) ?v_21))) (let ((?v_23 (and (and (and (and (and (and (and (or (or ?v_0 (or ?v_6 ?v_12)) (<= 0 (+ ?v_3 ?v_7))) (or (or ?v_0 (or ?v_15 ?v_4)) (<= 0 (+ ?v_3 ?v_11)))) (or (or ?v_4 (or ?v_14 ?v_6)) (<= 0 (+ ?v_10 ?v_8)))) (or (or ?v_4 (or ?v_19 ?v_4)) (<= 0 (+ ?v_10 ?v_11)))) (or (or ?v_12 (or ?v_0 ?v_6)) (<= 0 (+ ?v_13 ?v_8)))) (or (or ?v_12 (or ?v_4 ?v_12)) (<= 0 (+ ?v_13 ?v_7)))) (and (and (and (and (and (or (or ?v_0 (or ?v_6 ?v_14)) (<= 0 (+ ?v_16 ?v_17))) (or (or ?v_0 (or ?v_15 ?v_0)) (<= 0 (+ ?v_16 ?v_21)))) (or (or ?v_4 (or ?v_14 ?v_12)) (<= 0 (+ ?v_20 ?v_18)))) (or (or ?v_4 (or ?v_19 ?v_0)) (<= 0 (+ ?v_20 ?v_21)))) (or (or ?v_12 (or ?v_0 ?v_12)) (<= 0 (+ ?v_22 ?v_18)))) (or (or ?v_12 (or ?v_4 ?v_14)) (<= 0 (+ ?v_22 ?v_17))))) (and (<= 0 length2) (<= 0 length1))))) (and (and ?v_23 (and (= 0 (+ ?v_2 ?v_5 length3)) ?v_23)) ?v_12))))))))))))
(check-sat)
(exit)
