(set-info :smt-lib-version 2.6)
(set-logic QF_ALIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_12 () (Array Int Int))
(declare-fun a_15 () (Array Int Int))
(declare-fun a_17 () (Array Int Int))
(declare-fun a_19 () (Array Int Int))
(declare-fun a_22 () (Array Int Int))
(declare-fun a_3 () (Array Int Int))
(declare-fun a_6 () (Array Int Int))
(declare-fun a_9 () (Array Int Int))
(declare-fun e_0 () Int)
(declare-fun e_1 () Int)
(declare-fun e_10 () Int)
(declare-fun e_11 () Int)
(declare-fun e_13 () Int)
(declare-fun e_14 () Int)
(declare-fun e_16 () Int)
(declare-fun e_18 () Int)
(declare-fun e_2 () Int)
(declare-fun e_20 () Int)
(declare-fun e_21 () Int)
(declare-fun e_4 () Int)
(declare-fun e_5 () Int)
(declare-fun e_7 () Int)
(declare-fun e_8 () Int)
(declare-fun a () (Array Int Int))
(declare-fun i () Int)
(assert (= a_12 (store a_9 e_10 e_11)))
(assert (= a_15 (store a e_7 e_14)))
(assert (= a_17 (store a_15 e_4 e_16)))
(assert (= a_19 (store a_17 e_0 e_18)))
(assert (= a_22 (store a_19 e_20 e_21)))
(assert (= a_3 (store a e_0 e_2)))
(assert (= a_6 (store a_3 e_4 e_5)))
(assert (= a_9 (store a_6 e_7 e_8)))
(assert (= e_0 (+ i 1)))
(assert (= e_1 (select a i)))
(assert (= e_10 (+ i 4)))
(assert (= e_11 (+ e_1 4)))
(assert (= e_13 (select a e_10)))
(assert (= e_14 (- e_13 1)))
(assert (= e_16 (- e_13 2)))
(assert (= e_18 (- e_13 3)))
(assert (= e_2 (+ e_1 1)))
(assert (= e_20 (+ i 0)))
(assert (= e_21 (- e_13 4)))
(assert (= e_4 (+ i 2)))
(assert (= e_5 (+ e_1 2)))
(assert (= e_7 (+ i 3)))
(assert (= e_8 (+ e_1 3)))
(assert (= a_12 a_22))
(assert (not (= e_11 e_13)))
(check-sat)
(exit)
