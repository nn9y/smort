(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_157 () (Array Index Element))
(declare-fun a_159 () (Array Index Element))
(declare-fun a_161 () (Array Index Element))
(declare-fun a_163 () (Array Index Element))
(declare-fun a_165 () (Array Index Element))
(declare-fun a_167 () (Array Index Element))
(declare-fun a_169 () (Array Index Element))
(declare-fun a_171 () (Array Index Element))
(declare-fun a_173 () (Array Index Element))
(declare-fun a_175 () (Array Index Element))
(declare-fun a_177 () (Array Index Element))
(declare-fun a_179 () (Array Index Element))
(declare-fun a_180 () (Array Index Element))
(declare-fun a_181 () (Array Index Element))
(declare-fun a_183 () (Array Index Element))
(declare-fun a_185 () (Array Index Element))
(declare-fun a_187 () (Array Index Element))
(declare-fun a_189 () (Array Index Element))
(declare-fun a_191 () (Array Index Element))
(declare-fun a_193 () (Array Index Element))
(declare-fun a_195 () (Array Index Element))
(declare-fun a_197 () (Array Index Element))
(declare-fun e_156 () Element)
(declare-fun e_158 () Element)
(declare-fun e_160 () Element)
(declare-fun e_162 () Element)
(declare-fun e_164 () Element)
(declare-fun e_166 () Element)
(declare-fun e_168 () Element)
(declare-fun e_170 () Element)
(declare-fun e_172 () Element)
(declare-fun e_174 () Element)
(declare-fun e_176 () Element)
(declare-fun e_178 () Element)
(declare-fun e_182 () Element)
(declare-fun e_184 () Element)
(declare-fun e_186 () Element)
(declare-fun e_188 () Element)
(declare-fun e_190 () Element)
(declare-fun e_192 () Element)
(declare-fun e_194 () Element)
(declare-fun e_196 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(assert (= a_157 (store a1 i4 e_156)))
(assert (= a_159 (store a_157 i5 e_158)))
(assert (= a_161 (store a_159 i2 e_160)))
(assert (= a_163 (store a_161 i0 e_162)))
(assert (= a_165 (store a_163 i5 e_164)))
(assert (= a_167 (store a_165 i0 e_166)))
(assert (= a_169 (store a_167 i3 e_168)))
(assert (= a_171 (store a_169 i1 e_170)))
(assert (= a_173 (store a_171 i3 e_172)))
(assert (= a_175 (store a_173 i4 e_174)))
(assert (= a_177 (store a_175 i5 e_176)))
(assert (= a_179 (store a_177 i0 e_178)))
(assert (= a_180 (store a_159 i0 e_162)))
(assert (= a_181 (store a_180 i2 e_160)))
(assert (= a_183 (store a_181 i0 e_182)))
(assert (= a_185 (store a_183 i5 e_184)))
(assert (= a_187 (store a_185 i3 e_186)))
(assert (= a_189 (store a_187 i1 e_188)))
(assert (= a_191 (store a_189 i4 e_190)))
(assert (= a_193 (store a_191 i3 e_192)))
(assert (= a_195 (store a_193 i5 e_194)))
(assert (= a_197 (store a_195 i1 e_196)))
(assert (= e_156 (select a1 i5)))
(assert (= e_158 (select a1 i4)))
(assert (= e_160 (select a_159 i0)))
(assert (= e_162 (select a_159 i2)))
(assert (= e_164 (select a_163 i0)))
(assert (= e_166 (select a_163 i5)))
(assert (= e_168 (select a_167 i1)))
(assert (= e_170 (select a_167 i3)))
(assert (= e_172 (select a_171 i4)))
(assert (= e_174 (select a_171 i3)))
(assert (= e_176 (select a_175 i0)))
(assert (= e_178 (select a_175 i5)))
(assert (= e_182 (select a_181 i5)))
(assert (= e_184 (select a_181 i0)))
(assert (= e_186 (select a_185 i1)))
(assert (= e_188 (select a_185 i3)))
(assert (= e_190 (select a_189 i3)))
(assert (= e_192 (select a_189 i4)))
(assert (= e_194 (select a_193 i1)))
(assert (= e_196 (select a_193 i5)))
(assert (not (= a_179 a_197)))
(check-sat)
(exit)
