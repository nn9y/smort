(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_1 () (Array Index Element))
(declare-fun a_11 () (Array Index Element))
(declare-fun a_13 () (Array Index Element))
(declare-fun a_15 () (Array Index Element))
(declare-fun a_17 () (Array Index Element))
(declare-fun a_19 () (Array Index Element))
(declare-fun a_21 () (Array Index Element))
(declare-fun a_23 () (Array Index Element))
(declare-fun a_25 () (Array Index Element))
(declare-fun a_27 () (Array Index Element))
(declare-fun a_3 () (Array Index Element))
(declare-fun a_5 () (Array Index Element))
(declare-fun a_7 () (Array Index Element))
(declare-fun a_9 () (Array Index Element))
(declare-fun e_0 () Element)
(declare-fun e_10 () Element)
(declare-fun e_12 () Element)
(declare-fun e_14 () Element)
(declare-fun e_16 () Element)
(declare-fun e_18 () Element)
(declare-fun e_2 () Element)
(declare-fun e_20 () Element)
(declare-fun e_22 () Element)
(declare-fun e_24 () Element)
(declare-fun e_26 () Element)
(declare-fun e_4 () Element)
(declare-fun e_6 () Element)
(declare-fun e_8 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun a2 () (Array Index Element))
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(declare-fun i7 () Index)
(assert (= a_1 (store a1 i1 e_0)))
(assert (= a_11 (store a_7 i3 e_10)))
(assert (= a_13 (store a_9 i4 e_12)))
(assert (= a_15 (store a_11 i4 e_14)))
(assert (= a_17 (store a_13 i5 e_16)))
(assert (= a_19 (store a_15 i5 e_18)))
(assert (= a_21 (store a_17 i6 e_20)))
(assert (= a_23 (store a_19 i6 e_22)))
(assert (= a_25 (store a_21 i1 e_24)))
(assert (= a_27 (store a_23 i7 e_26)))
(assert (= a_3 (store a2 i1 e_2)))
(assert (= a_5 (store a_1 i2 e_4)))
(assert (= a_7 (store a_3 i2 e_6)))
(assert (= a_9 (store a_5 i3 e_8)))
(assert (= e_0 (select a2 i1)))
(assert (= e_10 (select a_5 i3)))
(assert (= e_12 (select a_11 i4)))
(assert (= e_14 (select a_9 i4)))
(assert (= e_16 (select a_15 i5)))
(assert (= e_18 (select a_13 i5)))
(assert (= e_2 (select a1 i1)))
(assert (= e_20 (select a_19 i6)))
(assert (= e_22 (select a_17 i6)))
(assert (= e_24 (select a_23 i7)))
(assert (= e_26 (select a_21 i7)))
(assert (= e_4 (select a_3 i2)))
(assert (= e_6 (select a_1 i2)))
(assert (= e_8 (select a_7 i3)))
(assert (= a_25 a_27))
(assert (not (= a1 a2)))
(check-sat)
(exit)
