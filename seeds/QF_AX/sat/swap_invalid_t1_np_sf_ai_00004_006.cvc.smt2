(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_151 () (Array Index Element))
(declare-fun a_153 () (Array Index Element))
(declare-fun a_155 () (Array Index Element))
(declare-fun a_157 () (Array Index Element))
(declare-fun a_159 () (Array Index Element))
(declare-fun a_160 () (Array Index Element))
(declare-fun a_162 () (Array Index Element))
(declare-fun a_164 () (Array Index Element))
(declare-fun a_165 () (Array Index Element))
(declare-fun a_166 () (Array Index Element))
(declare-fun a_168 () (Array Index Element))
(declare-fun a_169 () (Array Index Element))
(declare-fun a_171 () (Array Index Element))
(declare-fun a_173 () (Array Index Element))
(declare-fun e_150 () Element)
(declare-fun e_152 () Element)
(declare-fun e_154 () Element)
(declare-fun e_156 () Element)
(declare-fun e_158 () Element)
(declare-fun e_161 () Element)
(declare-fun e_163 () Element)
(declare-fun e_167 () Element)
(declare-fun e_170 () Element)
(declare-fun e_172 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(assert (= a_151 (store a1 i3 e_150)))
(assert (= a_153 (store a_151 i2 e_152)))
(assert (= a_155 (store a_153 i0 e_154)))
(assert (= a_157 (store a_155 i2 e_156)))
(assert (= a_159 (store a_157 i3 e_158)))
(assert (= a_160 (store a_159 i3 e_158)))
(assert (= a_162 (store a_160 i1 e_161)))
(assert (= a_164 (store a_162 i3 e_163)))
(assert (= a_165 (store a_153 i2 e_156)))
(assert (= a_166 (store a_165 i0 e_154)))
(assert (= a_168 (store a_166 i3 e_167)))
(assert (= a_169 (store a_168 i3 e_167)))
(assert (= a_171 (store a_169 i3 e_170)))
(assert (= a_173 (store a_171 i2 e_172)))
(assert (= e_150 (select a1 i2)))
(assert (= e_152 (select a1 i3)))
(assert (= e_154 (select a_153 i2)))
(assert (= e_156 (select a_153 i0)))
(assert (= e_158 (select a_157 i3)))
(assert (= e_161 (select a_160 i3)))
(assert (= e_163 (select a_160 i1)))
(assert (= e_167 (select a_166 i3)))
(assert (= e_170 (select a_169 i2)))
(assert (= e_172 (select a_169 i3)))
(assert (not (= a_164 a_173)))
(check-sat)
(exit)
