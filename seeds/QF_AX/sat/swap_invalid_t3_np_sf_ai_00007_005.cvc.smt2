(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_371 () (Array Index Element))
(declare-fun a_373 () (Array Index Element))
(declare-fun a_375 () (Array Index Element))
(declare-fun a_377 () (Array Index Element))
(declare-fun a_379 () (Array Index Element))
(declare-fun a_381 () (Array Index Element))
(declare-fun a_383 () (Array Index Element))
(declare-fun a_385 () (Array Index Element))
(declare-fun a_387 () (Array Index Element))
(declare-fun a_388 () (Array Index Element))
(declare-fun a_390 () (Array Index Element))
(declare-fun a_392 () (Array Index Element))
(declare-fun a_394 () (Array Index Element))
(declare-fun a_396 () (Array Index Element))
(declare-fun a_397 () (Array Index Element))
(declare-fun a_398 () (Array Index Element))
(declare-fun a_400 () (Array Index Element))
(declare-fun a_402 () (Array Index Element))
(declare-fun a_404 () (Array Index Element))
(declare-fun a_405 () (Array Index Element))
(declare-fun a_407 () (Array Index Element))
(declare-fun a_409 () (Array Index Element))
(declare-fun a_411 () (Array Index Element))
(declare-fun a_413 () (Array Index Element))
(declare-fun e_370 () Element)
(declare-fun e_372 () Element)
(declare-fun e_374 () Element)
(declare-fun e_376 () Element)
(declare-fun e_378 () Element)
(declare-fun e_380 () Element)
(declare-fun e_382 () Element)
(declare-fun e_384 () Element)
(declare-fun e_386 () Element)
(declare-fun e_389 () Element)
(declare-fun e_391 () Element)
(declare-fun e_393 () Element)
(declare-fun e_395 () Element)
(declare-fun e_399 () Element)
(declare-fun e_401 () Element)
(declare-fun e_403 () Element)
(declare-fun e_406 () Element)
(declare-fun e_408 () Element)
(declare-fun e_410 () Element)
(declare-fun e_412 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(assert (= a_371 (store a1 i1 e_370)))
(assert (= a_373 (store a_371 i5 e_372)))
(assert (= a_375 (store a_373 i0 e_374)))
(assert (= a_377 (store a_375 i3 e_376)))
(assert (= a_379 (store a_377 i1 e_378)))
(assert (= a_381 (store a_379 i4 e_380)))
(assert (= a_383 (store a_381 i6 e_382)))
(assert (= a_385 (store a_383 i0 e_384)))
(assert (= a_387 (store a_385 i3 e_386)))
(assert (= a_388 (store a_387 i3 e_386)))
(assert (= a_390 (store a_388 i1 e_389)))
(assert (= a_392 (store a_390 i3 e_391)))
(assert (= a_394 (store a_392 i0 e_393)))
(assert (= a_396 (store a_394 i3 e_395)))
(assert (= a_397 (store a_377 i4 e_380)))
(assert (= a_398 (store a_397 i1 e_378)))
(assert (= a_400 (store a_398 i0 e_399)))
(assert (= a_402 (store a_400 i6 e_401)))
(assert (= a_404 (store a_402 i3 e_403)))
(assert (= a_405 (store a_404 i3 e_403)))
(assert (= a_407 (store a_405 i3 e_406)))
(assert (= a_409 (store a_407 i1 e_408)))
(assert (= a_411 (store a_409 i4 e_410)))
(assert (= a_413 (store a_411 i0 e_412)))
(assert (= e_370 (select a1 i5)))
(assert (= e_372 (select a1 i1)))
(assert (= e_374 (select a_373 i3)))
(assert (= e_376 (select a_373 i0)))
(assert (= e_378 (select a_377 i4)))
(assert (= e_380 (select a_377 i1)))
(assert (= e_382 (select a_381 i0)))
(assert (= e_384 (select a_381 i6)))
(assert (= e_386 (select a_385 i3)))
(assert (= e_389 (select a_388 i3)))
(assert (= e_391 (select a_388 i1)))
(assert (= e_393 (select a_392 i3)))
(assert (= e_395 (select a_392 i0)))
(assert (= e_399 (select a_398 i6)))
(assert (= e_401 (select a_398 i0)))
(assert (= e_403 (select a_402 i3)))
(assert (= e_406 (select a_405 i1)))
(assert (= e_408 (select a_405 i3)))
(assert (= e_410 (select a_409 i0)))
(assert (= e_412 (select a_409 i4)))
(assert (not (= a_396 a_413)))
(check-sat)
(exit)
