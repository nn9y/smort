(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_492 () (Array Index Element))
(declare-fun a_494 () (Array Index Element))
(declare-fun a_496 () (Array Index Element))
(declare-fun a_498 () (Array Index Element))
(declare-fun a_500 () (Array Index Element))
(declare-fun a_502 () (Array Index Element))
(declare-fun a_504 () (Array Index Element))
(declare-fun a_505 () (Array Index Element))
(declare-fun a_507 () (Array Index Element))
(declare-fun a_509 () (Array Index Element))
(declare-fun a_511 () (Array Index Element))
(declare-fun a_513 () (Array Index Element))
(declare-fun a_514 () (Array Index Element))
(declare-fun a_515 () (Array Index Element))
(declare-fun a_517 () (Array Index Element))
(declare-fun a_519 () (Array Index Element))
(declare-fun a_521 () (Array Index Element))
(declare-fun a_523 () (Array Index Element))
(declare-fun a_525 () (Array Index Element))
(declare-fun a_526 () (Array Index Element))
(declare-fun a_528 () (Array Index Element))
(declare-fun a_530 () (Array Index Element))
(declare-fun a_532 () (Array Index Element))
(declare-fun a_534 () (Array Index Element))
(declare-fun e_491 () Element)
(declare-fun e_493 () Element)
(declare-fun e_495 () Element)
(declare-fun e_497 () Element)
(declare-fun e_499 () Element)
(declare-fun e_501 () Element)
(declare-fun e_503 () Element)
(declare-fun e_506 () Element)
(declare-fun e_508 () Element)
(declare-fun e_510 () Element)
(declare-fun e_512 () Element)
(declare-fun e_516 () Element)
(declare-fun e_518 () Element)
(declare-fun e_520 () Element)
(declare-fun e_522 () Element)
(declare-fun e_524 () Element)
(declare-fun e_527 () Element)
(declare-fun e_529 () Element)
(declare-fun e_531 () Element)
(declare-fun e_533 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(assert (= a_492 (store a1 i0 e_491)))
(assert (= a_494 (store a_492 i1 e_493)))
(assert (= a_496 (store a_494 i5 e_495)))
(assert (= a_498 (store a_496 i1 e_497)))
(assert (= a_500 (store a_498 i3 e_499)))
(assert (= a_502 (store a_500 i1 e_501)))
(assert (= a_504 (store a_502 i4 e_503)))
(assert (= a_505 (store a_504 i4 e_503)))
(assert (= a_507 (store a_505 i1 e_506)))
(assert (= a_509 (store a_507 i5 e_508)))
(assert (= a_511 (store a_509 i3 e_510)))
(assert (= a_513 (store a_511 i1 e_512)))
(assert (= a_514 (store a1 i1 e_493)))
(assert (= a_515 (store a_514 i0 e_491)))
(assert (= a_517 (store a_515 i5 e_516)))
(assert (= a_519 (store a_517 i1 e_518)))
(assert (= a_521 (store a_519 i3 e_520)))
(assert (= a_523 (store a_521 i1 e_522)))
(assert (= a_525 (store a_523 i4 e_524)))
(assert (= a_526 (store a_525 i4 e_524)))
(assert (= a_528 (store a_526 i5 e_527)))
(assert (= a_530 (store a_528 i1 e_529)))
(assert (= a_532 (store a_530 i4 e_531)))
(assert (= a_534 (store a_532 i1 e_533)))
(assert (= e_491 (select a1 i1)))
(assert (= e_493 (select a1 i0)))
(assert (= e_495 (select a_494 i1)))
(assert (= e_497 (select a_494 i5)))
(assert (= e_499 (select a_498 i1)))
(assert (= e_501 (select a_498 i3)))
(assert (= e_503 (select a_502 i4)))
(assert (= e_506 (select a_505 i5)))
(assert (= e_508 (select a_505 i1)))
(assert (= e_510 (select a_509 i1)))
(assert (= e_512 (select a_509 i3)))
(assert (= e_516 (select a_515 i1)))
(assert (= e_518 (select a_515 i5)))
(assert (= e_520 (select a_519 i1)))
(assert (= e_522 (select a_519 i3)))
(assert (= e_524 (select a_523 i4)))
(assert (= e_527 (select a_526 i1)))
(assert (= e_529 (select a_526 i5)))
(assert (= e_531 (select a_530 i1)))
(assert (= e_533 (select a_530 i4)))
(assert (not (= a_513 a_534)))
(check-sat)
(exit)
