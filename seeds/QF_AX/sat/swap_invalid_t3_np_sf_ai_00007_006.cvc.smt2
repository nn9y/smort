(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_271 () (Array Index Element))
(declare-fun a_273 () (Array Index Element))
(declare-fun a_275 () (Array Index Element))
(declare-fun a_277 () (Array Index Element))
(declare-fun a_279 () (Array Index Element))
(declare-fun a_281 () (Array Index Element))
(declare-fun a_283 () (Array Index Element))
(declare-fun a_284 () (Array Index Element))
(declare-fun a_286 () (Array Index Element))
(declare-fun a_288 () (Array Index Element))
(declare-fun a_290 () (Array Index Element))
(declare-fun a_292 () (Array Index Element))
(declare-fun a_294 () (Array Index Element))
(declare-fun a_296 () (Array Index Element))
(declare-fun a_297 () (Array Index Element))
(declare-fun a_298 () (Array Index Element))
(declare-fun a_300 () (Array Index Element))
(declare-fun a_302 () (Array Index Element))
(declare-fun a_304 () (Array Index Element))
(declare-fun a_305 () (Array Index Element))
(declare-fun a_307 () (Array Index Element))
(declare-fun a_309 () (Array Index Element))
(declare-fun a_311 () (Array Index Element))
(declare-fun a_313 () (Array Index Element))
(declare-fun a_315 () (Array Index Element))
(declare-fun a_317 () (Array Index Element))
(declare-fun e_270 () Element)
(declare-fun e_272 () Element)
(declare-fun e_274 () Element)
(declare-fun e_276 () Element)
(declare-fun e_278 () Element)
(declare-fun e_280 () Element)
(declare-fun e_282 () Element)
(declare-fun e_285 () Element)
(declare-fun e_287 () Element)
(declare-fun e_289 () Element)
(declare-fun e_291 () Element)
(declare-fun e_293 () Element)
(declare-fun e_295 () Element)
(declare-fun e_299 () Element)
(declare-fun e_301 () Element)
(declare-fun e_303 () Element)
(declare-fun e_306 () Element)
(declare-fun e_308 () Element)
(declare-fun e_310 () Element)
(declare-fun e_312 () Element)
(declare-fun e_314 () Element)
(declare-fun e_316 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(assert (= a_271 (store a1 i6 e_270)))
(assert (= a_273 (store a_271 i3 e_272)))
(assert (= a_275 (store a_273 i1 e_274)))
(assert (= a_277 (store a_275 i4 e_276)))
(assert (= a_279 (store a_277 i2 e_278)))
(assert (= a_281 (store a_279 i6 e_280)))
(assert (= a_283 (store a_281 i4 e_282)))
(assert (= a_284 (store a_283 i4 e_282)))
(assert (= a_286 (store a_284 i0 e_285)))
(assert (= a_288 (store a_286 i2 e_287)))
(assert (= a_290 (store a_288 i2 e_289)))
(assert (= a_292 (store a_290 i6 e_291)))
(assert (= a_294 (store a_292 i5 e_293)))
(assert (= a_296 (store a_294 i3 e_295)))
(assert (= a_297 (store a_273 i4 e_276)))
(assert (= a_298 (store a_297 i1 e_274)))
(assert (= a_300 (store a_298 i6 e_299)))
(assert (= a_302 (store a_300 i2 e_301)))
(assert (= a_304 (store a_302 i4 e_303)))
(assert (= a_305 (store a_304 i4 e_303)))
(assert (= a_307 (store a_305 i0 e_306)))
(assert (= a_309 (store a_307 i2 e_308)))
(assert (= a_311 (store a_309 i6 e_310)))
(assert (= a_313 (store a_311 i2 e_312)))
(assert (= a_315 (store a_313 i6 e_314)))
(assert (= a_317 (store a_315 i3 e_316)))
(assert (= e_270 (select a1 i3)))
(assert (= e_272 (select a1 i6)))
(assert (= e_274 (select a_273 i4)))
(assert (= e_276 (select a_273 i1)))
(assert (= e_278 (select a_277 i6)))
(assert (= e_280 (select a_277 i2)))
(assert (= e_282 (select a_281 i4)))
(assert (= e_285 (select a_284 i2)))
(assert (= e_287 (select a_284 i0)))
(assert (= e_289 (select a_288 i6)))
(assert (= e_291 (select a_288 i2)))
(assert (= e_293 (select a_292 i3)))
(assert (= e_295 (select a_292 i5)))
(assert (= e_299 (select a_298 i2)))
(assert (= e_301 (select a_298 i6)))
(assert (= e_303 (select a_302 i4)))
(assert (= e_306 (select a_305 i2)))
(assert (= e_308 (select a_305 i0)))
(assert (= e_310 (select a_309 i2)))
(assert (= e_312 (select a_309 i6)))
(assert (= e_314 (select a_313 i3)))
(assert (= e_316 (select a_313 i6)))
(assert (not (= a_296 a_317)))
(check-sat)
(exit)
