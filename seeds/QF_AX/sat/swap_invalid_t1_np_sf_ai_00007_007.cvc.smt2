(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_192 () (Array Index Element))
(declare-fun a_193 () (Array Index Element))
(declare-fun a_195 () (Array Index Element))
(declare-fun a_196 () (Array Index Element))
(declare-fun a_198 () (Array Index Element))
(declare-fun a_199 () (Array Index Element))
(declare-fun a_201 () (Array Index Element))
(declare-fun a_203 () (Array Index Element))
(declare-fun a_205 () (Array Index Element))
(declare-fun a_207 () (Array Index Element))
(declare-fun a_209 () (Array Index Element))
(declare-fun a_211 () (Array Index Element))
(declare-fun a_213 () (Array Index Element))
(declare-fun a_215 () (Array Index Element))
(declare-fun a_216 () (Array Index Element))
(declare-fun a_217 () (Array Index Element))
(declare-fun a_219 () (Array Index Element))
(declare-fun a_221 () (Array Index Element))
(declare-fun a_223 () (Array Index Element))
(declare-fun a_225 () (Array Index Element))
(declare-fun a_227 () (Array Index Element))
(declare-fun a_229 () (Array Index Element))
(declare-fun e_191 () Element)
(declare-fun e_194 () Element)
(declare-fun e_197 () Element)
(declare-fun e_200 () Element)
(declare-fun e_202 () Element)
(declare-fun e_204 () Element)
(declare-fun e_206 () Element)
(declare-fun e_208 () Element)
(declare-fun e_210 () Element)
(declare-fun e_212 () Element)
(declare-fun e_214 () Element)
(declare-fun e_218 () Element)
(declare-fun e_220 () Element)
(declare-fun e_222 () Element)
(declare-fun e_224 () Element)
(declare-fun e_226 () Element)
(declare-fun e_228 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(assert (= a_192 (store a1 i2 e_191)))
(assert (= a_193 (store a_192 i2 e_191)))
(assert (= a_195 (store a_193 i0 e_194)))
(assert (= a_196 (store a_195 i0 e_194)))
(assert (= a_198 (store a_196 i6 e_197)))
(assert (= a_199 (store a_198 i6 e_197)))
(assert (= a_201 (store a_199 i5 e_200)))
(assert (= a_203 (store a_201 i3 e_202)))
(assert (= a_205 (store a_203 i5 e_204)))
(assert (= a_207 (store a_205 i0 e_206)))
(assert (= a_209 (store a_207 i1 e_208)))
(assert (= a_211 (store a_209 i3 e_210)))
(assert (= a_213 (store a_211 i6 e_212)))
(assert (= a_215 (store a_213 i4 e_214)))
(assert (= a_216 (store a_199 i3 e_202)))
(assert (= a_217 (store a_216 i5 e_200)))
(assert (= a_219 (store a_217 i0 e_218)))
(assert (= a_221 (store a_219 i5 e_220)))
(assert (= a_223 (store a_221 i3 e_222)))
(assert (= a_225 (store a_223 i1 e_224)))
(assert (= a_227 (store a_225 i4 e_226)))
(assert (= a_229 (store a_227 i0 e_228)))
(assert (= e_191 (select a1 i2)))
(assert (= e_194 (select a_193 i0)))
(assert (= e_197 (select a_196 i6)))
(assert (= e_200 (select a_199 i3)))
(assert (= e_202 (select a_199 i5)))
(assert (= e_204 (select a_203 i0)))
(assert (= e_206 (select a_203 i5)))
(assert (= e_208 (select a_207 i3)))
(assert (= e_210 (select a_207 i1)))
(assert (= e_212 (select a_211 i4)))
(assert (= e_214 (select a_211 i6)))
(assert (= e_218 (select a_217 i5)))
(assert (= e_220 (select a_217 i0)))
(assert (= e_222 (select a_221 i1)))
(assert (= e_224 (select a_221 i3)))
(assert (= e_226 (select a_225 i0)))
(assert (= e_228 (select a_225 i4)))
(assert (not (= a_215 a_229)))
(check-sat)
(exit)
