(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_81 () (Array Index Element))
(declare-fun a_83 () (Array Index Element))
(declare-fun a_85 () (Array Index Element))
(declare-fun a_86 () (Array Index Element))
(declare-fun a_88 () (Array Index Element))
(declare-fun a_89 () (Array Index Element))
(declare-fun a_90 () (Array Index Element))
(declare-fun a_91 () (Array Index Element))
(declare-fun a_93 () (Array Index Element))
(declare-fun a_94 () (Array Index Element))
(declare-fun a_96 () (Array Index Element))
(declare-fun a_98 () (Array Index Element))
(declare-fun e_80 () Element)
(declare-fun e_82 () Element)
(declare-fun e_84 () Element)
(declare-fun e_87 () Element)
(declare-fun e_92 () Element)
(declare-fun e_95 () Element)
(declare-fun e_97 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(assert (= a_81 (store a1 i0 e_80)))
(assert (= a_83 (store a_81 i1 e_82)))
(assert (= a_85 (store a_83 i0 e_84)))
(assert (= a_86 (store a_85 i0 e_84)))
(assert (= a_88 (store a_86 i2 e_87)))
(assert (= a_89 (store a_88 i2 e_87)))
(assert (= a_90 (store a1 i1 e_82)))
(assert (= a_91 (store a_90 i0 e_80)))
(assert (= a_93 (store a_91 i0 e_92)))
(assert (= a_94 (store a_93 i0 e_92)))
(assert (= a_96 (store a_94 i2 e_95)))
(assert (= a_98 (store a_96 i0 e_97)))
(assert (= e_80 (select a1 i1)))
(assert (= e_82 (select a1 i0)))
(assert (= e_84 (select a_83 i0)))
(assert (= e_87 (select a_86 i2)))
(assert (= e_92 (select a_91 i0)))
(assert (= e_95 (select a_94 i0)))
(assert (= e_97 (select a_94 i2)))
(assert (not (= a_89 a_98)))
(check-sat)
(exit)
