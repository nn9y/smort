(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_154 () (Array Index Element))
(declare-fun a_156 () (Array Index Element))
(declare-fun a_158 () (Array Index Element))
(declare-fun a_160 () (Array Index Element))
(declare-fun a_162 () (Array Index Element))
(declare-fun a_163 () (Array Index Element))
(declare-fun a_165 () (Array Index Element))
(declare-fun a_167 () (Array Index Element))
(declare-fun a_168 () (Array Index Element))
(declare-fun a_169 () (Array Index Element))
(declare-fun a_171 () (Array Index Element))
(declare-fun a_172 () (Array Index Element))
(declare-fun a_174 () (Array Index Element))
(declare-fun a_176 () (Array Index Element))
(declare-fun e_153 () Element)
(declare-fun e_155 () Element)
(declare-fun e_157 () Element)
(declare-fun e_159 () Element)
(declare-fun e_161 () Element)
(declare-fun e_164 () Element)
(declare-fun e_166 () Element)
(declare-fun e_170 () Element)
(declare-fun e_173 () Element)
(declare-fun e_175 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(assert (= a_154 (store a1 i3 e_153)))
(assert (= a_156 (store a_154 i2 e_155)))
(assert (= a_158 (store a_156 i0 e_157)))
(assert (= a_160 (store a_158 i2 e_159)))
(assert (= a_162 (store a_160 i3 e_161)))
(assert (= a_163 (store a_162 i3 e_161)))
(assert (= a_165 (store a_163 i1 e_164)))
(assert (= a_167 (store a_165 i3 e_166)))
(assert (= a_168 (store a_156 i2 e_159)))
(assert (= a_169 (store a_168 i0 e_157)))
(assert (= a_171 (store a_169 i3 e_170)))
(assert (= a_172 (store a_171 i3 e_170)))
(assert (= a_174 (store a_172 i3 e_173)))
(assert (= a_176 (store a_174 i1 e_175)))
(assert (= e_153 (select a1 i2)))
(assert (= e_155 (select a1 i3)))
(assert (= e_157 (select a_156 i2)))
(assert (= e_159 (select a_156 i0)))
(assert (= e_161 (select a_160 i3)))
(assert (= e_164 (select a_163 i3)))
(assert (= e_166 (select a_163 i1)))
(assert (= e_170 (select a_169 i3)))
(assert (= e_173 (select a_172 i1)))
(assert (= e_175 (select a_172 i3)))
(assert (not (= a_167 a_176)))
(check-sat)
(exit)
