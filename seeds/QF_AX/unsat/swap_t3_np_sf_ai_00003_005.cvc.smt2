(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_100 () (Array Index Element))
(declare-fun a_102 () (Array Index Element))
(declare-fun a_104 () (Array Index Element))
(declare-fun a_105 () (Array Index Element))
(declare-fun a_106 () (Array Index Element))
(declare-fun a_107 () (Array Index Element))
(declare-fun a_109 () (Array Index Element))
(declare-fun a_111 () (Array Index Element))
(declare-fun a_113 () (Array Index Element))
(declare-fun a_114 () (Array Index Element))
(declare-fun a_96 () (Array Index Element))
(declare-fun a_98 () (Array Index Element))
(declare-fun e_101 () Element)
(declare-fun e_103 () Element)
(declare-fun e_108 () Element)
(declare-fun e_110 () Element)
(declare-fun e_112 () Element)
(declare-fun e_95 () Element)
(declare-fun e_97 () Element)
(declare-fun e_99 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(assert (= a_100 (store a_98 i2 e_99)))
(assert (= a_102 (store a_100 i1 e_101)))
(assert (= a_104 (store a_102 i2 e_103)))
(assert (= a_105 (store a_104 i2 e_103)))
(assert (= a_106 (store a1 i1 e_97)))
(assert (= a_107 (store a_106 i2 e_95)))
(assert (= a_109 (store a_107 i1 e_108)))
(assert (= a_111 (store a_109 i2 e_110)))
(assert (= a_113 (store a_111 i2 e_112)))
(assert (= a_114 (store a_113 i2 e_112)))
(assert (= a_96 (store a1 i2 e_95)))
(assert (= a_98 (store a_96 i1 e_97)))
(assert (= e_101 (select a_98 i2)))
(assert (= e_103 (select a_102 i2)))
(assert (= e_108 (select a_107 i2)))
(assert (= e_110 (select a_107 i1)))
(assert (= e_112 (select a_111 i2)))
(assert (= e_95 (select a1 i1)))
(assert (= e_97 (select a1 i2)))
(assert (= e_99 (select a_98 i1)))
(assert (not (= a_105 a_114)))
(check-sat)
(exit)
