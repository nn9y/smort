(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_154 () (Array Index Element))
(declare-fun a_156 () (Array Index Element))
(declare-fun a_158 () (Array Index Element))
(declare-fun a_160 () (Array Index Element))
(declare-fun a_162 () (Array Index Element))
(declare-fun a_164 () (Array Index Element))
(declare-fun a_166 () (Array Index Element))
(declare-fun a_168 () (Array Index Element))
(declare-fun a_170 () (Array Index Element))
(declare-fun a_172 () (Array Index Element))
(declare-fun a_174 () (Array Index Element))
(declare-fun a_176 () (Array Index Element))
(declare-fun a_177 () (Array Index Element))
(declare-fun a_178 () (Array Index Element))
(declare-fun a_180 () (Array Index Element))
(declare-fun a_182 () (Array Index Element))
(declare-fun a_184 () (Array Index Element))
(declare-fun a_186 () (Array Index Element))
(declare-fun a_188 () (Array Index Element))
(declare-fun a_190 () (Array Index Element))
(declare-fun a_192 () (Array Index Element))
(declare-fun a_194 () (Array Index Element))
(declare-fun e_153 () Element)
(declare-fun e_155 () Element)
(declare-fun e_157 () Element)
(declare-fun e_159 () Element)
(declare-fun e_161 () Element)
(declare-fun e_163 () Element)
(declare-fun e_165 () Element)
(declare-fun e_167 () Element)
(declare-fun e_169 () Element)
(declare-fun e_171 () Element)
(declare-fun e_173 () Element)
(declare-fun e_175 () Element)
(declare-fun e_179 () Element)
(declare-fun e_181 () Element)
(declare-fun e_183 () Element)
(declare-fun e_185 () Element)
(declare-fun e_187 () Element)
(declare-fun e_189 () Element)
(declare-fun e_191 () Element)
(declare-fun e_193 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(assert (= a_154 (store a1 i4 e_153)))
(assert (= a_156 (store a_154 i5 e_155)))
(assert (= a_158 (store a_156 i2 e_157)))
(assert (= a_160 (store a_158 i0 e_159)))
(assert (= a_162 (store a_160 i5 e_161)))
(assert (= a_164 (store a_162 i0 e_163)))
(assert (= a_166 (store a_164 i3 e_165)))
(assert (= a_168 (store a_166 i1 e_167)))
(assert (= a_170 (store a_168 i3 e_169)))
(assert (= a_172 (store a_170 i4 e_171)))
(assert (= a_174 (store a_172 i5 e_173)))
(assert (= a_176 (store a_174 i0 e_175)))
(assert (= a_177 (store a_156 i0 e_159)))
(assert (= a_178 (store a_177 i2 e_157)))
(assert (= a_180 (store a_178 i0 e_179)))
(assert (= a_182 (store a_180 i5 e_181)))
(assert (= a_184 (store a_182 i3 e_183)))
(assert (= a_186 (store a_184 i1 e_185)))
(assert (= a_188 (store a_186 i4 e_187)))
(assert (= a_190 (store a_188 i3 e_189)))
(assert (= a_192 (store a_190 i5 e_191)))
(assert (= a_194 (store a_192 i0 e_193)))
(assert (= e_153 (select a1 i5)))
(assert (= e_155 (select a1 i4)))
(assert (= e_157 (select a_156 i0)))
(assert (= e_159 (select a_156 i2)))
(assert (= e_161 (select a_160 i0)))
(assert (= e_163 (select a_160 i5)))
(assert (= e_165 (select a_164 i1)))
(assert (= e_167 (select a_164 i3)))
(assert (= e_169 (select a_168 i4)))
(assert (= e_171 (select a_168 i3)))
(assert (= e_173 (select a_172 i0)))
(assert (= e_175 (select a_172 i5)))
(assert (= e_179 (select a_178 i5)))
(assert (= e_181 (select a_178 i0)))
(assert (= e_183 (select a_182 i1)))
(assert (= e_185 (select a_182 i3)))
(assert (= e_187 (select a_186 i3)))
(assert (= e_189 (select a_186 i4)))
(assert (= e_191 (select a_190 i0)))
(assert (= e_193 (select a_190 i5)))
(assert (not (= a_176 a_194)))
(check-sat)
(exit)
