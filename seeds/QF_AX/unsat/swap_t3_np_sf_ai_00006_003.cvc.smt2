(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_491 () (Array Index Element))
(declare-fun a_493 () (Array Index Element))
(declare-fun a_495 () (Array Index Element))
(declare-fun a_497 () (Array Index Element))
(declare-fun a_499 () (Array Index Element))
(declare-fun a_501 () (Array Index Element))
(declare-fun a_503 () (Array Index Element))
(declare-fun a_504 () (Array Index Element))
(declare-fun a_506 () (Array Index Element))
(declare-fun a_508 () (Array Index Element))
(declare-fun a_510 () (Array Index Element))
(declare-fun a_512 () (Array Index Element))
(declare-fun a_513 () (Array Index Element))
(declare-fun a_514 () (Array Index Element))
(declare-fun a_516 () (Array Index Element))
(declare-fun a_518 () (Array Index Element))
(declare-fun a_520 () (Array Index Element))
(declare-fun a_522 () (Array Index Element))
(declare-fun a_524 () (Array Index Element))
(declare-fun a_525 () (Array Index Element))
(declare-fun a_527 () (Array Index Element))
(declare-fun a_529 () (Array Index Element))
(declare-fun a_531 () (Array Index Element))
(declare-fun a_533 () (Array Index Element))
(declare-fun e_490 () Element)
(declare-fun e_492 () Element)
(declare-fun e_494 () Element)
(declare-fun e_496 () Element)
(declare-fun e_498 () Element)
(declare-fun e_500 () Element)
(declare-fun e_502 () Element)
(declare-fun e_505 () Element)
(declare-fun e_507 () Element)
(declare-fun e_509 () Element)
(declare-fun e_511 () Element)
(declare-fun e_515 () Element)
(declare-fun e_517 () Element)
(declare-fun e_519 () Element)
(declare-fun e_521 () Element)
(declare-fun e_523 () Element)
(declare-fun e_526 () Element)
(declare-fun e_528 () Element)
(declare-fun e_530 () Element)
(declare-fun e_532 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(assert (= a_491 (store a1 i0 e_490)))
(assert (= a_493 (store a_491 i1 e_492)))
(assert (= a_495 (store a_493 i5 e_494)))
(assert (= a_497 (store a_495 i1 e_496)))
(assert (= a_499 (store a_497 i3 e_498)))
(assert (= a_501 (store a_499 i1 e_500)))
(assert (= a_503 (store a_501 i4 e_502)))
(assert (= a_504 (store a_503 i4 e_502)))
(assert (= a_506 (store a_504 i1 e_505)))
(assert (= a_508 (store a_506 i5 e_507)))
(assert (= a_510 (store a_508 i3 e_509)))
(assert (= a_512 (store a_510 i1 e_511)))
(assert (= a_513 (store a1 i1 e_492)))
(assert (= a_514 (store a_513 i0 e_490)))
(assert (= a_516 (store a_514 i5 e_515)))
(assert (= a_518 (store a_516 i1 e_517)))
(assert (= a_520 (store a_518 i3 e_519)))
(assert (= a_522 (store a_520 i1 e_521)))
(assert (= a_524 (store a_522 i4 e_523)))
(assert (= a_525 (store a_524 i4 e_523)))
(assert (= a_527 (store a_525 i5 e_526)))
(assert (= a_529 (store a_527 i1 e_528)))
(assert (= a_531 (store a_529 i3 e_530)))
(assert (= a_533 (store a_531 i1 e_532)))
(assert (= e_490 (select a1 i1)))
(assert (= e_492 (select a1 i0)))
(assert (= e_494 (select a_493 i1)))
(assert (= e_496 (select a_493 i5)))
(assert (= e_498 (select a_497 i1)))
(assert (= e_500 (select a_497 i3)))
(assert (= e_502 (select a_501 i4)))
(assert (= e_505 (select a_504 i5)))
(assert (= e_507 (select a_504 i1)))
(assert (= e_509 (select a_508 i1)))
(assert (= e_511 (select a_508 i3)))
(assert (= e_515 (select a_514 i1)))
(assert (= e_517 (select a_514 i5)))
(assert (= e_519 (select a_518 i1)))
(assert (= e_521 (select a_518 i3)))
(assert (= e_523 (select a_522 i4)))
(assert (= e_526 (select a_525 i1)))
(assert (= e_528 (select a_525 i5)))
(assert (= e_530 (select a_529 i1)))
(assert (= e_532 (select a_529 i3)))
(assert (not (= a_512 a_533)))
(check-sat)
(exit)
