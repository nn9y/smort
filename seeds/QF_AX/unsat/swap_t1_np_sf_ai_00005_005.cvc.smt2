(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_250 () (Array Index Element))
(declare-fun a_252 () (Array Index Element))
(declare-fun a_254 () (Array Index Element))
(declare-fun a_256 () (Array Index Element))
(declare-fun a_258 () (Array Index Element))
(declare-fun a_260 () (Array Index Element))
(declare-fun a_262 () (Array Index Element))
(declare-fun a_264 () (Array Index Element))
(declare-fun a_266 () (Array Index Element))
(declare-fun a_268 () (Array Index Element))
(declare-fun a_269 () (Array Index Element))
(declare-fun a_270 () (Array Index Element))
(declare-fun a_272 () (Array Index Element))
(declare-fun a_274 () (Array Index Element))
(declare-fun a_276 () (Array Index Element))
(declare-fun a_278 () (Array Index Element))
(declare-fun a_280 () (Array Index Element))
(declare-fun a_282 () (Array Index Element))
(declare-fun a_284 () (Array Index Element))
(declare-fun a_286 () (Array Index Element))
(declare-fun e_249 () Element)
(declare-fun e_251 () Element)
(declare-fun e_253 () Element)
(declare-fun e_255 () Element)
(declare-fun e_257 () Element)
(declare-fun e_259 () Element)
(declare-fun e_261 () Element)
(declare-fun e_263 () Element)
(declare-fun e_265 () Element)
(declare-fun e_267 () Element)
(declare-fun e_271 () Element)
(declare-fun e_273 () Element)
(declare-fun e_275 () Element)
(declare-fun e_277 () Element)
(declare-fun e_279 () Element)
(declare-fun e_281 () Element)
(declare-fun e_283 () Element)
(declare-fun e_285 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(assert (= a_250 (store a1 i0 e_249)))
(assert (= a_252 (store a_250 i1 e_251)))
(assert (= a_254 (store a_252 i3 e_253)))
(assert (= a_256 (store a_254 i2 e_255)))
(assert (= a_258 (store a_256 i3 e_257)))
(assert (= a_260 (store a_258 i0 e_259)))
(assert (= a_262 (store a_260 i3 e_261)))
(assert (= a_264 (store a_262 i0 e_263)))
(assert (= a_266 (store a_264 i4 e_265)))
(assert (= a_268 (store a_266 i1 e_267)))
(assert (= a_269 (store a1 i1 e_251)))
(assert (= a_270 (store a_269 i0 e_249)))
(assert (= a_272 (store a_270 i3 e_271)))
(assert (= a_274 (store a_272 i2 e_273)))
(assert (= a_276 (store a_274 i0 e_275)))
(assert (= a_278 (store a_276 i3 e_277)))
(assert (= a_280 (store a_278 i3 e_279)))
(assert (= a_282 (store a_280 i0 e_281)))
(assert (= a_284 (store a_282 i1 e_283)))
(assert (= a_286 (store a_284 i4 e_285)))
(assert (= e_249 (select a1 i1)))
(assert (= e_251 (select a1 i0)))
(assert (= e_253 (select a_252 i2)))
(assert (= e_255 (select a_252 i3)))
(assert (= e_257 (select a_256 i0)))
(assert (= e_259 (select a_256 i3)))
(assert (= e_261 (select a_260 i0)))
(assert (= e_263 (select a_260 i3)))
(assert (= e_265 (select a_264 i1)))
(assert (= e_267 (select a_264 i4)))
(assert (= e_271 (select a_270 i2)))
(assert (= e_273 (select a_270 i3)))
(assert (= e_275 (select a_274 i3)))
(assert (= e_277 (select a_274 i0)))
(assert (= e_279 (select a_278 i0)))
(assert (= e_281 (select a_278 i3)))
(assert (= e_283 (select a_282 i4)))
(assert (= e_285 (select a_282 i1)))
(assert (not (= a_268 a_286)))
(check-sat)
(exit)
