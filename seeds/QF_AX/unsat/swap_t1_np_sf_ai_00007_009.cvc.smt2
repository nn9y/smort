(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_1 () (Array Index Element))
(declare-fun a_11 () (Array Index Element))
(declare-fun a_13 () (Array Index Element))
(declare-fun a_15 () (Array Index Element))
(declare-fun a_17 () (Array Index Element))
(declare-fun a_19 () (Array Index Element))
(declare-fun a_21 () (Array Index Element))
(declare-fun a_23 () (Array Index Element))
(declare-fun a_25 () (Array Index Element))
(declare-fun a_27 () (Array Index Element))
(declare-fun a_28 () (Array Index Element))
(declare-fun a_29 () (Array Index Element))
(declare-fun a_3 () (Array Index Element))
(declare-fun a_31 () (Array Index Element))
(declare-fun a_33 () (Array Index Element))
(declare-fun a_35 () (Array Index Element))
(declare-fun a_37 () (Array Index Element))
(declare-fun a_39 () (Array Index Element))
(declare-fun a_41 () (Array Index Element))
(declare-fun a_43 () (Array Index Element))
(declare-fun a_45 () (Array Index Element))
(declare-fun a_5 () (Array Index Element))
(declare-fun a_7 () (Array Index Element))
(declare-fun a_9 () (Array Index Element))
(declare-fun e_0 () Element)
(declare-fun e_10 () Element)
(declare-fun e_12 () Element)
(declare-fun e_14 () Element)
(declare-fun e_16 () Element)
(declare-fun e_18 () Element)
(declare-fun e_2 () Element)
(declare-fun e_20 () Element)
(declare-fun e_22 () Element)
(declare-fun e_24 () Element)
(declare-fun e_26 () Element)
(declare-fun e_30 () Element)
(declare-fun e_32 () Element)
(declare-fun e_34 () Element)
(declare-fun e_36 () Element)
(declare-fun e_38 () Element)
(declare-fun e_4 () Element)
(declare-fun e_40 () Element)
(declare-fun e_42 () Element)
(declare-fun e_44 () Element)
(declare-fun e_6 () Element)
(declare-fun e_8 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(declare-fun i4 () Index)
(declare-fun i5 () Index)
(declare-fun i6 () Index)
(assert (= a_1 (store a1 i0 e_0)))
(assert (= a_11 (store a_9 i1 e_10)))
(assert (= a_13 (store a_11 i4 e_12)))
(assert (= a_15 (store a_13 i2 e_14)))
(assert (= a_17 (store a_15 i4 e_16)))
(assert (= a_19 (store a_17 i3 e_18)))
(assert (= a_21 (store a_19 i5 e_20)))
(assert (= a_23 (store a_21 i2 e_22)))
(assert (= a_25 (store a_23 i0 e_24)))
(assert (= a_27 (store a_25 i3 e_26)))
(assert (= a_28 (store a_7 i1 e_10)))
(assert (= a_29 (store a_28 i6 e_8)))
(assert (= a_3 (store a_1 i1 e_2)))
(assert (= a_31 (store a_29 i4 e_30)))
(assert (= a_33 (store a_31 i2 e_32)))
(assert (= a_35 (store a_33 i4 e_34)))
(assert (= a_37 (store a_35 i3 e_36)))
(assert (= a_39 (store a_37 i2 e_38)))
(assert (= a_41 (store a_39 i5 e_40)))
(assert (= a_43 (store a_41 i0 e_42)))
(assert (= a_45 (store a_43 i3 e_44)))
(assert (= a_5 (store a_3 i5 e_4)))
(assert (= a_7 (store a_5 i1 e_6)))
(assert (= a_9 (store a_7 i6 e_8)))
(assert (= e_0 (select a1 i1)))
(assert (= e_10 (select a_7 i6)))
(assert (= e_12 (select a_11 i2)))
(assert (= e_14 (select a_11 i4)))
(assert (= e_16 (select a_15 i3)))
(assert (= e_18 (select a_15 i4)))
(assert (= e_2 (select a1 i0)))
(assert (= e_20 (select a_19 i2)))
(assert (= e_22 (select a_19 i5)))
(assert (= e_24 (select a_23 i3)))
(assert (= e_26 (select a_23 i0)))
(assert (= e_30 (select a_29 i2)))
(assert (= e_32 (select a_29 i4)))
(assert (= e_34 (select a_33 i3)))
(assert (= e_36 (select a_33 i4)))
(assert (= e_38 (select a_37 i5)))
(assert (= e_4 (select a_3 i1)))
(assert (= e_40 (select a_37 i2)))
(assert (= e_42 (select a_41 i3)))
(assert (= e_44 (select a_41 i0)))
(assert (= e_6 (select a_3 i5)))
(assert (= e_8 (select a_7 i1)))
(assert (not (= a_27 a_45)))
(check-sat)
(exit)
