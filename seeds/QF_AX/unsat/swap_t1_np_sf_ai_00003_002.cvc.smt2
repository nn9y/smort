(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_176 () (Array Index Element))
(declare-fun a_177 () (Array Index Element))
(declare-fun a_179 () (Array Index Element))
(declare-fun a_181 () (Array Index Element))
(declare-fun a_183 () (Array Index Element))
(declare-fun a_184 () (Array Index Element))
(declare-fun a_185 () (Array Index Element))
(declare-fun a_186 () (Array Index Element))
(declare-fun a_188 () (Array Index Element))
(declare-fun a_189 () (Array Index Element))
(declare-fun e_175 () Element)
(declare-fun e_178 () Element)
(declare-fun e_180 () Element)
(declare-fun e_182 () Element)
(declare-fun e_187 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i2 () Index)
(assert (= a_176 (store a1 i0 e_175)))
(assert (= a_177 (store a_176 i0 e_175)))
(assert (= a_179 (store a_177 i0 e_178)))
(assert (= a_181 (store a_179 i2 e_180)))
(assert (= a_183 (store a_181 i2 e_182)))
(assert (= a_184 (store a_183 i2 e_182)))
(assert (= a_185 (store a_177 i2 e_180)))
(assert (= a_186 (store a_185 i0 e_178)))
(assert (= a_188 (store a_186 i2 e_187)))
(assert (= a_189 (store a_188 i2 e_187)))
(assert (= e_175 (select a1 i0)))
(assert (= e_178 (select a_177 i2)))
(assert (= e_180 (select a_177 i0)))
(assert (= e_182 (select a_181 i2)))
(assert (= e_187 (select a_186 i2)))
(assert (not (= a_184 a_189)))
(check-sat)
(exit)
