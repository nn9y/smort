(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_344 () (Array Index Element))
(declare-fun a_346 () (Array Index Element))
(declare-fun a_348 () (Array Index Element))
(declare-fun a_350 () (Array Index Element))
(declare-fun a_352 () (Array Index Element))
(declare-fun a_354 () (Array Index Element))
(declare-fun a_356 () (Array Index Element))
(declare-fun a_358 () (Array Index Element))
(declare-fun a_359 () (Array Index Element))
(declare-fun a_360 () (Array Index Element))
(declare-fun a_362 () (Array Index Element))
(declare-fun a_364 () (Array Index Element))
(declare-fun a_366 () (Array Index Element))
(declare-fun a_368 () (Array Index Element))
(declare-fun e_343 () Element)
(declare-fun e_345 () Element)
(declare-fun e_347 () Element)
(declare-fun e_349 () Element)
(declare-fun e_351 () Element)
(declare-fun e_353 () Element)
(declare-fun e_355 () Element)
(declare-fun e_357 () Element)
(declare-fun e_361 () Element)
(declare-fun e_363 () Element)
(declare-fun e_365 () Element)
(declare-fun e_367 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i0 () Index)
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i3 () Index)
(assert (= a_344 (store a1 i1 e_343)))
(assert (= a_346 (store a_344 i3 e_345)))
(assert (= a_348 (store a_346 i0 e_347)))
(assert (= a_350 (store a_348 i2 e_349)))
(assert (= a_352 (store a_350 i2 e_351)))
(assert (= a_354 (store a_352 i1 e_353)))
(assert (= a_356 (store a_354 i2 e_355)))
(assert (= a_358 (store a_356 i0 e_357)))
(assert (= a_359 (store a_346 i2 e_349)))
(assert (= a_360 (store a_359 i0 e_347)))
(assert (= a_362 (store a_360 i1 e_361)))
(assert (= a_364 (store a_362 i2 e_363)))
(assert (= a_366 (store a_364 i2 e_365)))
(assert (= a_368 (store a_366 i0 e_367)))
(assert (= e_343 (select a1 i3)))
(assert (= e_345 (select a1 i1)))
(assert (= e_347 (select a_346 i2)))
(assert (= e_349 (select a_346 i0)))
(assert (= e_351 (select a_350 i1)))
(assert (= e_353 (select a_350 i2)))
(assert (= e_355 (select a_354 i0)))
(assert (= e_357 (select a_354 i2)))
(assert (= e_361 (select a_360 i2)))
(assert (= e_363 (select a_360 i1)))
(assert (= e_365 (select a_364 i0)))
(assert (= e_367 (select a_364 i2)))
(assert (not (= a_358 a_368)))
(check-sat)
(exit)
