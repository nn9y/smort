(set-info :smt-lib-version 2.6)
(set-logic QF_AX)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun a_67 () (Array Index Element))
(declare-fun a_68 () (Array Index Element))
(declare-fun a_70 () (Array Index Element))
(declare-fun a_71 () (Array Index Element))
(declare-fun a_73 () (Array Index Element))
(declare-fun a_75 () (Array Index Element))
(declare-fun a_77 () (Array Index Element))
(declare-fun a_78 () (Array Index Element))
(declare-fun a_80 () (Array Index Element))
(declare-fun a_82 () (Array Index Element))
(declare-fun a_83 () (Array Index Element))
(declare-fun a_84 () (Array Index Element))
(declare-fun e_66 () Element)
(declare-fun e_69 () Element)
(declare-fun e_72 () Element)
(declare-fun e_74 () Element)
(declare-fun e_76 () Element)
(declare-fun e_79 () Element)
(declare-fun e_81 () Element)
(declare-fun a1 () (Array Index Element))
(declare-fun i1 () Index)
(declare-fun i2 () Index)
(declare-fun i4 () Index)
(assert (= a_67 (store a1 i2 e_66)))
(assert (= a_68 (store a_67 i2 e_66)))
(assert (= a_70 (store a_68 i4 e_69)))
(assert (= a_71 (store a_70 i4 e_69)))
(assert (= a_73 (store a_71 i4 e_72)))
(assert (= a_75 (store a_73 i1 e_74)))
(assert (= a_77 (store a_75 i2 e_76)))
(assert (= a_78 (store a_77 i2 e_76)))
(assert (= a_80 (store a_78 i1 e_79)))
(assert (= a_82 (store a_80 i2 e_81)))
(assert (= a_83 (store a_78 i2 e_81)))
(assert (= a_84 (store a_83 i1 e_79)))
(assert (= e_66 (select a1 i2)))
(assert (= e_69 (select a_68 i4)))
(assert (= e_72 (select a_71 i1)))
(assert (= e_74 (select a_71 i4)))
(assert (= e_76 (select a_75 i2)))
(assert (= e_79 (select a_78 i2)))
(assert (= e_81 (select a_78 i1)))
(assert (not (= a_82 a_84)))
(check-sat)
(exit)
