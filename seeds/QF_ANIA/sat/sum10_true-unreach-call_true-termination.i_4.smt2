(set-info :smt-lib-version 2.6)
(set-logic QF_ANIA)
(set-info :source "|
Generated by the tool Ultimate Automizer [1,2] which implements
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2019 [5,6].
This script might _not_ contain all SMT commands that are used by
Ultimate Automizer. In order to satisfy the restrictions of
the SMT-COMP we have to drop e.g., the commands for getting
values (resp. models), unsatisfiable cores and interpolants.

2019-04-27, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)

[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Yu-Fang Chen, Daniel Dietsch, Marius Greitschus,
     Jochen Hoenicke, Yong Li, Alexander Nutz, Betim Musa, Christian
     Schilling, Tanja Schindler, Andreas Podelski: Ultimate Automizer
     and the Search for Perfect Interpolants - (Competition Contribution).
     TACAS (2) 2018: 447-451
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model
     Checking for People Who Love Automata. CAV 2013:36-52
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Automatic Verification of C and Java Programs: SV-COMP 2019.
     TACAS (3) 2019: 133-155
[6] https://sv-comp.sosy-lab.org/2019/
|")
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun |#memory_int| () (Array Int (Array Int Int)))
(declare-fun |main_~#x~0.base| () Int)
(declare-fun main_~i~2 () Int)
(declare-fun |main_~#x~0.offset| () Int)
(declare-fun main_~temp~0 () Int)
(declare-fun main_~ret2~0 () Int)
(declare-fun main_~ret~1 () Int)
(assert (not (let ((.cse2 (select |#memory_int| |main_~#x~0.base|)) (.cse3 (* 4 main_~i~2))) (let ((.cse1 (select .cse2 (+ .cse3 |main_~#x~0.offset| 4)))) (let ((.cse0 (mod (+ (select .cse2 (+ |main_~#x~0.offset| 16)) (select .cse2 (+ |main_~#x~0.offset| 36)) (select .cse2 (+ |main_~#x~0.offset| 24)) (select .cse2 (+ |main_~#x~0.offset| 20)) .cse1 main_~temp~0 (select .cse2 (+ |main_~#x~0.offset| 32)) (select .cse2 (+ .cse3 |main_~#x~0.offset| (- 4))) (select .cse2 (+ |main_~#x~0.offset| 28)) (select .cse2 (+ |main_~#x~0.offset| 12))) 4294967296))) (and (<= .cse0 2147483647) (= 1 main_~i~2) (= main_~ret2~0 .cse0) (= .cse1 (select .cse2 (+ .cse3 |main_~#x~0.offset|))) (= main_~ret~1 .cse0) (= |main_~#x~0.offset| 0)))))))
(assert (= |main_~#x~0.offset| 0))
(assert (< 2147483647 (mod (let ((.cse1 (* 4 main_~i~2)) (.cse0 (select |#memory_int| |main_~#x~0.base|))) (+ (select .cse0 (+ |main_~#x~0.offset| 16)) (select .cse0 (+ |main_~#x~0.offset| 36)) (select .cse0 (+ |main_~#x~0.offset| 24)) (select .cse0 (+ |main_~#x~0.offset| 20)) (select .cse0 (+ .cse1 |main_~#x~0.offset| 4)) main_~temp~0 (select .cse0 (+ |main_~#x~0.offset| 32)) (select .cse0 (+ .cse1 |main_~#x~0.offset| (- 4))) (select .cse0 (+ |main_~#x~0.offset| 28)) (select .cse0 (+ |main_~#x~0.offset| 12)))) 4294967296)))
(assert (= (+ main_~ret2~0 4294967296) (mod (let ((.cse1 (* 4 main_~i~2)) (.cse0 (select |#memory_int| |main_~#x~0.base|))) (+ (select .cse0 (+ |main_~#x~0.offset| 16)) (select .cse0 (+ |main_~#x~0.offset| 36)) (select .cse0 (+ |main_~#x~0.offset| 24)) (select .cse0 (+ |main_~#x~0.offset| 20)) (select .cse0 (+ .cse1 |main_~#x~0.offset| 4)) main_~temp~0 (select .cse0 (+ |main_~#x~0.offset| 32)) (select .cse0 (+ .cse1 |main_~#x~0.offset| (- 4))) (select .cse0 (+ |main_~#x~0.offset| 28)) (select .cse0 (+ |main_~#x~0.offset| 12)))) 4294967296)))
(assert (= 1 main_~i~2))
(assert (let ((.cse0 (select |#memory_int| |main_~#x~0.base|)) (.cse1 (* 4 main_~i~2))) (= (select .cse0 (+ .cse1 |main_~#x~0.offset| 4)) (select .cse0 (+ .cse1 |main_~#x~0.offset|)))))
(assert (= (+ main_~ret~1 4294967296) (mod (let ((.cse1 (* 4 main_~i~2)) (.cse0 (select |#memory_int| |main_~#x~0.base|))) (+ (select .cse0 (+ |main_~#x~0.offset| 16)) (select .cse0 (+ |main_~#x~0.offset| 36)) (select .cse0 (+ |main_~#x~0.offset| 24)) (select .cse0 (+ |main_~#x~0.offset| 20)) (select .cse0 (+ .cse1 |main_~#x~0.offset| 4)) main_~temp~0 (select .cse0 (+ |main_~#x~0.offset| 32)) (select .cse0 (+ .cse1 |main_~#x~0.offset| (- 4))) (select .cse0 (+ |main_~#x~0.offset| 28)) (select .cse0 (+ |main_~#x~0.offset| 12)))) 4294967296)))
(check-sat)
(exit)
