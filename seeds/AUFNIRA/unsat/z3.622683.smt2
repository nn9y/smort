(set-info :smt-lib-version 2.6)
(set-logic AUFNIRA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S2 Real) Real)
(declare-fun f4 () S2)
(declare-fun f5 () S2)
(declare-fun f6 () Real)
(declare-fun f7 () Real)
(assert (not (= f1 f2)))
(assert (forall ((?v0 Real) (?v1 Real)) (= (f3 f4 (- ?v0 ?v1)) (+ (* (f3 f4 ?v0) (f3 f4 ?v1)) (* (f3 f5 ?v0) (f3 f5 ?v1))))))
(assert (forall ((?v0 Real)) (let ((?v_0 (f3 f4 ?v0)) (?v_1 (f3 f5 ?v0))) (= (+ (* ?v_0 ?v_0) (* ?v_1 ?v_1)) 1.0))))
(assert (forall ((?v0 Real)) (= (f3 f4 (+ ?v0 (* 2.0 f6))) (f3 f4 ?v0))))
(assert (< f7 (* 2.0 f6)))
(assert (forall ((?v0 Real) (?v1 Real)) (=> (<= (- f6) ?v0) (=> (< ?v0 ?v1) (=> (<= ?v1 0.0) (< (f3 f4 ?v0) (f3 f4 ?v1)))))))
(assert (< 0.0 f7))
(assert (forall ((?v0 Real)) (let ((?v_0 0.0)) (=> (< ?v_0 ?v0) (=> (< ?v0 f6) (< ?v_0 (f3 f5 ?v0)))))))
(assert (not (or (not (= (f3 f5 f7) 0.0)) (not (= (f3 f4 f7) 1.0)))))
(check-sat)
(exit)
