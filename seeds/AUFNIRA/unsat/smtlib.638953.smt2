(set-info :smt-lib-version 2.6)
(set-logic AUFNIRA)
(set-info :source |Benchmarks from the paper: "Extending Sledgehammer with SMT Solvers" by Jasmin Blanchette, Sascha Bohme, and Lawrence C. Paulson, CADE 2011.  Translated to SMT2 by Andrew Reynolds and Morgan Deters.|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-sort S1 0)
(declare-sort S2 0)
(declare-sort S3 0)
(declare-sort S4 0)
(declare-sort S5 0)
(declare-fun f1 () S1)
(declare-fun f2 () S1)
(declare-fun f3 (S2 Real) Real)
(declare-fun f4 () S2)
(declare-fun f5 () S2)
(declare-fun f6 (S3 Real) S2)
(declare-fun f7 () S3)
(declare-fun f8 () Real)
(declare-fun f9 (S4 S5) Real)
(declare-fun f10 () S4)
(declare-fun f11 () S5)
(assert (not (= f1 f2)))
(assert (forall ((?v0 Real)) (=> (= (f3 f4 ?v0) 1.0) (= (f3 f5 ?v0) 0.0))))
(assert (forall ((?v0 Real)) (let ((?v_0 0.0)) (=> (< ?v_0 ?v0) (=> (< ?v0 2.0) (< ?v_0 (f3 f5 ?v0)))))))
(assert (let ((?v_0 2.0)) (< (f3 (f6 f7 f8) ?v_0) ?v_0)))
(assert (< (- (f3 (f6 f7 f8) 2.0)) 0.0))
(assert (= (f3 f4 (f3 (f6 f7 f8) 2.0)) 0.0))
(assert (forall ((?v0 Real)) (let ((?v_0 0.0) (?v_1 (f3 f4 ?v0))) (=> (= (f3 f5 ?v0) ?v_0) (= (ite (< ?v_1 ?v_0) (- ?v_1) ?v_1) 1.0)))))
(assert (let ((?v_1 0.0) (?v_0 (f3 (f6 f7 (* 2.0 f8)) (f9 f10 f11)))) (not (=> (= (f3 f4 ?v_0) ?v_1) (=> (= (f3 f5 ?v_0) ?v_1) false)))))
(check-sat)
(exit)
