(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_204 () (Array Int Int))
(declare-fun a_205 () (Array Int Int))
(declare-fun a_207 () (Array Int Int))
(declare-fun a_208 () (Array Int Int))
(declare-fun a_210 () (Array Int Int))
(declare-fun a_211 () (Array Int Int))
(declare-fun a_213 () (Array Int Int))
(declare-fun a_215 () (Array Int Int))
(declare-fun a_217 () (Array Int Int))
(declare-fun a_219 () (Array Int Int))
(declare-fun a_221 () (Array Int Int))
(declare-fun a_223 () (Array Int Int))
(declare-fun a_225 () (Array Int Int))
(declare-fun a_227 () (Array Int Int))
(declare-fun a_228 () (Array Int Int))
(declare-fun a_229 () (Array Int Int))
(declare-fun a_231 () (Array Int Int))
(declare-fun a_233 () (Array Int Int))
(declare-fun a_235 () (Array Int Int))
(declare-fun a_237 () (Array Int Int))
(declare-fun a_239 () (Array Int Int))
(declare-fun a_241 () (Array Int Int))
(declare-fun e_203 () Int)
(declare-fun e_206 () Int)
(declare-fun e_209 () Int)
(declare-fun e_212 () Int)
(declare-fun e_214 () Int)
(declare-fun e_216 () Int)
(declare-fun e_218 () Int)
(declare-fun e_220 () Int)
(declare-fun e_222 () Int)
(declare-fun e_224 () Int)
(declare-fun e_226 () Int)
(declare-fun e_230 () Int)
(declare-fun e_232 () Int)
(declare-fun e_234 () Int)
(declare-fun e_236 () Int)
(declare-fun e_238 () Int)
(declare-fun e_240 () Int)
(declare-fun e_243 () Int)
(declare-fun e_244 () Int)
(declare-fun i_242 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_204 (store a1 i2 e_203)))
(assert (= a_205 (store a_204 i2 e_203)))
(assert (= a_207 (store a_205 i0 e_206)))
(assert (= a_208 (store a_207 i0 e_206)))
(assert (= a_210 (store a_208 i6 e_209)))
(assert (= a_211 (store a_210 i6 e_209)))
(assert (= a_213 (store a_211 i5 e_212)))
(assert (= a_215 (store a_213 i3 e_214)))
(assert (= a_217 (store a_215 i5 e_216)))
(assert (= a_219 (store a_217 i0 e_218)))
(assert (= a_221 (store a_219 i1 e_220)))
(assert (= a_223 (store a_221 i3 e_222)))
(assert (= a_225 (store a_223 i6 e_224)))
(assert (= a_227 (store a_225 i4 e_226)))
(assert (= a_228 (store a_211 i3 e_214)))
(assert (= a_229 (store a_228 i5 e_212)))
(assert (= a_231 (store a_229 i0 e_230)))
(assert (= a_233 (store a_231 i5 e_232)))
(assert (= a_235 (store a_233 i3 e_234)))
(assert (= a_237 (store a_235 i1 e_236)))
(assert (= a_239 (store a_237 i4 e_238)))
(assert (= a_241 (store a_239 i6 e_240)))
(assert (= e_203 (select a1 i2)))
(assert (= e_206 (select a_205 i0)))
(assert (= e_209 (select a_208 i6)))
(assert (= e_212 (select a_211 i3)))
(assert (= e_214 (select a_211 i5)))
(assert (= e_216 (select a_215 i0)))
(assert (= e_218 (select a_215 i5)))
(assert (= e_220 (select a_219 i3)))
(assert (= e_222 (select a_219 i1)))
(assert (= e_224 (select a_223 i4)))
(assert (= e_226 (select a_223 i6)))
(assert (= e_230 (select a_229 i5)))
(assert (= e_232 (select a_229 i0)))
(assert (= e_234 (select a_233 i1)))
(assert (= e_236 (select a_233 i3)))
(assert (= e_238 (select a_237 i6)))
(assert (= e_240 (select a_237 i4)))
(assert (= e_243 (select a_227 i_242)))
(assert (= e_244 (select a_241 i_242)))
(assert (= i_242 (sk a_227 a_241)))
(assert (not (= e_243 e_244)))
(check-sat)
(exit)
