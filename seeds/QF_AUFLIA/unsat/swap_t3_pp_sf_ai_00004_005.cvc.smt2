(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_216 () (Array Int Int))
(declare-fun a_218 () (Array Int Int))
(declare-fun a_220 () (Array Int Int))
(declare-fun a_222 () (Array Int Int))
(declare-fun a_224 () (Array Int Int))
(declare-fun a_226 () (Array Int Int))
(declare-fun a_228 () (Array Int Int))
(declare-fun a_230 () (Array Int Int))
(declare-fun a_231 () (Array Int Int))
(declare-fun a_232 () (Array Int Int))
(declare-fun a_234 () (Array Int Int))
(declare-fun a_236 () (Array Int Int))
(declare-fun a_238 () (Array Int Int))
(declare-fun a_240 () (Array Int Int))
(declare-fun a_242 () (Array Int Int))
(declare-fun a_244 () (Array Int Int))
(declare-fun e_215 () Int)
(declare-fun e_217 () Int)
(declare-fun e_219 () Int)
(declare-fun e_221 () Int)
(declare-fun e_223 () Int)
(declare-fun e_225 () Int)
(declare-fun e_227 () Int)
(declare-fun e_229 () Int)
(declare-fun e_233 () Int)
(declare-fun e_235 () Int)
(declare-fun e_237 () Int)
(declare-fun e_239 () Int)
(declare-fun e_241 () Int)
(declare-fun e_243 () Int)
(declare-fun e_246 () Int)
(declare-fun e_247 () Int)
(declare-fun i_245 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_216 (store a1 i0 e_215)))
(assert (= a_218 (store a_216 i1 e_217)))
(assert (= a_220 (store a_218 i1 e_219)))
(assert (= a_222 (store a_220 i2 e_221)))
(assert (= a_224 (store a_222 i3 e_223)))
(assert (= a_226 (store a_224 i2 e_225)))
(assert (= a_228 (store a_226 i2 e_227)))
(assert (= a_230 (store a_228 i3 e_229)))
(assert (= a_231 (store a1 i1 e_217)))
(assert (= a_232 (store a_231 i0 e_215)))
(assert (= a_234 (store a_232 i1 e_233)))
(assert (= a_236 (store a_234 i2 e_235)))
(assert (= a_238 (store a_236 i2 e_237)))
(assert (= a_240 (store a_238 i3 e_239)))
(assert (= a_242 (store a_240 i3 e_241)))
(assert (= a_244 (store a_242 i2 e_243)))
(assert (= e_215 (select a1 i1)))
(assert (= e_217 (select a1 i0)))
(assert (= e_219 (select a_218 i2)))
(assert (= e_221 (select a_218 i1)))
(assert (= e_223 (select a_222 i2)))
(assert (= e_225 (select a_222 i3)))
(assert (= e_227 (select a_226 i3)))
(assert (= e_229 (select a_226 i2)))
(assert (= e_233 (select a_232 i2)))
(assert (= e_235 (select a_232 i1)))
(assert (= e_237 (select a_236 i3)))
(assert (= e_239 (select a_236 i2)))
(assert (= e_241 (select a_240 i2)))
(assert (= e_243 (select a_240 i3)))
(assert (= e_246 (select a_230 i_245)))
(assert (= e_247 (select a_244 i_245)))
(assert (= i_245 (sk a_230 a_244)))
(assert (not (= e_246 e_247)))
(check-sat)
(exit)
