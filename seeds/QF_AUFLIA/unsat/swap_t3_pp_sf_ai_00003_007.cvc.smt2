(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_53 () (Array Int Int))
(declare-fun a_54 () (Array Int Int))
(declare-fun a_56 () (Array Int Int))
(declare-fun a_58 () (Array Int Int))
(declare-fun a_60 () (Array Int Int))
(declare-fun a_62 () (Array Int Int))
(declare-fun a_63 () (Array Int Int))
(declare-fun a_64 () (Array Int Int))
(declare-fun e_52 () Int)
(declare-fun e_55 () Int)
(declare-fun e_57 () Int)
(declare-fun e_59 () Int)
(declare-fun e_61 () Int)
(declare-fun e_66 () Int)
(declare-fun e_67 () Int)
(declare-fun i_65 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_53 (store a1 i0 e_52)))
(assert (= a_54 (store a_53 i0 e_52)))
(assert (= a_56 (store a_54 i1 e_55)))
(assert (= a_58 (store a_56 i2 e_57)))
(assert (= a_60 (store a_58 i1 e_59)))
(assert (= a_62 (store a_60 i2 e_61)))
(assert (= a_63 (store a_58 i2 e_61)))
(assert (= a_64 (store a_63 i1 e_59)))
(assert (= e_52 (select a1 i0)))
(assert (= e_55 (select a_54 i2)))
(assert (= e_57 (select a_54 i1)))
(assert (= e_59 (select a_58 i2)))
(assert (= e_61 (select a_58 i1)))
(assert (= e_66 (select a_62 i_65)))
(assert (= e_67 (select a_64 i_65)))
(assert (= i_65 (sk a_62 a_64)))
(assert (not (= e_66 e_67)))
(check-sat)
(exit)
