(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_148 () (Array Int Int))
(declare-fun a_149 () (Array Int Int))
(declare-fun a_151 () (Array Int Int))
(declare-fun a_152 () (Array Int Int))
(declare-fun a_154 () (Array Int Int))
(declare-fun a_156 () (Array Int Int))
(declare-fun a_157 () (Array Int Int))
(declare-fun a_158 () (Array Int Int))
(declare-fun e_147 () Int)
(declare-fun e_150 () Int)
(declare-fun e_153 () Int)
(declare-fun e_155 () Int)
(declare-fun e_160 () Int)
(declare-fun e_161 () Int)
(declare-fun i_159 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_148 (store a1 i1 e_147)))
(assert (= a_149 (store a_148 i1 e_147)))
(assert (= a_151 (store a_149 i0 e_150)))
(assert (= a_152 (store a_151 i0 e_150)))
(assert (= a_154 (store a_152 i2 e_153)))
(assert (= a_156 (store a_154 i0 e_155)))
(assert (= a_157 (store a_152 i0 e_155)))
(assert (= a_158 (store a_157 i2 e_153)))
(assert (= e_147 (select a1 i1)))
(assert (= e_150 (select a_149 i0)))
(assert (= e_153 (select a_152 i0)))
(assert (= e_155 (select a_152 i2)))
(assert (= e_160 (select a_156 i_159)))
(assert (= e_161 (select a_158 i_159)))
(assert (= i_159 (sk a_156 a_158)))
(assert (not (= e_160 e_161)))
(check-sat)
(exit)
