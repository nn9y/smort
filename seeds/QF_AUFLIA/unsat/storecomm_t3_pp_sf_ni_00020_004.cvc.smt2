(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_429 () (Array Int Int))
(declare-fun a_430 () (Array Int Int))
(declare-fun a_431 () (Array Int Int))
(declare-fun a_432 () (Array Int Int))
(declare-fun a_433 () (Array Int Int))
(declare-fun a_434 () (Array Int Int))
(declare-fun a_435 () (Array Int Int))
(declare-fun a_436 () (Array Int Int))
(declare-fun a_437 () (Array Int Int))
(declare-fun a_438 () (Array Int Int))
(declare-fun a_439 () (Array Int Int))
(declare-fun a_440 () (Array Int Int))
(declare-fun a_441 () (Array Int Int))
(declare-fun a_442 () (Array Int Int))
(declare-fun a_443 () (Array Int Int))
(declare-fun a_444 () (Array Int Int))
(declare-fun a_445 () (Array Int Int))
(declare-fun a_446 () (Array Int Int))
(declare-fun a_447 () (Array Int Int))
(declare-fun a_448 () (Array Int Int))
(declare-fun a_449 () (Array Int Int))
(declare-fun a_450 () (Array Int Int))
(declare-fun a_451 () (Array Int Int))
(declare-fun a_452 () (Array Int Int))
(declare-fun a_453 () (Array Int Int))
(declare-fun a_454 () (Array Int Int))
(declare-fun a_455 () (Array Int Int))
(declare-fun a_456 () (Array Int Int))
(declare-fun a_457 () (Array Int Int))
(declare-fun a_458 () (Array Int Int))
(declare-fun a_459 () (Array Int Int))
(declare-fun a_460 () (Array Int Int))
(declare-fun a_461 () (Array Int Int))
(declare-fun a_462 () (Array Int Int))
(declare-fun a_463 () (Array Int Int))
(declare-fun a_464 () (Array Int Int))
(declare-fun a_465 () (Array Int Int))
(declare-fun a_466 () (Array Int Int))
(declare-fun a_467 () (Array Int Int))
(declare-fun a_468 () (Array Int Int))
(declare-fun e_470 () Int)
(declare-fun e_471 () Int)
(declare-fun i_469 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun e1 () Int)
(declare-fun e10 () Int)
(declare-fun e11 () Int)
(declare-fun e12 () Int)
(declare-fun e13 () Int)
(declare-fun e14 () Int)
(declare-fun e15 () Int)
(declare-fun e16 () Int)
(declare-fun e17 () Int)
(declare-fun e18 () Int)
(declare-fun e19 () Int)
(declare-fun e2 () Int)
(declare-fun e20 () Int)
(declare-fun e3 () Int)
(declare-fun e4 () Int)
(declare-fun e5 () Int)
(declare-fun e6 () Int)
(declare-fun e7 () Int)
(declare-fun e8 () Int)
(declare-fun e9 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_429 (store a1 1 e1)))
(assert (= a_430 (store a_429 2 e2)))
(assert (= a_431 (store a_430 3 e3)))
(assert (= a_432 (store a_431 4 e4)))
(assert (= a_433 (store a_432 5 e5)))
(assert (= a_434 (store a_433 6 e6)))
(assert (= a_435 (store a_434 7 e7)))
(assert (= a_436 (store a_435 8 e8)))
(assert (= a_437 (store a_436 9 e9)))
(assert (= a_438 (store a_437 10 e10)))
(assert (= a_439 (store a_438 11 e11)))
(assert (= a_440 (store a_439 12 e12)))
(assert (= a_441 (store a_440 13 e13)))
(assert (= a_442 (store a_441 14 e14)))
(assert (= a_443 (store a_442 15 e15)))
(assert (= a_444 (store a_443 16 e16)))
(assert (= a_445 (store a_444 17 e17)))
(assert (= a_446 (store a_445 18 e18)))
(assert (= a_447 (store a_446 19 e19)))
(assert (= a_448 (store a_447 20 e20)))
(assert (= a_449 (store a1 4 e4)))
(assert (= a_450 (store a_449 19 e19)))
(assert (= a_451 (store a_450 16 e16)))
(assert (= a_452 (store a_451 8 e8)))
(assert (= a_453 (store a_452 7 e7)))
(assert (= a_454 (store a_453 5 e5)))
(assert (= a_455 (store a_454 9 e9)))
(assert (= a_456 (store a_455 1 e1)))
(assert (= a_457 (store a_456 14 e14)))
(assert (= a_458 (store a_457 10 e10)))
(assert (= a_459 (store a_458 3 e3)))
(assert (= a_460 (store a_459 17 e17)))
(assert (= a_461 (store a_460 2 e2)))
(assert (= a_462 (store a_461 13 e13)))
(assert (= a_463 (store a_462 11 e11)))
(assert (= a_464 (store a_463 15 e15)))
(assert (= a_465 (store a_464 18 e18)))
(assert (= a_466 (store a_465 20 e20)))
(assert (= a_467 (store a_466 6 e6)))
(assert (= a_468 (store a_467 12 e12)))
(assert (= e_470 (select a_448 i_469)))
(assert (= e_471 (select a_468 i_469)))
(assert (= i_469 (sk a_448 a_468)))
(assert (not (= e_470 e_471)))
(check-sat)
(exit)
