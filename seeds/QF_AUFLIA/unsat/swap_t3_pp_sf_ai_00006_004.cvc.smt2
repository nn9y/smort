(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_434 () (Array Int Int))
(declare-fun a_436 () (Array Int Int))
(declare-fun a_438 () (Array Int Int))
(declare-fun a_440 () (Array Int Int))
(declare-fun a_442 () (Array Int Int))
(declare-fun a_444 () (Array Int Int))
(declare-fun a_446 () (Array Int Int))
(declare-fun a_447 () (Array Int Int))
(declare-fun a_449 () (Array Int Int))
(declare-fun a_451 () (Array Int Int))
(declare-fun a_453 () (Array Int Int))
(declare-fun a_454 () (Array Int Int))
(declare-fun a_455 () (Array Int Int))
(declare-fun a_456 () (Array Int Int))
(declare-fun a_458 () (Array Int Int))
(declare-fun a_460 () (Array Int Int))
(declare-fun a_462 () (Array Int Int))
(declare-fun a_464 () (Array Int Int))
(declare-fun a_466 () (Array Int Int))
(declare-fun a_467 () (Array Int Int))
(declare-fun a_469 () (Array Int Int))
(declare-fun a_471 () (Array Int Int))
(declare-fun a_473 () (Array Int Int))
(declare-fun a_474 () (Array Int Int))
(declare-fun e_433 () Int)
(declare-fun e_435 () Int)
(declare-fun e_437 () Int)
(declare-fun e_439 () Int)
(declare-fun e_441 () Int)
(declare-fun e_443 () Int)
(declare-fun e_445 () Int)
(declare-fun e_448 () Int)
(declare-fun e_450 () Int)
(declare-fun e_452 () Int)
(declare-fun e_457 () Int)
(declare-fun e_459 () Int)
(declare-fun e_461 () Int)
(declare-fun e_463 () Int)
(declare-fun e_465 () Int)
(declare-fun e_468 () Int)
(declare-fun e_470 () Int)
(declare-fun e_472 () Int)
(declare-fun e_476 () Int)
(declare-fun e_477 () Int)
(declare-fun i_475 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_434 (store a1 i1 e_433)))
(assert (= a_436 (store a_434 i4 e_435)))
(assert (= a_438 (store a_436 i3 e_437)))
(assert (= a_440 (store a_438 i1 e_439)))
(assert (= a_442 (store a_440 i1 e_441)))
(assert (= a_444 (store a_442 i4 e_443)))
(assert (= a_446 (store a_444 i2 e_445)))
(assert (= a_447 (store a_446 i2 e_445)))
(assert (= a_449 (store a_447 i3 e_448)))
(assert (= a_451 (store a_449 i5 e_450)))
(assert (= a_453 (store a_451 i4 e_452)))
(assert (= a_454 (store a_453 i4 e_452)))
(assert (= a_455 (store a1 i4 e_435)))
(assert (= a_456 (store a_455 i1 e_433)))
(assert (= a_458 (store a_456 i3 e_457)))
(assert (= a_460 (store a_458 i1 e_459)))
(assert (= a_462 (store a_460 i1 e_461)))
(assert (= a_464 (store a_462 i4 e_463)))
(assert (= a_466 (store a_464 i2 e_465)))
(assert (= a_467 (store a_466 i2 e_465)))
(assert (= a_469 (store a_467 i5 e_468)))
(assert (= a_471 (store a_469 i3 e_470)))
(assert (= a_473 (store a_471 i4 e_472)))
(assert (= a_474 (store a_473 i4 e_472)))
(assert (= e_433 (select a1 i4)))
(assert (= e_435 (select a1 i1)))
(assert (= e_437 (select a_436 i1)))
(assert (= e_439 (select a_436 i3)))
(assert (= e_441 (select a_440 i4)))
(assert (= e_443 (select a_440 i1)))
(assert (= e_445 (select a_444 i2)))
(assert (= e_448 (select a_447 i5)))
(assert (= e_450 (select a_447 i3)))
(assert (= e_452 (select a_451 i4)))
(assert (= e_457 (select a_456 i1)))
(assert (= e_459 (select a_456 i3)))
(assert (= e_461 (select a_460 i4)))
(assert (= e_463 (select a_460 i1)))
(assert (= e_465 (select a_464 i2)))
(assert (= e_468 (select a_467 i3)))
(assert (= e_470 (select a_467 i5)))
(assert (= e_472 (select a_471 i4)))
(assert (= e_476 (select a_454 i_475)))
(assert (= e_477 (select a_474 i_475)))
(assert (= i_475 (sk a_454 a_474)))
(assert (not (= e_476 e_477)))
(check-sat)
(exit)
