(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_101 () (Array Int Int))
(declare-fun a_103 () (Array Int Int))
(declare-fun a_105 () (Array Int Int))
(declare-fun a_107 () (Array Int Int))
(declare-fun a_109 () (Array Int Int))
(declare-fun a_111 () (Array Int Int))
(declare-fun a_113 () (Array Int Int))
(declare-fun a_69 () (Array Int Int))
(declare-fun a_71 () (Array Int Int))
(declare-fun a_73 () (Array Int Int))
(declare-fun a_75 () (Array Int Int))
(declare-fun a_77 () (Array Int Int))
(declare-fun a_79 () (Array Int Int))
(declare-fun a_81 () (Array Int Int))
(declare-fun a_83 () (Array Int Int))
(declare-fun a_85 () (Array Int Int))
(declare-fun a_87 () (Array Int Int))
(declare-fun a_89 () (Array Int Int))
(declare-fun a_91 () (Array Int Int))
(declare-fun a_92 () (Array Int Int))
(declare-fun a_93 () (Array Int Int))
(declare-fun a_95 () (Array Int Int))
(declare-fun a_97 () (Array Int Int))
(declare-fun a_99 () (Array Int Int))
(declare-fun e_100 () Int)
(declare-fun e_102 () Int)
(declare-fun e_104 () Int)
(declare-fun e_106 () Int)
(declare-fun e_108 () Int)
(declare-fun e_110 () Int)
(declare-fun e_112 () Int)
(declare-fun e_115 () Int)
(declare-fun e_116 () Int)
(declare-fun e_68 () Int)
(declare-fun e_70 () Int)
(declare-fun e_72 () Int)
(declare-fun e_74 () Int)
(declare-fun e_76 () Int)
(declare-fun e_78 () Int)
(declare-fun e_80 () Int)
(declare-fun e_82 () Int)
(declare-fun e_84 () Int)
(declare-fun e_86 () Int)
(declare-fun e_88 () Int)
(declare-fun e_90 () Int)
(declare-fun e_94 () Int)
(declare-fun e_96 () Int)
(declare-fun e_98 () Int)
(declare-fun i_114 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_101 (store a_99 i2 e_100)))
(assert (= a_103 (store a_101 i0 e_102)))
(assert (= a_105 (store a_103 i2 e_104)))
(assert (= a_107 (store a_105 i3 e_106)))
(assert (= a_109 (store a_107 i4 e_108)))
(assert (= a_111 (store a_109 i5 e_110)))
(assert (= a_113 (store a_111 i1 e_112)))
(assert (= a_69 (store a1 i1 e_68)))
(assert (= a_71 (store a_69 i0 e_70)))
(assert (= a_73 (store a_71 i4 e_72)))
(assert (= a_75 (store a_73 i5 e_74)))
(assert (= a_77 (store a_75 i2 e_76)))
(assert (= a_79 (store a_77 i4 e_78)))
(assert (= a_81 (store a_79 i0 e_80)))
(assert (= a_83 (store a_81 i2 e_82)))
(assert (= a_85 (store a_83 i4 e_84)))
(assert (= a_87 (store a_85 i3 e_86)))
(assert (= a_89 (store a_87 i1 e_88)))
(assert (= a_91 (store a_89 i5 e_90)))
(assert (= a_92 (store a1 i0 e_70)))
(assert (= a_93 (store a_92 i1 e_68)))
(assert (= a_95 (store a_93 i4 e_94)))
(assert (= a_97 (store a_95 i5 e_96)))
(assert (= a_99 (store a_97 i4 e_98)))
(assert (= e_100 (select a_97 i4)))
(assert (= e_102 (select a_101 i2)))
(assert (= e_104 (select a_101 i0)))
(assert (= e_106 (select a_105 i4)))
(assert (= e_108 (select a_105 i3)))
(assert (= e_110 (select a_109 i1)))
(assert (= e_112 (select a_109 i5)))
(assert (= e_115 (select a_91 i_114)))
(assert (= e_116 (select a_113 i_114)))
(assert (= e_68 (select a1 i0)))
(assert (= e_70 (select a1 i1)))
(assert (= e_72 (select a_71 i5)))
(assert (= e_74 (select a_71 i4)))
(assert (= e_76 (select a_75 i4)))
(assert (= e_78 (select a_75 i2)))
(assert (= e_80 (select a_79 i2)))
(assert (= e_82 (select a_79 i0)))
(assert (= e_84 (select a_83 i3)))
(assert (= e_86 (select a_83 i4)))
(assert (= e_88 (select a_87 i5)))
(assert (= e_90 (select a_87 i1)))
(assert (= e_94 (select a_93 i5)))
(assert (= e_96 (select a_93 i4)))
(assert (= e_98 (select a_97 i2)))
(assert (= i_114 (sk a_91 a_113)))
(assert (not (= e_115 e_116)))
(check-sat)
(exit)
