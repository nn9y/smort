(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_417 () (Array Int Int))
(declare-fun a_418 () (Array Int Int))
(declare-fun a_420 () (Array Int Int))
(declare-fun a_421 () (Array Int Int))
(declare-fun a_423 () (Array Int Int))
(declare-fun a_425 () (Array Int Int))
(declare-fun a_427 () (Array Int Int))
(declare-fun a_428 () (Array Int Int))
(declare-fun a_430 () (Array Int Int))
(declare-fun a_432 () (Array Int Int))
(declare-fun a_433 () (Array Int Int))
(declare-fun a_434 () (Array Int Int))
(declare-fun a_436 () (Array Int Int))
(declare-fun a_437 () (Array Int Int))
(declare-fun a_439 () (Array Int Int))
(declare-fun a_441 () (Array Int Int))
(declare-fun e_416 () Int)
(declare-fun e_419 () Int)
(declare-fun e_422 () Int)
(declare-fun e_424 () Int)
(declare-fun e_426 () Int)
(declare-fun e_429 () Int)
(declare-fun e_431 () Int)
(declare-fun e_435 () Int)
(declare-fun e_438 () Int)
(declare-fun e_440 () Int)
(declare-fun e_443 () Int)
(declare-fun e_444 () Int)
(declare-fun i_442 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_417 (store a1 i3 e_416)))
(assert (= a_418 (store a_417 i3 e_416)))
(assert (= a_420 (store a_418 i1 e_419)))
(assert (= a_421 (store a_420 i1 e_419)))
(assert (= a_423 (store a_421 i4 e_422)))
(assert (= a_425 (store a_423 i2 e_424)))
(assert (= a_427 (store a_425 i3 e_426)))
(assert (= a_428 (store a_427 i3 e_426)))
(assert (= a_430 (store a_428 i1 e_429)))
(assert (= a_432 (store a_430 i3 e_431)))
(assert (= a_433 (store a_421 i2 e_424)))
(assert (= a_434 (store a_433 i4 e_422)))
(assert (= a_436 (store a_434 i3 e_435)))
(assert (= a_437 (store a_436 i3 e_435)))
(assert (= a_439 (store a_437 i3 e_438)))
(assert (= a_441 (store a_439 i1 e_440)))
(assert (= e_416 (select a1 i3)))
(assert (= e_419 (select a_418 i1)))
(assert (= e_422 (select a_421 i2)))
(assert (= e_424 (select a_421 i4)))
(assert (= e_426 (select a_425 i3)))
(assert (= e_429 (select a_428 i3)))
(assert (= e_431 (select a_428 i1)))
(assert (= e_435 (select a_434 i3)))
(assert (= e_438 (select a_437 i1)))
(assert (= e_440 (select a_437 i3)))
(assert (= e_443 (select a_432 i_442)))
(assert (= e_444 (select a_441 i_442)))
(assert (= i_442 (sk a_432 a_441)))
(assert (not (= e_443 e_444)))
(check-sat)
(exit)
