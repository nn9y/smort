(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_73 () (Array Int Int))
(declare-fun a_74 () (Array Int Int))
(declare-fun a_76 () (Array Int Int))
(declare-fun a_77 () (Array Int Int))
(declare-fun a_79 () (Array Int Int))
(declare-fun a_81 () (Array Int Int))
(declare-fun a_83 () (Array Int Int))
(declare-fun a_84 () (Array Int Int))
(declare-fun a_86 () (Array Int Int))
(declare-fun a_88 () (Array Int Int))
(declare-fun a_89 () (Array Int Int))
(declare-fun a_90 () (Array Int Int))
(declare-fun e_72 () Int)
(declare-fun e_75 () Int)
(declare-fun e_78 () Int)
(declare-fun e_80 () Int)
(declare-fun e_82 () Int)
(declare-fun e_85 () Int)
(declare-fun e_87 () Int)
(declare-fun e_92 () Int)
(declare-fun e_93 () Int)
(declare-fun i_91 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i4 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_73 (store a1 i2 e_72)))
(assert (= a_74 (store a_73 i2 e_72)))
(assert (= a_76 (store a_74 i4 e_75)))
(assert (= a_77 (store a_76 i4 e_75)))
(assert (= a_79 (store a_77 i4 e_78)))
(assert (= a_81 (store a_79 i1 e_80)))
(assert (= a_83 (store a_81 i2 e_82)))
(assert (= a_84 (store a_83 i2 e_82)))
(assert (= a_86 (store a_84 i1 e_85)))
(assert (= a_88 (store a_86 i2 e_87)))
(assert (= a_89 (store a_84 i2 e_87)))
(assert (= a_90 (store a_89 i1 e_85)))
(assert (= e_72 (select a1 i2)))
(assert (= e_75 (select a_74 i4)))
(assert (= e_78 (select a_77 i1)))
(assert (= e_80 (select a_77 i4)))
(assert (= e_82 (select a_81 i2)))
(assert (= e_85 (select a_84 i2)))
(assert (= e_87 (select a_84 i1)))
(assert (= e_92 (select a_88 i_91)))
(assert (= e_93 (select a_90 i_91)))
(assert (= i_91 (sk a_88 a_90)))
(assert (not (= e_92 e_93)))
(check-sat)
(exit)
