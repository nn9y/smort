(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_172 () (Array Int Int))
(declare-fun a_174 () (Array Int Int))
(declare-fun a_176 () (Array Int Int))
(declare-fun a_178 () (Array Int Int))
(declare-fun a_180 () (Array Int Int))
(declare-fun a_181 () (Array Int Int))
(declare-fun a_183 () (Array Int Int))
(declare-fun a_185 () (Array Int Int))
(declare-fun a_186 () (Array Int Int))
(declare-fun a_187 () (Array Int Int))
(declare-fun a_189 () (Array Int Int))
(declare-fun a_190 () (Array Int Int))
(declare-fun a_192 () (Array Int Int))
(declare-fun a_194 () (Array Int Int))
(declare-fun e_171 () Int)
(declare-fun e_173 () Int)
(declare-fun e_175 () Int)
(declare-fun e_177 () Int)
(declare-fun e_179 () Int)
(declare-fun e_182 () Int)
(declare-fun e_184 () Int)
(declare-fun e_188 () Int)
(declare-fun e_191 () Int)
(declare-fun e_193 () Int)
(declare-fun e_196 () Int)
(declare-fun e_197 () Int)
(declare-fun i_195 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_172 (store a1 i3 e_171)))
(assert (= a_174 (store a_172 i2 e_173)))
(assert (= a_176 (store a_174 i0 e_175)))
(assert (= a_178 (store a_176 i2 e_177)))
(assert (= a_180 (store a_178 i3 e_179)))
(assert (= a_181 (store a_180 i3 e_179)))
(assert (= a_183 (store a_181 i1 e_182)))
(assert (= a_185 (store a_183 i3 e_184)))
(assert (= a_186 (store a_174 i2 e_177)))
(assert (= a_187 (store a_186 i0 e_175)))
(assert (= a_189 (store a_187 i3 e_188)))
(assert (= a_190 (store a_189 i3 e_188)))
(assert (= a_192 (store a_190 i3 e_191)))
(assert (= a_194 (store a_192 i1 e_193)))
(assert (= e_171 (select a1 i2)))
(assert (= e_173 (select a1 i3)))
(assert (= e_175 (select a_174 i2)))
(assert (= e_177 (select a_174 i0)))
(assert (= e_179 (select a_178 i3)))
(assert (= e_182 (select a_181 i3)))
(assert (= e_184 (select a_181 i1)))
(assert (= e_188 (select a_187 i3)))
(assert (= e_191 (select a_190 i1)))
(assert (= e_193 (select a_190 i3)))
(assert (= e_196 (select a_185 i_195)))
(assert (= e_197 (select a_194 i_195)))
(assert (= i_195 (sk a_185 a_194)))
(assert (not (= e_196 e_197)))
(check-sat)
(exit)
