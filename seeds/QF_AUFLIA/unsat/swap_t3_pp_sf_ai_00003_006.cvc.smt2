(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_100 () (Array Int Int))
(declare-fun a_101 () (Array Int Int))
(declare-fun a_102 () (Array Int Int))
(declare-fun a_104 () (Array Int Int))
(declare-fun a_105 () (Array Int Int))
(declare-fun a_107 () (Array Int Int))
(declare-fun a_108 () (Array Int Int))
(declare-fun a_92 () (Array Int Int))
(declare-fun a_94 () (Array Int Int))
(declare-fun a_96 () (Array Int Int))
(declare-fun a_97 () (Array Int Int))
(declare-fun a_99 () (Array Int Int))
(declare-fun e_103 () Int)
(declare-fun e_106 () Int)
(declare-fun e_110 () Int)
(declare-fun e_111 () Int)
(declare-fun e_91 () Int)
(declare-fun e_93 () Int)
(declare-fun e_95 () Int)
(declare-fun e_98 () Int)
(declare-fun i_109 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_100 (store a_99 i2 e_98)))
(assert (= a_101 (store a1 i1 e_93)))
(assert (= a_102 (store a_101 i0 e_91)))
(assert (= a_104 (store a_102 i0 e_103)))
(assert (= a_105 (store a_104 i0 e_103)))
(assert (= a_107 (store a_105 i2 e_106)))
(assert (= a_108 (store a_107 i2 e_106)))
(assert (= a_92 (store a1 i0 e_91)))
(assert (= a_94 (store a_92 i1 e_93)))
(assert (= a_96 (store a_94 i0 e_95)))
(assert (= a_97 (store a_96 i0 e_95)))
(assert (= a_99 (store a_97 i2 e_98)))
(assert (= e_103 (select a_102 i0)))
(assert (= e_106 (select a_105 i2)))
(assert (= e_110 (select a_100 i_109)))
(assert (= e_111 (select a_108 i_109)))
(assert (= e_91 (select a1 i1)))
(assert (= e_93 (select a1 i0)))
(assert (= e_95 (select a_94 i0)))
(assert (= e_98 (select a_97 i2)))
(assert (= i_109 (sk a_100 a_108)))
(assert (not (= e_110 e_111)))
(check-sat)
(exit)
