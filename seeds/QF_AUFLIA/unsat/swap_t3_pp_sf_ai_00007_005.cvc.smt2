(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_394 () (Array Int Int))
(declare-fun a_396 () (Array Int Int))
(declare-fun a_398 () (Array Int Int))
(declare-fun a_400 () (Array Int Int))
(declare-fun a_402 () (Array Int Int))
(declare-fun a_404 () (Array Int Int))
(declare-fun a_406 () (Array Int Int))
(declare-fun a_408 () (Array Int Int))
(declare-fun a_410 () (Array Int Int))
(declare-fun a_411 () (Array Int Int))
(declare-fun a_413 () (Array Int Int))
(declare-fun a_415 () (Array Int Int))
(declare-fun a_417 () (Array Int Int))
(declare-fun a_419 () (Array Int Int))
(declare-fun a_420 () (Array Int Int))
(declare-fun a_421 () (Array Int Int))
(declare-fun a_423 () (Array Int Int))
(declare-fun a_425 () (Array Int Int))
(declare-fun a_427 () (Array Int Int))
(declare-fun a_428 () (Array Int Int))
(declare-fun a_430 () (Array Int Int))
(declare-fun a_432 () (Array Int Int))
(declare-fun a_434 () (Array Int Int))
(declare-fun a_436 () (Array Int Int))
(declare-fun e_393 () Int)
(declare-fun e_395 () Int)
(declare-fun e_397 () Int)
(declare-fun e_399 () Int)
(declare-fun e_401 () Int)
(declare-fun e_403 () Int)
(declare-fun e_405 () Int)
(declare-fun e_407 () Int)
(declare-fun e_409 () Int)
(declare-fun e_412 () Int)
(declare-fun e_414 () Int)
(declare-fun e_416 () Int)
(declare-fun e_418 () Int)
(declare-fun e_422 () Int)
(declare-fun e_424 () Int)
(declare-fun e_426 () Int)
(declare-fun e_429 () Int)
(declare-fun e_431 () Int)
(declare-fun e_433 () Int)
(declare-fun e_435 () Int)
(declare-fun e_438 () Int)
(declare-fun e_439 () Int)
(declare-fun i_437 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_394 (store a1 i1 e_393)))
(assert (= a_396 (store a_394 i5 e_395)))
(assert (= a_398 (store a_396 i0 e_397)))
(assert (= a_400 (store a_398 i3 e_399)))
(assert (= a_402 (store a_400 i1 e_401)))
(assert (= a_404 (store a_402 i4 e_403)))
(assert (= a_406 (store a_404 i6 e_405)))
(assert (= a_408 (store a_406 i0 e_407)))
(assert (= a_410 (store a_408 i3 e_409)))
(assert (= a_411 (store a_410 i3 e_409)))
(assert (= a_413 (store a_411 i1 e_412)))
(assert (= a_415 (store a_413 i3 e_414)))
(assert (= a_417 (store a_415 i0 e_416)))
(assert (= a_419 (store a_417 i3 e_418)))
(assert (= a_420 (store a_400 i4 e_403)))
(assert (= a_421 (store a_420 i1 e_401)))
(assert (= a_423 (store a_421 i0 e_422)))
(assert (= a_425 (store a_423 i6 e_424)))
(assert (= a_427 (store a_425 i3 e_426)))
(assert (= a_428 (store a_427 i3 e_426)))
(assert (= a_430 (store a_428 i3 e_429)))
(assert (= a_432 (store a_430 i1 e_431)))
(assert (= a_434 (store a_432 i3 e_433)))
(assert (= a_436 (store a_434 i0 e_435)))
(assert (= e_393 (select a1 i5)))
(assert (= e_395 (select a1 i1)))
(assert (= e_397 (select a_396 i3)))
(assert (= e_399 (select a_396 i0)))
(assert (= e_401 (select a_400 i4)))
(assert (= e_403 (select a_400 i1)))
(assert (= e_405 (select a_404 i0)))
(assert (= e_407 (select a_404 i6)))
(assert (= e_409 (select a_408 i3)))
(assert (= e_412 (select a_411 i3)))
(assert (= e_414 (select a_411 i1)))
(assert (= e_416 (select a_415 i3)))
(assert (= e_418 (select a_415 i0)))
(assert (= e_422 (select a_421 i6)))
(assert (= e_424 (select a_421 i0)))
(assert (= e_426 (select a_425 i3)))
(assert (= e_429 (select a_428 i1)))
(assert (= e_431 (select a_428 i3)))
(assert (= e_433 (select a_432 i0)))
(assert (= e_435 (select a_432 i3)))
(assert (= e_438 (select a_419 i_437)))
(assert (= e_439 (select a_436 i_437)))
(assert (= i_437 (sk a_419 a_436)))
(assert (not (= e_438 e_439)))
(check-sat)
(exit)
