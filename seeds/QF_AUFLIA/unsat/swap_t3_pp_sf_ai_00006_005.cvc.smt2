(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_340 () (Array Int Int))
(declare-fun a_342 () (Array Int Int))
(declare-fun a_344 () (Array Int Int))
(declare-fun a_346 () (Array Int Int))
(declare-fun a_348 () (Array Int Int))
(declare-fun a_350 () (Array Int Int))
(declare-fun a_352 () (Array Int Int))
(declare-fun a_354 () (Array Int Int))
(declare-fun a_356 () (Array Int Int))
(declare-fun a_358 () (Array Int Int))
(declare-fun a_360 () (Array Int Int))
(declare-fun a_362 () (Array Int Int))
(declare-fun a_363 () (Array Int Int))
(declare-fun a_364 () (Array Int Int))
(declare-fun a_366 () (Array Int Int))
(declare-fun a_368 () (Array Int Int))
(declare-fun a_370 () (Array Int Int))
(declare-fun a_372 () (Array Int Int))
(declare-fun a_374 () (Array Int Int))
(declare-fun a_376 () (Array Int Int))
(declare-fun a_378 () (Array Int Int))
(declare-fun a_380 () (Array Int Int))
(declare-fun a_382 () (Array Int Int))
(declare-fun a_384 () (Array Int Int))
(declare-fun e_339 () Int)
(declare-fun e_341 () Int)
(declare-fun e_343 () Int)
(declare-fun e_345 () Int)
(declare-fun e_347 () Int)
(declare-fun e_349 () Int)
(declare-fun e_351 () Int)
(declare-fun e_353 () Int)
(declare-fun e_355 () Int)
(declare-fun e_357 () Int)
(declare-fun e_359 () Int)
(declare-fun e_361 () Int)
(declare-fun e_365 () Int)
(declare-fun e_367 () Int)
(declare-fun e_369 () Int)
(declare-fun e_371 () Int)
(declare-fun e_373 () Int)
(declare-fun e_375 () Int)
(declare-fun e_377 () Int)
(declare-fun e_379 () Int)
(declare-fun e_381 () Int)
(declare-fun e_383 () Int)
(declare-fun e_386 () Int)
(declare-fun e_387 () Int)
(declare-fun i_385 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_340 (store a1 i5 e_339)))
(assert (= a_342 (store a_340 i3 e_341)))
(assert (= a_344 (store a_342 i0 e_343)))
(assert (= a_346 (store a_344 i1 e_345)))
(assert (= a_348 (store a_346 i1 e_347)))
(assert (= a_350 (store a_348 i4 e_349)))
(assert (= a_352 (store a_350 i4 e_351)))
(assert (= a_354 (store a_352 i0 e_353)))
(assert (= a_356 (store a_354 i4 e_355)))
(assert (= a_358 (store a_356 i5 e_357)))
(assert (= a_360 (store a_358 i2 e_359)))
(assert (= a_362 (store a_360 i0 e_361)))
(assert (= a_363 (store a1 i3 e_341)))
(assert (= a_364 (store a_363 i5 e_339)))
(assert (= a_366 (store a_364 i1 e_365)))
(assert (= a_368 (store a_366 i0 e_367)))
(assert (= a_370 (store a_368 i4 e_369)))
(assert (= a_372 (store a_370 i1 e_371)))
(assert (= a_374 (store a_372 i4 e_373)))
(assert (= a_376 (store a_374 i0 e_375)))
(assert (= a_378 (store a_376 i4 e_377)))
(assert (= a_380 (store a_378 i5 e_379)))
(assert (= a_382 (store a_380 i0 e_381)))
(assert (= a_384 (store a_382 i2 e_383)))
(assert (= e_339 (select a1 i3)))
(assert (= e_341 (select a1 i5)))
(assert (= e_343 (select a_342 i1)))
(assert (= e_345 (select a_342 i0)))
(assert (= e_347 (select a_346 i4)))
(assert (= e_349 (select a_346 i1)))
(assert (= e_351 (select a_350 i0)))
(assert (= e_353 (select a_350 i4)))
(assert (= e_355 (select a_354 i5)))
(assert (= e_357 (select a_354 i4)))
(assert (= e_359 (select a_358 i0)))
(assert (= e_361 (select a_358 i2)))
(assert (= e_365 (select a_364 i0)))
(assert (= e_367 (select a_364 i1)))
(assert (= e_369 (select a_368 i1)))
(assert (= e_371 (select a_368 i4)))
(assert (= e_373 (select a_372 i0)))
(assert (= e_375 (select a_372 i4)))
(assert (= e_377 (select a_376 i5)))
(assert (= e_379 (select a_376 i4)))
(assert (= e_381 (select a_380 i2)))
(assert (= e_383 (select a_380 i0)))
(assert (= e_386 (select a_362 i_385)))
(assert (= e_387 (select a_384 i_385)))
(assert (= i_385 (sk a_362 a_384)))
(assert (not (= e_386 e_387)))
(check-sat)
(exit)
