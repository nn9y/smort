(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_558 () (Array Int Int))
(declare-fun a_559 () (Array Int Int))
(declare-fun a_560 () (Array Int Int))
(declare-fun a_561 () (Array Int Int))
(declare-fun a_562 () (Array Int Int))
(declare-fun a_563 () (Array Int Int))
(declare-fun a_564 () (Array Int Int))
(declare-fun a_565 () (Array Int Int))
(declare-fun a_566 () (Array Int Int))
(declare-fun a_567 () (Array Int Int))
(declare-fun a_568 () (Array Int Int))
(declare-fun a_569 () (Array Int Int))
(declare-fun a_570 () (Array Int Int))
(declare-fun a_571 () (Array Int Int))
(declare-fun a_572 () (Array Int Int))
(declare-fun a_573 () (Array Int Int))
(declare-fun a_574 () (Array Int Int))
(declare-fun a_575 () (Array Int Int))
(declare-fun a_576 () (Array Int Int))
(declare-fun a_577 () (Array Int Int))
(declare-fun a_578 () (Array Int Int))
(declare-fun a_579 () (Array Int Int))
(declare-fun a_580 () (Array Int Int))
(declare-fun a_581 () (Array Int Int))
(declare-fun a_582 () (Array Int Int))
(declare-fun a_583 () (Array Int Int))
(declare-fun a_584 () (Array Int Int))
(declare-fun a_585 () (Array Int Int))
(declare-fun a_586 () (Array Int Int))
(declare-fun a_587 () (Array Int Int))
(declare-fun a_588 () (Array Int Int))
(declare-fun a_589 () (Array Int Int))
(declare-fun a_590 () (Array Int Int))
(declare-fun a_591 () (Array Int Int))
(declare-fun a_592 () (Array Int Int))
(declare-fun a_593 () (Array Int Int))
(declare-fun a_594 () (Array Int Int))
(declare-fun a_595 () (Array Int Int))
(declare-fun a_596 () (Array Int Int))
(declare-fun a_597 () (Array Int Int))
(declare-fun a1 () (Array Int Int))
(declare-fun e1 () Int)
(declare-fun e10 () Int)
(declare-fun e11 () Int)
(declare-fun e12 () Int)
(declare-fun e13 () Int)
(declare-fun e14 () Int)
(declare-fun e15 () Int)
(declare-fun e16 () Int)
(declare-fun e17 () Int)
(declare-fun e18 () Int)
(declare-fun e19 () Int)
(declare-fun e2 () Int)
(declare-fun e20 () Int)
(declare-fun e3 () Int)
(declare-fun e4 () Int)
(declare-fun e5 () Int)
(declare-fun e6 () Int)
(declare-fun e7 () Int)
(declare-fun e8 () Int)
(declare-fun e9 () Int)
(assert (= a_558 (store a1 1 e1)))
(assert (= a_559 (store a_558 2 e2)))
(assert (= a_560 (store a_559 3 e3)))
(assert (= a_561 (store a_560 4 e4)))
(assert (= a_562 (store a_561 5 e5)))
(assert (= a_563 (store a_562 6 e6)))
(assert (= a_564 (store a_563 7 e7)))
(assert (= a_565 (store a_564 8 e8)))
(assert (= a_566 (store a_565 9 e9)))
(assert (= a_567 (store a_566 10 e10)))
(assert (= a_568 (store a_567 11 e11)))
(assert (= a_569 (store a_568 12 e12)))
(assert (= a_570 (store a_569 13 e13)))
(assert (= a_571 (store a_570 14 e14)))
(assert (= a_572 (store a_571 15 e15)))
(assert (= a_573 (store a_572 16 e16)))
(assert (= a_574 (store a_573 17 e17)))
(assert (= a_575 (store a_574 18 e18)))
(assert (= a_576 (store a_575 19 e19)))
(assert (= a_577 (store a_576 20 e20)))
(assert (= a_578 (store a1 4 e4)))
(assert (= a_579 (store a_578 17 e17)))
(assert (= a_580 (store a_579 7 e7)))
(assert (= a_581 (store a_580 8 e8)))
(assert (= a_582 (store a_581 3 e3)))
(assert (= a_583 (store a_582 18 e18)))
(assert (= a_584 (store a_583 14 e14)))
(assert (= a_585 (store a_584 11 e11)))
(assert (= a_586 (store a_585 15 e15)))
(assert (= a_587 (store a_586 10 e10)))
(assert (= a_588 (store a_587 16 e16)))
(assert (= a_589 (store a_588 19 e19)))
(assert (= a_590 (store a_589 1 e1)))
(assert (= a_591 (store a_590 12 e12)))
(assert (= a_592 (store a_591 5 e5)))
(assert (= a_593 (store a_592 6 e6)))
(assert (= a_594 (store a_593 2 e2)))
(assert (= a_595 (store a_594 20 e20)))
(assert (= a_596 (store a_595 9 e9)))
(assert (= a_597 (store a_596 13 e13)))
(assert (not (= a_577 a_597)))
(check-sat)
(exit)
