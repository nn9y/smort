(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_638 () (Array Int Int))
(declare-fun a_639 () (Array Int Int))
(declare-fun a_640 () (Array Int Int))
(declare-fun a_641 () (Array Int Int))
(declare-fun a_642 () (Array Int Int))
(declare-fun a_643 () (Array Int Int))
(declare-fun a_644 () (Array Int Int))
(declare-fun a_645 () (Array Int Int))
(declare-fun a_646 () (Array Int Int))
(declare-fun a_647 () (Array Int Int))
(declare-fun a_648 () (Array Int Int))
(declare-fun a_649 () (Array Int Int))
(declare-fun a_650 () (Array Int Int))
(declare-fun a_651 () (Array Int Int))
(declare-fun a_652 () (Array Int Int))
(declare-fun a_653 () (Array Int Int))
(declare-fun a_654 () (Array Int Int))
(declare-fun a_655 () (Array Int Int))
(declare-fun a_656 () (Array Int Int))
(declare-fun a_657 () (Array Int Int))
(declare-fun a_658 () (Array Int Int))
(declare-fun a_659 () (Array Int Int))
(declare-fun a_660 () (Array Int Int))
(declare-fun a_661 () (Array Int Int))
(declare-fun a_662 () (Array Int Int))
(declare-fun a_663 () (Array Int Int))
(declare-fun a_664 () (Array Int Int))
(declare-fun a_665 () (Array Int Int))
(declare-fun a_666 () (Array Int Int))
(declare-fun a_667 () (Array Int Int))
(declare-fun a_668 () (Array Int Int))
(declare-fun a_669 () (Array Int Int))
(declare-fun a_670 () (Array Int Int))
(declare-fun a_671 () (Array Int Int))
(declare-fun a_672 () (Array Int Int))
(declare-fun a_673 () (Array Int Int))
(declare-fun a_674 () (Array Int Int))
(declare-fun a_675 () (Array Int Int))
(declare-fun a_676 () (Array Int Int))
(declare-fun a_677 () (Array Int Int))
(declare-fun a1 () (Array Int Int))
(declare-fun e1 () Int)
(declare-fun e10 () Int)
(declare-fun e11 () Int)
(declare-fun e12 () Int)
(declare-fun e13 () Int)
(declare-fun e14 () Int)
(declare-fun e15 () Int)
(declare-fun e16 () Int)
(declare-fun e17 () Int)
(declare-fun e18 () Int)
(declare-fun e19 () Int)
(declare-fun e2 () Int)
(declare-fun e20 () Int)
(declare-fun e3 () Int)
(declare-fun e4 () Int)
(declare-fun e5 () Int)
(declare-fun e6 () Int)
(declare-fun e7 () Int)
(declare-fun e8 () Int)
(declare-fun e9 () Int)
(assert (= a_638 (store a1 1 e1)))
(assert (= a_639 (store a_638 2 e2)))
(assert (= a_640 (store a_639 3 e3)))
(assert (= a_641 (store a_640 4 e4)))
(assert (= a_642 (store a_641 5 e5)))
(assert (= a_643 (store a_642 6 e6)))
(assert (= a_644 (store a_643 7 e7)))
(assert (= a_645 (store a_644 8 e8)))
(assert (= a_646 (store a_645 9 e9)))
(assert (= a_647 (store a_646 10 e10)))
(assert (= a_648 (store a_647 11 e11)))
(assert (= a_649 (store a_648 12 e12)))
(assert (= a_650 (store a_649 13 e13)))
(assert (= a_651 (store a_650 14 e14)))
(assert (= a_652 (store a_651 15 e15)))
(assert (= a_653 (store a_652 16 e16)))
(assert (= a_654 (store a_653 17 e17)))
(assert (= a_655 (store a_654 18 e18)))
(assert (= a_656 (store a_655 19 e19)))
(assert (= a_657 (store a_656 20 e20)))
(assert (= a_658 (store a1 16 e16)))
(assert (= a_659 (store a_658 4 e4)))
(assert (= a_660 (store a_659 7 e7)))
(assert (= a_661 (store a_660 17 e17)))
(assert (= a_662 (store a_661 13 e13)))
(assert (= a_663 (store a_662 8 e8)))
(assert (= a_664 (store a_663 20 e20)))
(assert (= a_665 (store a_664 3 e3)))
(assert (= a_666 (store a_665 6 e6)))
(assert (= a_667 (store a_666 14 e14)))
(assert (= a_668 (store a_667 12 e12)))
(assert (= a_669 (store a_668 5 e5)))
(assert (= a_670 (store a_669 10 e10)))
(assert (= a_671 (store a_670 15 e15)))
(assert (= a_672 (store a_671 1 e1)))
(assert (= a_673 (store a_672 11 e11)))
(assert (= a_674 (store a_673 19 e19)))
(assert (= a_675 (store a_674 2 e2)))
(assert (= a_676 (store a_675 18 e18)))
(assert (= a_677 (store a_676 9 e9)))
(assert (not (= a_657 a_677)))
(check-sat)
(exit)
