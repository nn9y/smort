(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_54 () (Array Int Int))
(declare-fun a_56 () (Array Int Int))
(declare-fun a_58 () (Array Int Int))
(declare-fun a_60 () (Array Int Int))
(declare-fun a_62 () (Array Int Int))
(declare-fun a_64 () (Array Int Int))
(declare-fun a_66 () (Array Int Int))
(declare-fun a_68 () (Array Int Int))
(declare-fun a_69 () (Array Int Int))
(declare-fun a_70 () (Array Int Int))
(declare-fun a_72 () (Array Int Int))
(declare-fun a_74 () (Array Int Int))
(declare-fun a_76 () (Array Int Int))
(declare-fun a_78 () (Array Int Int))
(declare-fun a_80 () (Array Int Int))
(declare-fun a_82 () (Array Int Int))
(declare-fun e_53 () Int)
(declare-fun e_55 () Int)
(declare-fun e_57 () Int)
(declare-fun e_59 () Int)
(declare-fun e_61 () Int)
(declare-fun e_63 () Int)
(declare-fun e_65 () Int)
(declare-fun e_67 () Int)
(declare-fun e_71 () Int)
(declare-fun e_73 () Int)
(declare-fun e_75 () Int)
(declare-fun e_77 () Int)
(declare-fun e_79 () Int)
(declare-fun e_81 () Int)
(declare-fun e_84 () Int)
(declare-fun e_85 () Int)
(declare-fun i_83 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_54 (store a1 i3 e_53)))
(assert (= a_56 (store a_54 i1 e_55)))
(assert (= a_58 (store a_56 i1 e_57)))
(assert (= a_60 (store a_58 i3 e_59)))
(assert (= a_62 (store a_60 i3 e_61)))
(assert (= a_64 (store a_62 i2 e_63)))
(assert (= a_66 (store a_64 i3 e_65)))
(assert (= a_68 (store a_66 i1 e_67)))
(assert (= a_69 (store a1 i1 e_55)))
(assert (= a_70 (store a_69 i3 e_53)))
(assert (= a_72 (store a_70 i1 e_71)))
(assert (= a_74 (store a_72 i3 e_73)))
(assert (= a_76 (store a_74 i3 e_75)))
(assert (= a_78 (store a_76 i2 e_77)))
(assert (= a_80 (store a_78 i1 e_79)))
(assert (= a_82 (store a_80 i3 e_81)))
(assert (= e_53 (select a1 i1)))
(assert (= e_55 (select a1 i3)))
(assert (= e_57 (select a_56 i3)))
(assert (= e_59 (select a_56 i1)))
(assert (= e_61 (select a_60 i2)))
(assert (= e_63 (select a_60 i3)))
(assert (= e_65 (select a_64 i1)))
(assert (= e_67 (select a_64 i3)))
(assert (= e_71 (select a_70 i3)))
(assert (= e_73 (select a_70 i1)))
(assert (= e_75 (select a_74 i2)))
(assert (= e_77 (select a_74 i3)))
(assert (= e_79 (select a_78 i3)))
(assert (= e_81 (select a_78 i1)))
(assert (= e_84 (select a_68 i_83)))
(assert (= e_85 (select a_82 i_83)))
(assert (= i_83 (sk a_68 a_82)))
(assert (not (= e_84 e_85)))
(check-sat)
(exit)
