(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_242 () (Array Int Int))
(declare-fun a_244 () (Array Int Int))
(declare-fun a_246 () (Array Int Int))
(declare-fun a_247 () (Array Int Int))
(declare-fun a_249 () (Array Int Int))
(declare-fun a_251 () (Array Int Int))
(declare-fun a_252 () (Array Int Int))
(declare-fun a_253 () (Array Int Int))
(declare-fun e_241 () Int)
(declare-fun e_243 () Int)
(declare-fun e_245 () Int)
(declare-fun e_248 () Int)
(declare-fun e_250 () Int)
(declare-fun e_255 () Int)
(declare-fun e_256 () Int)
(declare-fun i_254 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_242 (store a1 i1 e_241)))
(assert (= a_244 (store a_242 i2 e_243)))
(assert (= a_246 (store a_244 i0 e_245)))
(assert (= a_247 (store a_246 i0 e_245)))
(assert (= a_249 (store a_247 i0 e_248)))
(assert (= a_251 (store a_249 i1 e_250)))
(assert (= a_252 (store a_247 i1 e_250)))
(assert (= a_253 (store a_252 i0 e_248)))
(assert (= e_241 (select a1 i2)))
(assert (= e_243 (select a1 i1)))
(assert (= e_245 (select a_244 i0)))
(assert (= e_248 (select a_247 i1)))
(assert (= e_250 (select a_247 i0)))
(assert (= e_255 (select a_251 i_254)))
(assert (= e_256 (select a_253 i_254)))
(assert (= i_254 (sk a_251 a_253)))
(assert (not (= e_255 e_256)))
(check-sat)
(exit)
