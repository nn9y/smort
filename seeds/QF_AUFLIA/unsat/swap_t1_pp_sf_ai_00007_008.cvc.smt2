(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_100 () (Array Int Int))
(declare-fun a_102 () (Array Int Int))
(declare-fun a_104 () (Array Int Int))
(declare-fun a_106 () (Array Int Int))
(declare-fun a_108 () (Array Int Int))
(declare-fun a_110 () (Array Int Int))
(declare-fun a_112 () (Array Int Int))
(declare-fun a_114 () (Array Int Int))
(declare-fun a_116 () (Array Int Int))
(declare-fun a_118 () (Array Int Int))
(declare-fun a_120 () (Array Int Int))
(declare-fun a_122 () (Array Int Int))
(declare-fun a_124 () (Array Int Int))
(declare-fun a_125 () (Array Int Int))
(declare-fun a_126 () (Array Int Int))
(declare-fun a_128 () (Array Int Int))
(declare-fun a_130 () (Array Int Int))
(declare-fun a_132 () (Array Int Int))
(declare-fun a_134 () (Array Int Int))
(declare-fun a_136 () (Array Int Int))
(declare-fun a_138 () (Array Int Int))
(declare-fun a_140 () (Array Int Int))
(declare-fun a_142 () (Array Int Int))
(declare-fun a_144 () (Array Int Int))
(declare-fun a_146 () (Array Int Int))
(declare-fun a_98 () (Array Int Int))
(declare-fun e_101 () Int)
(declare-fun e_103 () Int)
(declare-fun e_105 () Int)
(declare-fun e_107 () Int)
(declare-fun e_109 () Int)
(declare-fun e_111 () Int)
(declare-fun e_113 () Int)
(declare-fun e_115 () Int)
(declare-fun e_117 () Int)
(declare-fun e_119 () Int)
(declare-fun e_121 () Int)
(declare-fun e_123 () Int)
(declare-fun e_127 () Int)
(declare-fun e_129 () Int)
(declare-fun e_131 () Int)
(declare-fun e_133 () Int)
(declare-fun e_135 () Int)
(declare-fun e_137 () Int)
(declare-fun e_139 () Int)
(declare-fun e_141 () Int)
(declare-fun e_143 () Int)
(declare-fun e_145 () Int)
(declare-fun e_148 () Int)
(declare-fun e_149 () Int)
(declare-fun e_97 () Int)
(declare-fun e_99 () Int)
(declare-fun i_147 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_100 (store a_98 i4 e_99)))
(assert (= a_102 (store a_100 i2 e_101)))
(assert (= a_104 (store a_102 i5 e_103)))
(assert (= a_106 (store a_104 i4 e_105)))
(assert (= a_108 (store a_106 i2 e_107)))
(assert (= a_110 (store a_108 i6 e_109)))
(assert (= a_112 (store a_110 i0 e_111)))
(assert (= a_114 (store a_112 i5 e_113)))
(assert (= a_116 (store a_114 i3 e_115)))
(assert (= a_118 (store a_116 i6 e_117)))
(assert (= a_120 (store a_118 i5 e_119)))
(assert (= a_122 (store a_120 i3 e_121)))
(assert (= a_124 (store a_122 i4 e_123)))
(assert (= a_125 (store a_100 i5 e_103)))
(assert (= a_126 (store a_125 i2 e_101)))
(assert (= a_128 (store a_126 i2 e_127)))
(assert (= a_130 (store a_128 i4 e_129)))
(assert (= a_132 (store a_130 i0 e_131)))
(assert (= a_134 (store a_132 i6 e_133)))
(assert (= a_136 (store a_134 i5 e_135)))
(assert (= a_138 (store a_136 i3 e_137)))
(assert (= a_140 (store a_138 i6 e_139)))
(assert (= a_142 (store a_140 i5 e_141)))
(assert (= a_144 (store a_142 i3 e_143)))
(assert (= a_146 (store a_144 i4 e_145)))
(assert (= a_98 (store a1 i1 e_97)))
(assert (= e_101 (select a_100 i5)))
(assert (= e_103 (select a_100 i2)))
(assert (= e_105 (select a_104 i2)))
(assert (= e_107 (select a_104 i4)))
(assert (= e_109 (select a_108 i0)))
(assert (= e_111 (select a_108 i6)))
(assert (= e_113 (select a_112 i3)))
(assert (= e_115 (select a_112 i5)))
(assert (= e_117 (select a_116 i5)))
(assert (= e_119 (select a_116 i6)))
(assert (= e_121 (select a_120 i4)))
(assert (= e_123 (select a_120 i3)))
(assert (= e_127 (select a_126 i4)))
(assert (= e_129 (select a_126 i2)))
(assert (= e_131 (select a_130 i6)))
(assert (= e_133 (select a_130 i0)))
(assert (= e_135 (select a_134 i3)))
(assert (= e_137 (select a_134 i5)))
(assert (= e_139 (select a_138 i5)))
(assert (= e_141 (select a_138 i6)))
(assert (= e_143 (select a_142 i4)))
(assert (= e_145 (select a_142 i3)))
(assert (= e_148 (select a_124 i_147)))
(assert (= e_149 (select a_146 i_147)))
(assert (= e_97 (select a1 i4)))
(assert (= e_99 (select a1 i1)))
(assert (= i_147 (sk a_124 a_146)))
(assert (not (= e_148 e_149)))
(check-sat)
(exit)
