(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_478 () (Array Int Int))
(declare-fun a_479 () (Array Int Int))
(declare-fun a_480 () (Array Int Int))
(declare-fun a_481 () (Array Int Int))
(declare-fun a_482 () (Array Int Int))
(declare-fun a_483 () (Array Int Int))
(declare-fun a_484 () (Array Int Int))
(declare-fun a_485 () (Array Int Int))
(declare-fun a_486 () (Array Int Int))
(declare-fun a_487 () (Array Int Int))
(declare-fun a_488 () (Array Int Int))
(declare-fun a_489 () (Array Int Int))
(declare-fun a_490 () (Array Int Int))
(declare-fun a_491 () (Array Int Int))
(declare-fun a_492 () (Array Int Int))
(declare-fun a_493 () (Array Int Int))
(declare-fun a_494 () (Array Int Int))
(declare-fun a_495 () (Array Int Int))
(declare-fun a_496 () (Array Int Int))
(declare-fun a_497 () (Array Int Int))
(declare-fun a_498 () (Array Int Int))
(declare-fun a_499 () (Array Int Int))
(declare-fun a_500 () (Array Int Int))
(declare-fun a_501 () (Array Int Int))
(declare-fun a_502 () (Array Int Int))
(declare-fun a_503 () (Array Int Int))
(declare-fun a_504 () (Array Int Int))
(declare-fun a_505 () (Array Int Int))
(declare-fun a_506 () (Array Int Int))
(declare-fun a_507 () (Array Int Int))
(declare-fun a_508 () (Array Int Int))
(declare-fun a_509 () (Array Int Int))
(declare-fun a_510 () (Array Int Int))
(declare-fun a_511 () (Array Int Int))
(declare-fun a_512 () (Array Int Int))
(declare-fun a_513 () (Array Int Int))
(declare-fun a_514 () (Array Int Int))
(declare-fun a_515 () (Array Int Int))
(declare-fun a_516 () (Array Int Int))
(declare-fun a_517 () (Array Int Int))
(declare-fun a1 () (Array Int Int))
(declare-fun e1 () Int)
(declare-fun e10 () Int)
(declare-fun e11 () Int)
(declare-fun e12 () Int)
(declare-fun e13 () Int)
(declare-fun e14 () Int)
(declare-fun e15 () Int)
(declare-fun e16 () Int)
(declare-fun e17 () Int)
(declare-fun e18 () Int)
(declare-fun e19 () Int)
(declare-fun e2 () Int)
(declare-fun e20 () Int)
(declare-fun e3 () Int)
(declare-fun e4 () Int)
(declare-fun e5 () Int)
(declare-fun e6 () Int)
(declare-fun e7 () Int)
(declare-fun e8 () Int)
(declare-fun e9 () Int)
(assert (= a_478 (store a1 1 e1)))
(assert (= a_479 (store a_478 2 e2)))
(assert (= a_480 (store a_479 3 e3)))
(assert (= a_481 (store a_480 4 e4)))
(assert (= a_482 (store a_481 5 e5)))
(assert (= a_483 (store a_482 6 e6)))
(assert (= a_484 (store a_483 7 e7)))
(assert (= a_485 (store a_484 8 e8)))
(assert (= a_486 (store a_485 9 e9)))
(assert (= a_487 (store a_486 10 e10)))
(assert (= a_488 (store a_487 11 e11)))
(assert (= a_489 (store a_488 12 e12)))
(assert (= a_490 (store a_489 13 e13)))
(assert (= a_491 (store a_490 14 e14)))
(assert (= a_492 (store a_491 15 e15)))
(assert (= a_493 (store a_492 16 e16)))
(assert (= a_494 (store a_493 17 e17)))
(assert (= a_495 (store a_494 18 e18)))
(assert (= a_496 (store a_495 19 e19)))
(assert (= a_497 (store a_496 20 e20)))
(assert (= a_498 (store a1 6 e6)))
(assert (= a_499 (store a_498 16 e16)))
(assert (= a_500 (store a_499 14 e14)))
(assert (= a_501 (store a_500 13 e13)))
(assert (= a_502 (store a_501 2 e2)))
(assert (= a_503 (store a_502 18 e18)))
(assert (= a_504 (store a_503 19 e19)))
(assert (= a_505 (store a_504 12 e12)))
(assert (= a_506 (store a_505 11 e11)))
(assert (= a_507 (store a_506 7 e7)))
(assert (= a_508 (store a_507 4 e4)))
(assert (= a_509 (store a_508 9 e9)))
(assert (= a_510 (store a_509 5 e5)))
(assert (= a_511 (store a_510 20 e20)))
(assert (= a_512 (store a_511 1 e1)))
(assert (= a_513 (store a_512 10 e10)))
(assert (= a_514 (store a_513 15 e15)))
(assert (= a_515 (store a_514 17 e17)))
(assert (= a_516 (store a_515 8 e8)))
(assert (= a_517 (store a_516 3 e3)))
(assert (not (= a_497 a_517)))
(check-sat)
(exit)
