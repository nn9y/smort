(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_440 () (Array Int Int))
(declare-fun a_441 () (Array Int Int))
(declare-fun a_443 () (Array Int Int))
(declare-fun a_445 () (Array Int Int))
(declare-fun a_447 () (Array Int Int))
(declare-fun a_448 () (Array Int Int))
(declare-fun a_450 () (Array Int Int))
(declare-fun a_452 () (Array Int Int))
(declare-fun a_453 () (Array Int Int))
(declare-fun a_454 () (Array Int Int))
(declare-fun a_456 () (Array Int Int))
(declare-fun a_457 () (Array Int Int))
(declare-fun a_459 () (Array Int Int))
(declare-fun a_461 () (Array Int Int))
(declare-fun e_439 () Int)
(declare-fun e_442 () Int)
(declare-fun e_444 () Int)
(declare-fun e_446 () Int)
(declare-fun e_449 () Int)
(declare-fun e_451 () Int)
(declare-fun e_455 () Int)
(declare-fun e_458 () Int)
(declare-fun e_460 () Int)
(declare-fun e_463 () Int)
(declare-fun e_464 () Int)
(declare-fun i_462 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_440 (store a1 i1 e_439)))
(assert (= a_441 (store a_440 i1 e_439)))
(assert (= a_443 (store a_441 i2 e_442)))
(assert (= a_445 (store a_443 i0 e_444)))
(assert (= a_447 (store a_445 i3 e_446)))
(assert (= a_448 (store a_447 i3 e_446)))
(assert (= a_450 (store a_448 i1 e_449)))
(assert (= a_452 (store a_450 i2 e_451)))
(assert (= a_453 (store a_441 i0 e_444)))
(assert (= a_454 (store a_453 i2 e_442)))
(assert (= a_456 (store a_454 i3 e_455)))
(assert (= a_457 (store a_456 i3 e_455)))
(assert (= a_459 (store a_457 i1 e_458)))
(assert (= a_461 (store a_459 i2 e_460)))
(assert (= e_439 (select a1 i1)))
(assert (= e_442 (select a_441 i0)))
(assert (= e_444 (select a_441 i2)))
(assert (= e_446 (select a_445 i3)))
(assert (= e_449 (select a_448 i2)))
(assert (= e_451 (select a_448 i1)))
(assert (= e_455 (select a_454 i3)))
(assert (= e_458 (select a_457 i2)))
(assert (= e_460 (select a_457 i1)))
(assert (= e_463 (select a_452 i_462)))
(assert (= e_464 (select a_461 i_462)))
(assert (= i_462 (sk a_452 a_461)))
(assert (not (= e_463 e_464)))
(check-sat)
(exit)
