(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_13 () (Array Int Int))
(declare-fun a_15 () (Array Int Int))
(declare-fun a_17 () (Array Int Int))
(declare-fun a_18 () (Array Int Int))
(declare-fun a_19 () (Array Int Int))
(declare-fun a_20 () (Array Int Int))
(declare-fun a_22 () (Array Int Int))
(declare-fun a_23 () (Array Int Int))
(declare-fun e_12 () Int)
(declare-fun e_14 () Int)
(declare-fun e_16 () Int)
(declare-fun e_21 () Int)
(declare-fun e_25 () Int)
(declare-fun e_26 () Int)
(declare-fun i_24 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_13 (store a1 i0 e_12)))
(assert (= a_15 (store a_13 i1 e_14)))
(assert (= a_17 (store a_15 i1 e_16)))
(assert (= a_18 (store a_17 i1 e_16)))
(assert (= a_19 (store a1 i1 e_14)))
(assert (= a_20 (store a_19 i0 e_12)))
(assert (= a_22 (store a_20 i1 e_21)))
(assert (= a_23 (store a_22 i1 e_21)))
(assert (= e_12 (select a1 i1)))
(assert (= e_14 (select a1 i0)))
(assert (= e_16 (select a_15 i1)))
(assert (= e_21 (select a_20 i1)))
(assert (= e_25 (select a_18 i_24)))
(assert (= e_26 (select a_23 i_24)))
(assert (= i_24 (sk a_18 a_23)))
(assert (not (= e_25 e_26)))
(check-sat)
(exit)
