(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_561 () (Array Int Int))
(declare-fun a_563 () (Array Int Int))
(declare-fun a_565 () (Array Int Int))
(declare-fun a_567 () (Array Int Int))
(declare-fun a_569 () (Array Int Int))
(declare-fun a_571 () (Array Int Int))
(declare-fun a_573 () (Array Int Int))
(declare-fun a_574 () (Array Int Int))
(declare-fun a_576 () (Array Int Int))
(declare-fun a_578 () (Array Int Int))
(declare-fun a_580 () (Array Int Int))
(declare-fun a_582 () (Array Int Int))
(declare-fun a_584 () (Array Int Int))
(declare-fun a_586 () (Array Int Int))
(declare-fun a_587 () (Array Int Int))
(declare-fun a_588 () (Array Int Int))
(declare-fun a_590 () (Array Int Int))
(declare-fun a_592 () (Array Int Int))
(declare-fun a_594 () (Array Int Int))
(declare-fun a_595 () (Array Int Int))
(declare-fun a_597 () (Array Int Int))
(declare-fun a_599 () (Array Int Int))
(declare-fun a_601 () (Array Int Int))
(declare-fun a_603 () (Array Int Int))
(declare-fun a_605 () (Array Int Int))
(declare-fun a_607 () (Array Int Int))
(declare-fun e_560 () Int)
(declare-fun e_562 () Int)
(declare-fun e_564 () Int)
(declare-fun e_566 () Int)
(declare-fun e_568 () Int)
(declare-fun e_570 () Int)
(declare-fun e_572 () Int)
(declare-fun e_575 () Int)
(declare-fun e_577 () Int)
(declare-fun e_579 () Int)
(declare-fun e_581 () Int)
(declare-fun e_583 () Int)
(declare-fun e_585 () Int)
(declare-fun e_589 () Int)
(declare-fun e_591 () Int)
(declare-fun e_593 () Int)
(declare-fun e_596 () Int)
(declare-fun e_598 () Int)
(declare-fun e_600 () Int)
(declare-fun e_602 () Int)
(declare-fun e_604 () Int)
(declare-fun e_606 () Int)
(declare-fun e_609 () Int)
(declare-fun e_610 () Int)
(declare-fun i_608 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_561 (store a1 i6 e_560)))
(assert (= a_563 (store a_561 i0 e_562)))
(assert (= a_565 (store a_563 i5 e_564)))
(assert (= a_567 (store a_565 i0 e_566)))
(assert (= a_569 (store a_567 i6 e_568)))
(assert (= a_571 (store a_569 i3 e_570)))
(assert (= a_573 (store a_571 i2 e_572)))
(assert (= a_574 (store a_573 i2 e_572)))
(assert (= a_576 (store a_574 i5 e_575)))
(assert (= a_578 (store a_576 i0 e_577)))
(assert (= a_580 (store a_578 i0 e_579)))
(assert (= a_582 (store a_580 i2 e_581)))
(assert (= a_584 (store a_582 i3 e_583)))
(assert (= a_586 (store a_584 i4 e_585)))
(assert (= a_587 (store a_563 i0 e_566)))
(assert (= a_588 (store a_587 i5 e_564)))
(assert (= a_590 (store a_588 i6 e_589)))
(assert (= a_592 (store a_590 i3 e_591)))
(assert (= a_594 (store a_592 i2 e_593)))
(assert (= a_595 (store a_594 i2 e_593)))
(assert (= a_597 (store a_595 i0 e_596)))
(assert (= a_599 (store a_597 i5 e_598)))
(assert (= a_601 (store a_599 i0 e_600)))
(assert (= a_603 (store a_601 i2 e_602)))
(assert (= a_605 (store a_603 i3 e_604)))
(assert (= a_607 (store a_605 i4 e_606)))
(assert (= e_560 (select a1 i0)))
(assert (= e_562 (select a1 i6)))
(assert (= e_564 (select a_563 i0)))
(assert (= e_566 (select a_563 i5)))
(assert (= e_568 (select a_567 i3)))
(assert (= e_570 (select a_567 i6)))
(assert (= e_572 (select a_571 i2)))
(assert (= e_575 (select a_574 i0)))
(assert (= e_577 (select a_574 i5)))
(assert (= e_579 (select a_578 i2)))
(assert (= e_581 (select a_578 i0)))
(assert (= e_583 (select a_582 i4)))
(assert (= e_585 (select a_582 i3)))
(assert (= e_589 (select a_588 i3)))
(assert (= e_591 (select a_588 i6)))
(assert (= e_593 (select a_592 i2)))
(assert (= e_596 (select a_595 i5)))
(assert (= e_598 (select a_595 i0)))
(assert (= e_600 (select a_599 i2)))
(assert (= e_602 (select a_599 i0)))
(assert (= e_604 (select a_603 i4)))
(assert (= e_606 (select a_603 i3)))
(assert (= e_609 (select a_586 i_608)))
(assert (= e_610 (select a_607 i_608)))
(assert (= i_608 (sk a_586 a_607)))
(assert (not (= e_609 e_610)))
(check-sat)
(exit)
