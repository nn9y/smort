(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun a_454 () (Array Int Int))
(declare-fun a_456 () (Array Int Int))
(declare-fun a_458 () (Array Int Int))
(declare-fun a_460 () (Array Int Int))
(declare-fun a_462 () (Array Int Int))
(declare-fun a_463 () (Array Int Int))
(declare-fun a_465 () (Array Int Int))
(declare-fun a_466 () (Array Int Int))
(declare-fun a_468 () (Array Int Int))
(declare-fun a_470 () (Array Int Int))
(declare-fun a_472 () (Array Int Int))
(declare-fun a_474 () (Array Int Int))
(declare-fun a_476 () (Array Int Int))
(declare-fun a_478 () (Array Int Int))
(declare-fun a_480 () (Array Int Int))
(declare-fun a_482 () (Array Int Int))
(declare-fun a_484 () (Array Int Int))
(declare-fun a_486 () (Array Int Int))
(declare-fun a_488 () (Array Int Int))
(declare-fun a_490 () (Array Int Int))
(declare-fun a_491 () (Array Int Int))
(declare-fun a_492 () (Array Int Int))
(declare-fun a_494 () (Array Int Int))
(declare-fun a_496 () (Array Int Int))
(declare-fun a_498 () (Array Int Int))
(declare-fun a_500 () (Array Int Int))
(declare-fun a_502 () (Array Int Int))
(declare-fun a_504 () (Array Int Int))
(declare-fun a_506 () (Array Int Int))
(declare-fun a_508 () (Array Int Int))
(declare-fun e_453 () Int)
(declare-fun e_455 () Int)
(declare-fun e_457 () Int)
(declare-fun e_459 () Int)
(declare-fun e_461 () Int)
(declare-fun e_464 () Int)
(declare-fun e_467 () Int)
(declare-fun e_469 () Int)
(declare-fun e_471 () Int)
(declare-fun e_473 () Int)
(declare-fun e_475 () Int)
(declare-fun e_477 () Int)
(declare-fun e_479 () Int)
(declare-fun e_481 () Int)
(declare-fun e_483 () Int)
(declare-fun e_485 () Int)
(declare-fun e_487 () Int)
(declare-fun e_489 () Int)
(declare-fun e_493 () Int)
(declare-fun e_495 () Int)
(declare-fun e_497 () Int)
(declare-fun e_499 () Int)
(declare-fun e_501 () Int)
(declare-fun e_503 () Int)
(declare-fun e_505 () Int)
(declare-fun e_507 () Int)
(declare-fun e_510 () Int)
(declare-fun e_511 () Int)
(declare-fun i_509 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_454 (store a1 i4 e_453)))
(assert (= a_456 (store a_454 i7 e_455)))
(assert (= a_458 (store a_456 i0 e_457)))
(assert (= a_460 (store a_458 i3 e_459)))
(assert (= a_462 (store a_460 i8 e_461)))
(assert (= a_463 (store a_462 i8 e_461)))
(assert (= a_465 (store a_463 i7 e_464)))
(assert (= a_466 (store a_465 i7 e_464)))
(assert (= a_468 (store a_466 i8 e_467)))
(assert (= a_470 (store a_468 i2 e_469)))
(assert (= a_472 (store a_470 i7 e_471)))
(assert (= a_474 (store a_472 i6 e_473)))
(assert (= a_476 (store a_474 i7 e_475)))
(assert (= a_478 (store a_476 i2 e_477)))
(assert (= a_480 (store a_478 i4 e_479)))
(assert (= a_482 (store a_480 i0 e_481)))
(assert (= a_484 (store a_482 i6 e_483)))
(assert (= a_486 (store a_484 i7 e_485)))
(assert (= a_488 (store a_486 i2 e_487)))
(assert (= a_490 (store a_488 i6 e_489)))
(assert (= a_491 (store a_470 i6 e_473)))
(assert (= a_492 (store a_491 i7 e_471)))
(assert (= a_494 (store a_492 i2 e_493)))
(assert (= a_496 (store a_494 i7 e_495)))
(assert (= a_498 (store a_496 i0 e_497)))
(assert (= a_500 (store a_498 i4 e_499)))
(assert (= a_502 (store a_500 i7 e_501)))
(assert (= a_504 (store a_502 i6 e_503)))
(assert (= a_506 (store a_504 i6 e_505)))
(assert (= a_508 (store a_506 i2 e_507)))
(assert (= e_453 (select a1 i7)))
(assert (= e_455 (select a1 i4)))
(assert (= e_457 (select a_456 i3)))
(assert (= e_459 (select a_456 i0)))
(assert (= e_461 (select a_460 i8)))
(assert (= e_464 (select a_463 i7)))
(assert (= e_467 (select a_466 i2)))
(assert (= e_469 (select a_466 i8)))
(assert (= e_471 (select a_470 i6)))
(assert (= e_473 (select a_470 i7)))
(assert (= e_475 (select a_474 i2)))
(assert (= e_477 (select a_474 i7)))
(assert (= e_479 (select a_478 i0)))
(assert (= e_481 (select a_478 i4)))
(assert (= e_483 (select a_482 i7)))
(assert (= e_485 (select a_482 i6)))
(assert (= e_487 (select a_486 i6)))
(assert (= e_489 (select a_486 i2)))
(assert (= e_493 (select a_492 i7)))
(assert (= e_495 (select a_492 i2)))
(assert (= e_497 (select a_496 i4)))
(assert (= e_499 (select a_496 i0)))
(assert (= e_501 (select a_500 i6)))
(assert (= e_503 (select a_500 i7)))
(assert (= e_505 (select a_504 i2)))
(assert (= e_507 (select a_504 i6)))
(assert (= e_510 (select a_490 i_509)))
(assert (= e_511 (select a_508 i_509)))
(assert (= i_509 (sk a_490 a_508)))
(assert (not (= e_510 e_511)))
(check-sat)
(exit)
