(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_158 () (Array Int Int))
(declare-fun a_159 () (Array Int Int))
(declare-fun a_161 () (Array Int Int))
(declare-fun a_162 () (Array Int Int))
(declare-fun a_164 () (Array Int Int))
(declare-fun a_166 () (Array Int Int))
(declare-fun a_167 () (Array Int Int))
(declare-fun a_168 () (Array Int Int))
(declare-fun e_157 () Int)
(declare-fun e_160 () Int)
(declare-fun e_163 () Int)
(declare-fun e_165 () Int)
(declare-fun e_170 () Int)
(declare-fun e_171 () Int)
(declare-fun i_169 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_158 (store a1 i1 e_157)))
(assert (= a_159 (store a_158 i1 e_157)))
(assert (= a_161 (store a_159 i0 e_160)))
(assert (= a_162 (store a_161 i0 e_160)))
(assert (= a_164 (store a_162 i2 e_163)))
(assert (= a_166 (store a_164 i0 e_165)))
(assert (= a_167 (store a_162 i0 e_163)))
(assert (= a_168 (store a_167 i0 e_163)))
(assert (= e_157 (select a1 i1)))
(assert (= e_160 (select a_159 i0)))
(assert (= e_163 (select a_162 i0)))
(assert (= e_165 (select a_162 i2)))
(assert (= e_170 (select a_166 i_169)))
(assert (= e_171 (select a_168 i_169)))
(assert (= i_169 (sk a_166 a_168)))
(assert (not (= e_170 e_171)))
(check-sat)
(exit)
