(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_706 () (Array Int Int))
(declare-fun a_708 () (Array Int Int))
(declare-fun a_710 () (Array Int Int))
(declare-fun a_712 () (Array Int Int))
(declare-fun a_714 () (Array Int Int))
(declare-fun a_716 () (Array Int Int))
(declare-fun a_718 () (Array Int Int))
(declare-fun a_719 () (Array Int Int))
(declare-fun a_721 () (Array Int Int))
(declare-fun a_723 () (Array Int Int))
(declare-fun a_725 () (Array Int Int))
(declare-fun a_727 () (Array Int Int))
(declare-fun a_729 () (Array Int Int))
(declare-fun a_731 () (Array Int Int))
(declare-fun a_733 () (Array Int Int))
(declare-fun a_735 () (Array Int Int))
(declare-fun a_736 () (Array Int Int))
(declare-fun a_738 () (Array Int Int))
(declare-fun e_705 () Int)
(declare-fun e_707 () Int)
(declare-fun e_709 () Int)
(declare-fun e_711 () Int)
(declare-fun e_713 () Int)
(declare-fun e_715 () Int)
(declare-fun e_717 () Int)
(declare-fun e_720 () Int)
(declare-fun e_722 () Int)
(declare-fun e_724 () Int)
(declare-fun e_726 () Int)
(declare-fun e_728 () Int)
(declare-fun e_730 () Int)
(declare-fun e_732 () Int)
(declare-fun e_734 () Int)
(declare-fun e_737 () Int)
(declare-fun e_740 () Int)
(declare-fun e_741 () Int)
(declare-fun i_739 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_706 (store a1 i7 e_705)))
(assert (= a_708 (store a_706 i2 e_707)))
(assert (= a_710 (store a_708 i2 e_709)))
(assert (= a_712 (store a_710 i3 e_711)))
(assert (= a_714 (store a_712 i3 e_713)))
(assert (= a_716 (store a_714 i1 e_715)))
(assert (= a_718 (store a_716 i6 e_717)))
(assert (= a_719 (store a_718 i6 e_717)))
(assert (= a_721 (store a_719 i6 e_720)))
(assert (= a_723 (store a_721 i7 e_722)))
(assert (= a_725 (store a_723 i2 e_724)))
(assert (= a_727 (store a_725 i3 e_726)))
(assert (= a_729 (store a_727 i4 e_728)))
(assert (= a_731 (store a_729 i0 e_730)))
(assert (= a_733 (store a_731 i5 e_732)))
(assert (= a_735 (store a_733 i7 e_734)))
(assert (= a_736 (store a_731 i6 e_732)))
(assert (= a_738 (store a_736 i7 e_737)))
(assert (= e_705 (select a1 i2)))
(assert (= e_707 (select a1 i7)))
(assert (= e_709 (select a_708 i3)))
(assert (= e_711 (select a_708 i2)))
(assert (= e_713 (select a_712 i1)))
(assert (= e_715 (select a_712 i3)))
(assert (= e_717 (select a_716 i6)))
(assert (= e_720 (select a_719 i7)))
(assert (= e_722 (select a_719 i6)))
(assert (= e_724 (select a_723 i3)))
(assert (= e_726 (select a_723 i2)))
(assert (= e_728 (select a_727 i0)))
(assert (= e_730 (select a_727 i4)))
(assert (= e_732 (select a_731 i7)))
(assert (= e_734 (select a_731 i5)))
(assert (= e_737 (select a_731 i6)))
(assert (= e_740 (select a_735 i_739)))
(assert (= e_741 (select a_738 i_739)))
(assert (= i_739 (sk a_735 a_738)))
(assert (not (= e_740 e_741)))
(check-sat)
(exit)
