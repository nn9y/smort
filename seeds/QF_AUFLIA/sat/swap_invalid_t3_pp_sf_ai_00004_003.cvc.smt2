(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_342 () (Array Int Int))
(declare-fun a_343 () (Array Int Int))
(declare-fun a_345 () (Array Int Int))
(declare-fun a_347 () (Array Int Int))
(declare-fun a_349 () (Array Int Int))
(declare-fun a_350 () (Array Int Int))
(declare-fun a_352 () (Array Int Int))
(declare-fun a_354 () (Array Int Int))
(declare-fun a_355 () (Array Int Int))
(declare-fun a_356 () (Array Int Int))
(declare-fun a_358 () (Array Int Int))
(declare-fun a_359 () (Array Int Int))
(declare-fun a_361 () (Array Int Int))
(declare-fun a_362 () (Array Int Int))
(declare-fun e_341 () Int)
(declare-fun e_344 () Int)
(declare-fun e_346 () Int)
(declare-fun e_348 () Int)
(declare-fun e_351 () Int)
(declare-fun e_353 () Int)
(declare-fun e_357 () Int)
(declare-fun e_360 () Int)
(declare-fun e_364 () Int)
(declare-fun e_365 () Int)
(declare-fun i_363 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i3 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_342 (store a1 i3 e_341)))
(assert (= a_343 (store a_342 i3 e_341)))
(assert (= a_345 (store a_343 i0 e_344)))
(assert (= a_347 (store a_345 i3 e_346)))
(assert (= a_349 (store a_347 i3 e_348)))
(assert (= a_350 (store a_349 i3 e_348)))
(assert (= a_352 (store a_350 i0 e_351)))
(assert (= a_354 (store a_352 i1 e_353)))
(assert (= a_355 (store a_343 i3 e_346)))
(assert (= a_356 (store a_355 i0 e_344)))
(assert (= a_358 (store a_356 i3 e_357)))
(assert (= a_359 (store a_358 i3 e_357)))
(assert (= a_361 (store a_359 i1 e_360)))
(assert (= a_362 (store a_361 i1 e_360)))
(assert (= e_341 (select a1 i3)))
(assert (= e_344 (select a_343 i3)))
(assert (= e_346 (select a_343 i0)))
(assert (= e_348 (select a_347 i3)))
(assert (= e_351 (select a_350 i1)))
(assert (= e_353 (select a_350 i0)))
(assert (= e_357 (select a_356 i3)))
(assert (= e_360 (select a_359 i1)))
(assert (= e_364 (select a_354 i_363)))
(assert (= e_365 (select a_362 i_363)))
(assert (= i_363 (sk a_354 a_362)))
(assert (not (= e_364 e_365)))
(check-sat)
(exit)
