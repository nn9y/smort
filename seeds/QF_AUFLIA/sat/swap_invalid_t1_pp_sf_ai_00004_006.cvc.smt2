(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_169 () (Array Int Int))
(declare-fun a_171 () (Array Int Int))
(declare-fun a_173 () (Array Int Int))
(declare-fun a_175 () (Array Int Int))
(declare-fun a_177 () (Array Int Int))
(declare-fun a_178 () (Array Int Int))
(declare-fun a_180 () (Array Int Int))
(declare-fun a_182 () (Array Int Int))
(declare-fun a_183 () (Array Int Int))
(declare-fun a_184 () (Array Int Int))
(declare-fun a_186 () (Array Int Int))
(declare-fun a_187 () (Array Int Int))
(declare-fun a_189 () (Array Int Int))
(declare-fun a_191 () (Array Int Int))
(declare-fun e_168 () Int)
(declare-fun e_170 () Int)
(declare-fun e_172 () Int)
(declare-fun e_174 () Int)
(declare-fun e_176 () Int)
(declare-fun e_179 () Int)
(declare-fun e_181 () Int)
(declare-fun e_185 () Int)
(declare-fun e_188 () Int)
(declare-fun e_190 () Int)
(declare-fun e_193 () Int)
(declare-fun e_194 () Int)
(declare-fun i_192 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_169 (store a1 i3 e_168)))
(assert (= a_171 (store a_169 i2 e_170)))
(assert (= a_173 (store a_171 i0 e_172)))
(assert (= a_175 (store a_173 i2 e_174)))
(assert (= a_177 (store a_175 i3 e_176)))
(assert (= a_178 (store a_177 i3 e_176)))
(assert (= a_180 (store a_178 i1 e_179)))
(assert (= a_182 (store a_180 i3 e_181)))
(assert (= a_183 (store a_171 i2 e_174)))
(assert (= a_184 (store a_183 i0 e_172)))
(assert (= a_186 (store a_184 i3 e_185)))
(assert (= a_187 (store a_186 i3 e_185)))
(assert (= a_189 (store a_187 i3 e_188)))
(assert (= a_191 (store a_189 i2 e_190)))
(assert (= e_168 (select a1 i2)))
(assert (= e_170 (select a1 i3)))
(assert (= e_172 (select a_171 i2)))
(assert (= e_174 (select a_171 i0)))
(assert (= e_176 (select a_175 i3)))
(assert (= e_179 (select a_178 i3)))
(assert (= e_181 (select a_178 i1)))
(assert (= e_185 (select a_184 i3)))
(assert (= e_188 (select a_187 i2)))
(assert (= e_190 (select a_187 i3)))
(assert (= e_193 (select a_182 i_192)))
(assert (= e_194 (select a_191 i_192)))
(assert (= i_192 (sk a_182 a_191)))
(assert (not (= e_193 e_194)))
(check-sat)
(exit)
