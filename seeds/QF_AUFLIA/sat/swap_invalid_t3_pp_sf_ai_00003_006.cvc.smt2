(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_100 () (Array Int Int))
(declare-fun a_101 () (Array Int Int))
(declare-fun a_103 () (Array Int Int))
(declare-fun a_104 () (Array Int Int))
(declare-fun a_105 () (Array Int Int))
(declare-fun a_106 () (Array Int Int))
(declare-fun a_108 () (Array Int Int))
(declare-fun a_109 () (Array Int Int))
(declare-fun a_111 () (Array Int Int))
(declare-fun a_113 () (Array Int Int))
(declare-fun a_96 () (Array Int Int))
(declare-fun a_98 () (Array Int Int))
(declare-fun e_102 () Int)
(declare-fun e_107 () Int)
(declare-fun e_110 () Int)
(declare-fun e_112 () Int)
(declare-fun e_115 () Int)
(declare-fun e_116 () Int)
(declare-fun e_95 () Int)
(declare-fun e_97 () Int)
(declare-fun e_99 () Int)
(declare-fun i_114 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_100 (store a_98 i0 e_99)))
(assert (= a_101 (store a_100 i0 e_99)))
(assert (= a_103 (store a_101 i2 e_102)))
(assert (= a_104 (store a_103 i2 e_102)))
(assert (= a_105 (store a1 i1 e_97)))
(assert (= a_106 (store a_105 i0 e_95)))
(assert (= a_108 (store a_106 i0 e_107)))
(assert (= a_109 (store a_108 i0 e_107)))
(assert (= a_111 (store a_109 i2 e_110)))
(assert (= a_113 (store a_111 i0 e_112)))
(assert (= a_96 (store a1 i0 e_95)))
(assert (= a_98 (store a_96 i1 e_97)))
(assert (= e_102 (select a_101 i2)))
(assert (= e_107 (select a_106 i0)))
(assert (= e_110 (select a_109 i0)))
(assert (= e_112 (select a_109 i2)))
(assert (= e_115 (select a_104 i_114)))
(assert (= e_116 (select a_113 i_114)))
(assert (= e_95 (select a1 i1)))
(assert (= e_97 (select a1 i0)))
(assert (= e_99 (select a_98 i0)))
(assert (= i_114 (sk a_104 a_113)))
(assert (not (= e_115 e_116)))
(check-sat)
(exit)
