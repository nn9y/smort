(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_74 () (Array Int Int))
(declare-fun a_75 () (Array Int Int))
(declare-fun a_77 () (Array Int Int))
(declare-fun a_78 () (Array Int Int))
(declare-fun a_80 () (Array Int Int))
(declare-fun a_82 () (Array Int Int))
(declare-fun a_84 () (Array Int Int))
(declare-fun a_85 () (Array Int Int))
(declare-fun a_87 () (Array Int Int))
(declare-fun a_89 () (Array Int Int))
(declare-fun a_90 () (Array Int Int))
(declare-fun a_91 () (Array Int Int))
(declare-fun e_73 () Int)
(declare-fun e_76 () Int)
(declare-fun e_79 () Int)
(declare-fun e_81 () Int)
(declare-fun e_83 () Int)
(declare-fun e_86 () Int)
(declare-fun e_88 () Int)
(declare-fun e_93 () Int)
(declare-fun e_94 () Int)
(declare-fun i_92 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i4 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_74 (store a1 i2 e_73)))
(assert (= a_75 (store a_74 i2 e_73)))
(assert (= a_77 (store a_75 i4 e_76)))
(assert (= a_78 (store a_77 i4 e_76)))
(assert (= a_80 (store a_78 i4 e_79)))
(assert (= a_82 (store a_80 i1 e_81)))
(assert (= a_84 (store a_82 i2 e_83)))
(assert (= a_85 (store a_84 i2 e_83)))
(assert (= a_87 (store a_85 i1 e_86)))
(assert (= a_89 (store a_87 i2 e_88)))
(assert (= a_90 (store a_85 i2 e_86)))
(assert (= a_91 (store a_90 i2 e_86)))
(assert (= e_73 (select a1 i2)))
(assert (= e_76 (select a_75 i4)))
(assert (= e_79 (select a_78 i1)))
(assert (= e_81 (select a_78 i4)))
(assert (= e_83 (select a_82 i2)))
(assert (= e_86 (select a_85 i2)))
(assert (= e_88 (select a_85 i1)))
(assert (= e_93 (select a_89 i_92)))
(assert (= e_94 (select a_91 i_92)))
(assert (= i_92 (sk a_89 a_91)))
(assert (not (= e_93 e_94)))
(check-sat)
(exit)
