(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_556 () (Array Int Int))
(declare-fun a_557 () (Array Int Int))
(declare-fun a_559 () (Array Int Int))
(declare-fun a_560 () (Array Int Int))
(declare-fun a_562 () (Array Int Int))
(declare-fun a_564 () (Array Int Int))
(declare-fun a_566 () (Array Int Int))
(declare-fun a_568 () (Array Int Int))
(declare-fun a_570 () (Array Int Int))
(declare-fun a_572 () (Array Int Int))
(declare-fun a_573 () (Array Int Int))
(declare-fun a_575 () (Array Int Int))
(declare-fun e_555 () Int)
(declare-fun e_558 () Int)
(declare-fun e_561 () Int)
(declare-fun e_563 () Int)
(declare-fun e_565 () Int)
(declare-fun e_567 () Int)
(declare-fun e_569 () Int)
(declare-fun e_571 () Int)
(declare-fun e_574 () Int)
(declare-fun e_577 () Int)
(declare-fun e_578 () Int)
(declare-fun i_576 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_556 (store a1 i1 e_555)))
(assert (= a_557 (store a_556 i1 e_555)))
(assert (= a_559 (store a_557 i3 e_558)))
(assert (= a_560 (store a_559 i3 e_558)))
(assert (= a_562 (store a_560 i2 e_561)))
(assert (= a_564 (store a_562 i3 e_563)))
(assert (= a_566 (store a_564 i3 e_565)))
(assert (= a_568 (store a_566 i4 e_567)))
(assert (= a_570 (store a_568 i3 e_569)))
(assert (= a_572 (store a_570 i0 e_571)))
(assert (= a_573 (store a_568 i4 e_569)))
(assert (= a_575 (store a_573 i0 e_574)))
(assert (= e_555 (select a1 i1)))
(assert (= e_558 (select a_557 i3)))
(assert (= e_561 (select a_560 i3)))
(assert (= e_563 (select a_560 i2)))
(assert (= e_565 (select a_564 i4)))
(assert (= e_567 (select a_564 i3)))
(assert (= e_569 (select a_568 i0)))
(assert (= e_571 (select a_568 i3)))
(assert (= e_574 (select a_568 i4)))
(assert (= e_577 (select a_572 i_576)))
(assert (= e_578 (select a_575 i_576)))
(assert (= i_576 (sk a_572 a_575)))
(assert (not (= e_577 e_578)))
(check-sat)
(exit)
