(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_480 () (Array Int Int))
(declare-fun a_481 () (Array Int Int))
(declare-fun a_483 () (Array Int Int))
(declare-fun a_485 () (Array Int Int))
(declare-fun a_487 () (Array Int Int))
(declare-fun a_489 () (Array Int Int))
(declare-fun a_491 () (Array Int Int))
(declare-fun a_492 () (Array Int Int))
(declare-fun a_494 () (Array Int Int))
(declare-fun a_496 () (Array Int Int))
(declare-fun a_498 () (Array Int Int))
(declare-fun a_500 () (Array Int Int))
(declare-fun a_502 () (Array Int Int))
(declare-fun a_504 () (Array Int Int))
(declare-fun a_506 () (Array Int Int))
(declare-fun a_508 () (Array Int Int))
(declare-fun a_509 () (Array Int Int))
(declare-fun a_510 () (Array Int Int))
(declare-fun a_512 () (Array Int Int))
(declare-fun a_514 () (Array Int Int))
(declare-fun a_516 () (Array Int Int))
(declare-fun a_517 () (Array Int Int))
(declare-fun a_519 () (Array Int Int))
(declare-fun a_521 () (Array Int Int))
(declare-fun a_523 () (Array Int Int))
(declare-fun a_525 () (Array Int Int))
(declare-fun a_527 () (Array Int Int))
(declare-fun a_529 () (Array Int Int))
(declare-fun a_531 () (Array Int Int))
(declare-fun a_533 () (Array Int Int))
(declare-fun e_479 () Int)
(declare-fun e_482 () Int)
(declare-fun e_484 () Int)
(declare-fun e_486 () Int)
(declare-fun e_488 () Int)
(declare-fun e_490 () Int)
(declare-fun e_493 () Int)
(declare-fun e_495 () Int)
(declare-fun e_497 () Int)
(declare-fun e_499 () Int)
(declare-fun e_501 () Int)
(declare-fun e_503 () Int)
(declare-fun e_505 () Int)
(declare-fun e_507 () Int)
(declare-fun e_511 () Int)
(declare-fun e_513 () Int)
(declare-fun e_515 () Int)
(declare-fun e_518 () Int)
(declare-fun e_520 () Int)
(declare-fun e_522 () Int)
(declare-fun e_524 () Int)
(declare-fun e_526 () Int)
(declare-fun e_528 () Int)
(declare-fun e_530 () Int)
(declare-fun e_532 () Int)
(declare-fun e_535 () Int)
(declare-fun e_536 () Int)
(declare-fun i_534 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_480 (store a1 i2 e_479)))
(assert (= a_481 (store a_480 i2 e_479)))
(assert (= a_483 (store a_481 i7 e_482)))
(assert (= a_485 (store a_483 i5 e_484)))
(assert (= a_487 (store a_485 i7 e_486)))
(assert (= a_489 (store a_487 i3 e_488)))
(assert (= a_491 (store a_489 i2 e_490)))
(assert (= a_492 (store a_491 i2 e_490)))
(assert (= a_494 (store a_492 i6 e_493)))
(assert (= a_496 (store a_494 i3 e_495)))
(assert (= a_498 (store a_496 i0 e_497)))
(assert (= a_500 (store a_498 i2 e_499)))
(assert (= a_502 (store a_500 i6 e_501)))
(assert (= a_504 (store a_502 i0 e_503)))
(assert (= a_506 (store a_504 i2 e_505)))
(assert (= a_508 (store a_506 i5 e_507)))
(assert (= a_509 (store a_481 i5 e_484)))
(assert (= a_510 (store a_509 i7 e_482)))
(assert (= a_512 (store a_510 i3 e_511)))
(assert (= a_514 (store a_512 i7 e_513)))
(assert (= a_516 (store a_514 i2 e_515)))
(assert (= a_517 (store a_516 i2 e_515)))
(assert (= a_519 (store a_517 i6 e_518)))
(assert (= a_521 (store a_519 i3 e_520)))
(assert (= a_523 (store a_521 i2 e_522)))
(assert (= a_525 (store a_523 i0 e_524)))
(assert (= a_527 (store a_525 i0 e_526)))
(assert (= a_529 (store a_527 i6 e_528)))
(assert (= a_531 (store a_529 i3 e_530)))
(assert (= a_533 (store a_531 i5 e_532)))
(assert (= e_479 (select a1 i2)))
(assert (= e_482 (select a_481 i5)))
(assert (= e_484 (select a_481 i7)))
(assert (= e_486 (select a_485 i3)))
(assert (= e_488 (select a_485 i7)))
(assert (= e_490 (select a_489 i2)))
(assert (= e_493 (select a_492 i3)))
(assert (= e_495 (select a_492 i6)))
(assert (= e_497 (select a_496 i2)))
(assert (= e_499 (select a_496 i0)))
(assert (= e_501 (select a_500 i0)))
(assert (= e_503 (select a_500 i6)))
(assert (= e_505 (select a_504 i5)))
(assert (= e_507 (select a_504 i2)))
(assert (= e_511 (select a_510 i7)))
(assert (= e_513 (select a_510 i3)))
(assert (= e_515 (select a_514 i2)))
(assert (= e_518 (select a_517 i3)))
(assert (= e_520 (select a_517 i6)))
(assert (= e_522 (select a_521 i0)))
(assert (= e_524 (select a_521 i2)))
(assert (= e_526 (select a_525 i6)))
(assert (= e_528 (select a_525 i0)))
(assert (= e_530 (select a_529 i5)))
(assert (= e_532 (select a_529 i3)))
(assert (= e_535 (select a_508 i_534)))
(assert (= e_536 (select a_533 i_534)))
(assert (= i_534 (sk a_508 a_533)))
(assert (not (= e_535 e_536)))
(check-sat)
(exit)
