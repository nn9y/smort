(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_395 () (Array Int Int))
(declare-fun a_397 () (Array Int Int))
(declare-fun a_399 () (Array Int Int))
(declare-fun a_401 () (Array Int Int))
(declare-fun a_403 () (Array Int Int))
(declare-fun a_405 () (Array Int Int))
(declare-fun a_407 () (Array Int Int))
(declare-fun a_409 () (Array Int Int))
(declare-fun a_411 () (Array Int Int))
(declare-fun a_412 () (Array Int Int))
(declare-fun a_414 () (Array Int Int))
(declare-fun a_416 () (Array Int Int))
(declare-fun a_418 () (Array Int Int))
(declare-fun a_420 () (Array Int Int))
(declare-fun a_421 () (Array Int Int))
(declare-fun a_422 () (Array Int Int))
(declare-fun a_424 () (Array Int Int))
(declare-fun a_426 () (Array Int Int))
(declare-fun a_428 () (Array Int Int))
(declare-fun a_429 () (Array Int Int))
(declare-fun a_431 () (Array Int Int))
(declare-fun a_433 () (Array Int Int))
(declare-fun a_435 () (Array Int Int))
(declare-fun a_437 () (Array Int Int))
(declare-fun e_394 () Int)
(declare-fun e_396 () Int)
(declare-fun e_398 () Int)
(declare-fun e_400 () Int)
(declare-fun e_402 () Int)
(declare-fun e_404 () Int)
(declare-fun e_406 () Int)
(declare-fun e_408 () Int)
(declare-fun e_410 () Int)
(declare-fun e_413 () Int)
(declare-fun e_415 () Int)
(declare-fun e_417 () Int)
(declare-fun e_419 () Int)
(declare-fun e_423 () Int)
(declare-fun e_425 () Int)
(declare-fun e_427 () Int)
(declare-fun e_430 () Int)
(declare-fun e_432 () Int)
(declare-fun e_434 () Int)
(declare-fun e_436 () Int)
(declare-fun e_439 () Int)
(declare-fun e_440 () Int)
(declare-fun i_438 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_395 (store a1 i1 e_394)))
(assert (= a_397 (store a_395 i5 e_396)))
(assert (= a_399 (store a_397 i0 e_398)))
(assert (= a_401 (store a_399 i3 e_400)))
(assert (= a_403 (store a_401 i1 e_402)))
(assert (= a_405 (store a_403 i4 e_404)))
(assert (= a_407 (store a_405 i6 e_406)))
(assert (= a_409 (store a_407 i0 e_408)))
(assert (= a_411 (store a_409 i3 e_410)))
(assert (= a_412 (store a_411 i3 e_410)))
(assert (= a_414 (store a_412 i1 e_413)))
(assert (= a_416 (store a_414 i3 e_415)))
(assert (= a_418 (store a_416 i0 e_417)))
(assert (= a_420 (store a_418 i3 e_419)))
(assert (= a_421 (store a_401 i4 e_404)))
(assert (= a_422 (store a_421 i1 e_402)))
(assert (= a_424 (store a_422 i0 e_423)))
(assert (= a_426 (store a_424 i6 e_425)))
(assert (= a_428 (store a_426 i3 e_427)))
(assert (= a_429 (store a_428 i3 e_427)))
(assert (= a_431 (store a_429 i3 e_430)))
(assert (= a_433 (store a_431 i1 e_432)))
(assert (= a_435 (store a_433 i4 e_434)))
(assert (= a_437 (store a_435 i0 e_436)))
(assert (= e_394 (select a1 i5)))
(assert (= e_396 (select a1 i1)))
(assert (= e_398 (select a_397 i3)))
(assert (= e_400 (select a_397 i0)))
(assert (= e_402 (select a_401 i4)))
(assert (= e_404 (select a_401 i1)))
(assert (= e_406 (select a_405 i0)))
(assert (= e_408 (select a_405 i6)))
(assert (= e_410 (select a_409 i3)))
(assert (= e_413 (select a_412 i3)))
(assert (= e_415 (select a_412 i1)))
(assert (= e_417 (select a_416 i3)))
(assert (= e_419 (select a_416 i0)))
(assert (= e_423 (select a_422 i6)))
(assert (= e_425 (select a_422 i0)))
(assert (= e_427 (select a_426 i3)))
(assert (= e_430 (select a_429 i1)))
(assert (= e_432 (select a_429 i3)))
(assert (= e_434 (select a_433 i0)))
(assert (= e_436 (select a_433 i4)))
(assert (= e_439 (select a_420 i_438)))
(assert (= e_440 (select a_437 i_438)))
(assert (= i_438 (sk a_420 a_437)))
(assert (not (= e_439 e_440)))
(check-sat)
(exit)
