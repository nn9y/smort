(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_200 () (Array Int Int))
(declare-fun a_201 () (Array Int Int))
(declare-fun a_202 () (Array Int Int))
(declare-fun a_203 () (Array Int Int))
(declare-fun a_204 () (Array Int Int))
(declare-fun a_205 () (Array Int Int))
(declare-fun a_206 () (Array Int Int))
(declare-fun a_207 () (Array Int Int))
(declare-fun a_208 () (Array Int Int))
(declare-fun a_209 () (Array Int Int))
(declare-fun a_210 () (Array Int Int))
(declare-fun a_211 () (Array Int Int))
(declare-fun a_212 () (Array Int Int))
(declare-fun a_213 () (Array Int Int))
(declare-fun a_214 () (Array Int Int))
(declare-fun a_215 () (Array Int Int))
(declare-fun a_216 () (Array Int Int))
(declare-fun a_217 () (Array Int Int))
(declare-fun a_218 () (Array Int Int))
(declare-fun a1 () (Array Int Int))
(declare-fun e1 () Int)
(declare-fun e10 () Int)
(declare-fun e2 () Int)
(declare-fun e3 () Int)
(declare-fun e4 () Int)
(declare-fun e5 () Int)
(declare-fun e6 () Int)
(declare-fun e7 () Int)
(declare-fun e8 () Int)
(declare-fun e9 () Int)
(assert (= a_200 (store a1 1 e1)))
(assert (= a_201 (store a_200 2 e2)))
(assert (= a_202 (store a_201 3 e3)))
(assert (= a_203 (store a_202 4 e4)))
(assert (= a_204 (store a_203 5 e5)))
(assert (= a_205 (store a_204 6 e6)))
(assert (= a_206 (store a_205 7 e7)))
(assert (= a_207 (store a_206 8 e8)))
(assert (= a_208 (store a_207 9 e9)))
(assert (= a_209 (store a_208 1 e1)))
(assert (= a_210 (store a_200 9 e9)))
(assert (= a_211 (store a_210 4 e4)))
(assert (= a_212 (store a_211 6 e6)))
(assert (= a_213 (store a_212 8 e8)))
(assert (= a_214 (store a_213 10 e10)))
(assert (= a_215 (store a_214 2 e2)))
(assert (= a_216 (store a_215 7 e7)))
(assert (= a_217 (store a_216 3 e3)))
(assert (= a_218 (store a_217 5 e5)))
(assert (not (= a_209 a_218)))
(check-sat)
(exit)
