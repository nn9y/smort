(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_399 () (Array Int Int))
(declare-fun a_400 () (Array Int Int))
(declare-fun a_401 () (Array Int Int))
(declare-fun a_402 () (Array Int Int))
(declare-fun a_403 () (Array Int Int))
(declare-fun a_404 () (Array Int Int))
(declare-fun a_405 () (Array Int Int))
(declare-fun a_406 () (Array Int Int))
(declare-fun a_407 () (Array Int Int))
(declare-fun a_408 () (Array Int Int))
(declare-fun a_409 () (Array Int Int))
(declare-fun a_410 () (Array Int Int))
(declare-fun a_411 () (Array Int Int))
(declare-fun a_412 () (Array Int Int))
(declare-fun a_413 () (Array Int Int))
(declare-fun a_414 () (Array Int Int))
(declare-fun a_415 () (Array Int Int))
(declare-fun a_416 () (Array Int Int))
(declare-fun a_417 () (Array Int Int))
(declare-fun a_418 () (Array Int Int))
(declare-fun a_419 () (Array Int Int))
(declare-fun a_420 () (Array Int Int))
(declare-fun a_421 () (Array Int Int))
(declare-fun a_422 () (Array Int Int))
(declare-fun a_423 () (Array Int Int))
(declare-fun a_424 () (Array Int Int))
(declare-fun a_425 () (Array Int Int))
(declare-fun a_426 () (Array Int Int))
(declare-fun a_427 () (Array Int Int))
(declare-fun a_428 () (Array Int Int))
(declare-fun a_429 () (Array Int Int))
(declare-fun a_430 () (Array Int Int))
(declare-fun a_431 () (Array Int Int))
(declare-fun a_432 () (Array Int Int))
(declare-fun a_433 () (Array Int Int))
(declare-fun a_434 () (Array Int Int))
(declare-fun a_435 () (Array Int Int))
(declare-fun a_436 () (Array Int Int))
(declare-fun a_437 () (Array Int Int))
(declare-fun a_438 () (Array Int Int))
(declare-fun a1 () (Array Int Int))
(declare-fun e1 () Int)
(declare-fun e10 () Int)
(declare-fun e11 () Int)
(declare-fun e12 () Int)
(declare-fun e13 () Int)
(declare-fun e14 () Int)
(declare-fun e15 () Int)
(declare-fun e16 () Int)
(declare-fun e17 () Int)
(declare-fun e18 () Int)
(declare-fun e19 () Int)
(declare-fun e2 () Int)
(declare-fun e20 () Int)
(declare-fun e3 () Int)
(declare-fun e4 () Int)
(declare-fun e5 () Int)
(declare-fun e6 () Int)
(declare-fun e7 () Int)
(declare-fun e8 () Int)
(declare-fun e9 () Int)
(assert (= a_399 (store a1 1 e1)))
(assert (= a_400 (store a_399 2 e2)))
(assert (= a_401 (store a_400 3 e3)))
(assert (= a_402 (store a_401 4 e4)))
(assert (= a_403 (store a_402 5 e5)))
(assert (= a_404 (store a_403 6 e6)))
(assert (= a_405 (store a_404 7 e7)))
(assert (= a_406 (store a_405 8 e8)))
(assert (= a_407 (store a_406 9 e9)))
(assert (= a_408 (store a_407 10 e10)))
(assert (= a_409 (store a_408 11 e11)))
(assert (= a_410 (store a_409 12 e12)))
(assert (= a_411 (store a_410 13 e13)))
(assert (= a_412 (store a_411 14 e14)))
(assert (= a_413 (store a_412 15 e15)))
(assert (= a_414 (store a_413 16 e16)))
(assert (= a_415 (store a_414 17 e17)))
(assert (= a_416 (store a_415 18 e18)))
(assert (= a_417 (store a_416 19 e19)))
(assert (= a_418 (store a_417 1 e1)))
(assert (= a_419 (store a1 4 e4)))
(assert (= a_420 (store a_419 19 e19)))
(assert (= a_421 (store a_420 16 e16)))
(assert (= a_422 (store a_421 8 e8)))
(assert (= a_423 (store a_422 7 e7)))
(assert (= a_424 (store a_423 5 e5)))
(assert (= a_425 (store a_424 9 e9)))
(assert (= a_426 (store a_425 1 e1)))
(assert (= a_427 (store a_426 14 e14)))
(assert (= a_428 (store a_427 10 e10)))
(assert (= a_429 (store a_428 3 e3)))
(assert (= a_430 (store a_429 17 e17)))
(assert (= a_431 (store a_430 2 e2)))
(assert (= a_432 (store a_431 13 e13)))
(assert (= a_433 (store a_432 11 e11)))
(assert (= a_434 (store a_433 15 e15)))
(assert (= a_435 (store a_434 18 e18)))
(assert (= a_436 (store a_435 20 e20)))
(assert (= a_437 (store a_436 6 e6)))
(assert (= a_438 (store a_437 12 e12)))
(assert (not (= a_418 a_438)))
(check-sat)
(exit)
