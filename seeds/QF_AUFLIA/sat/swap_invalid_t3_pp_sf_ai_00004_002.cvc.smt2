(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_387 () (Array Int Int))
(declare-fun a_389 () (Array Int Int))
(declare-fun a_391 () (Array Int Int))
(declare-fun a_393 () (Array Int Int))
(declare-fun a_395 () (Array Int Int))
(declare-fun a_397 () (Array Int Int))
(declare-fun a_399 () (Array Int Int))
(declare-fun a_401 () (Array Int Int))
(declare-fun a_402 () (Array Int Int))
(declare-fun a_403 () (Array Int Int))
(declare-fun a_405 () (Array Int Int))
(declare-fun a_407 () (Array Int Int))
(declare-fun a_409 () (Array Int Int))
(declare-fun a_411 () (Array Int Int))
(declare-fun e_386 () Int)
(declare-fun e_388 () Int)
(declare-fun e_390 () Int)
(declare-fun e_392 () Int)
(declare-fun e_394 () Int)
(declare-fun e_396 () Int)
(declare-fun e_398 () Int)
(declare-fun e_400 () Int)
(declare-fun e_404 () Int)
(declare-fun e_406 () Int)
(declare-fun e_408 () Int)
(declare-fun e_410 () Int)
(declare-fun e_413 () Int)
(declare-fun e_414 () Int)
(declare-fun i_412 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_387 (store a1 i1 e_386)))
(assert (= a_389 (store a_387 i3 e_388)))
(assert (= a_391 (store a_389 i0 e_390)))
(assert (= a_393 (store a_391 i2 e_392)))
(assert (= a_395 (store a_393 i2 e_394)))
(assert (= a_397 (store a_395 i1 e_396)))
(assert (= a_399 (store a_397 i2 e_398)))
(assert (= a_401 (store a_399 i0 e_400)))
(assert (= a_402 (store a_389 i2 e_392)))
(assert (= a_403 (store a_402 i0 e_390)))
(assert (= a_405 (store a_403 i1 e_404)))
(assert (= a_407 (store a_405 i2 e_406)))
(assert (= a_409 (store a_407 i3 e_408)))
(assert (= a_411 (store a_409 i0 e_410)))
(assert (= e_386 (select a1 i3)))
(assert (= e_388 (select a1 i1)))
(assert (= e_390 (select a_389 i2)))
(assert (= e_392 (select a_389 i0)))
(assert (= e_394 (select a_393 i1)))
(assert (= e_396 (select a_393 i2)))
(assert (= e_398 (select a_397 i0)))
(assert (= e_400 (select a_397 i2)))
(assert (= e_404 (select a_403 i2)))
(assert (= e_406 (select a_403 i1)))
(assert (= e_408 (select a_407 i0)))
(assert (= e_410 (select a_407 i3)))
(assert (= e_413 (select a_401 i_412)))
(assert (= e_414 (select a_411 i_412)))
(assert (= i_412 (sk a_401 a_411)))
(assert (not (= e_413 e_414)))
(check-sat)
(exit)
