(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_217 () (Array Int Int))
(declare-fun a_219 () (Array Int Int))
(declare-fun a_221 () (Array Int Int))
(declare-fun a_223 () (Array Int Int))
(declare-fun a_225 () (Array Int Int))
(declare-fun a_227 () (Array Int Int))
(declare-fun a_229 () (Array Int Int))
(declare-fun a_231 () (Array Int Int))
(declare-fun a_232 () (Array Int Int))
(declare-fun a_233 () (Array Int Int))
(declare-fun a_235 () (Array Int Int))
(declare-fun a_237 () (Array Int Int))
(declare-fun a_239 () (Array Int Int))
(declare-fun a_241 () (Array Int Int))
(declare-fun a_243 () (Array Int Int))
(declare-fun a_244 () (Array Int Int))
(declare-fun e_216 () Int)
(declare-fun e_218 () Int)
(declare-fun e_220 () Int)
(declare-fun e_222 () Int)
(declare-fun e_224 () Int)
(declare-fun e_226 () Int)
(declare-fun e_228 () Int)
(declare-fun e_230 () Int)
(declare-fun e_234 () Int)
(declare-fun e_236 () Int)
(declare-fun e_238 () Int)
(declare-fun e_240 () Int)
(declare-fun e_242 () Int)
(declare-fun e_246 () Int)
(declare-fun e_247 () Int)
(declare-fun i_245 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_217 (store a1 i0 e_216)))
(assert (= a_219 (store a_217 i1 e_218)))
(assert (= a_221 (store a_219 i1 e_220)))
(assert (= a_223 (store a_221 i2 e_222)))
(assert (= a_225 (store a_223 i3 e_224)))
(assert (= a_227 (store a_225 i2 e_226)))
(assert (= a_229 (store a_227 i2 e_228)))
(assert (= a_231 (store a_229 i3 e_230)))
(assert (= a_232 (store a1 i1 e_218)))
(assert (= a_233 (store a_232 i0 e_216)))
(assert (= a_235 (store a_233 i1 e_234)))
(assert (= a_237 (store a_235 i2 e_236)))
(assert (= a_239 (store a_237 i2 e_238)))
(assert (= a_241 (store a_239 i3 e_240)))
(assert (= a_243 (store a_241 i3 e_242)))
(assert (= a_244 (store a_243 i3 e_242)))
(assert (= e_216 (select a1 i1)))
(assert (= e_218 (select a1 i0)))
(assert (= e_220 (select a_219 i2)))
(assert (= e_222 (select a_219 i1)))
(assert (= e_224 (select a_223 i2)))
(assert (= e_226 (select a_223 i3)))
(assert (= e_228 (select a_227 i3)))
(assert (= e_230 (select a_227 i2)))
(assert (= e_234 (select a_233 i2)))
(assert (= e_236 (select a_233 i1)))
(assert (= e_238 (select a_237 i3)))
(assert (= e_240 (select a_237 i2)))
(assert (= e_242 (select a_241 i3)))
(assert (= e_246 (select a_231 i_245)))
(assert (= e_247 (select a_244 i_245)))
(assert (= i_245 (sk a_231 a_244)))
(assert (not (= e_246 e_247)))
(check-sat)
(exit)
