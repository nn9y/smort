(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_319 () (Array Int Int))
(declare-fun a_320 () (Array Int Int))
(declare-fun a_321 () (Array Int Int))
(declare-fun a_322 () (Array Int Int))
(declare-fun a_323 () (Array Int Int))
(declare-fun a_324 () (Array Int Int))
(declare-fun a_325 () (Array Int Int))
(declare-fun a_326 () (Array Int Int))
(declare-fun a_327 () (Array Int Int))
(declare-fun a_328 () (Array Int Int))
(declare-fun a_329 () (Array Int Int))
(declare-fun a_330 () (Array Int Int))
(declare-fun a_331 () (Array Int Int))
(declare-fun a_332 () (Array Int Int))
(declare-fun a_333 () (Array Int Int))
(declare-fun a_334 () (Array Int Int))
(declare-fun a_335 () (Array Int Int))
(declare-fun a_336 () (Array Int Int))
(declare-fun a_337 () (Array Int Int))
(declare-fun a_338 () (Array Int Int))
(declare-fun a_339 () (Array Int Int))
(declare-fun a_340 () (Array Int Int))
(declare-fun a_341 () (Array Int Int))
(declare-fun a_342 () (Array Int Int))
(declare-fun a_343 () (Array Int Int))
(declare-fun a_344 () (Array Int Int))
(declare-fun a_345 () (Array Int Int))
(declare-fun a_346 () (Array Int Int))
(declare-fun a_347 () (Array Int Int))
(declare-fun a_348 () (Array Int Int))
(declare-fun a_349 () (Array Int Int))
(declare-fun a_350 () (Array Int Int))
(declare-fun a_351 () (Array Int Int))
(declare-fun a_352 () (Array Int Int))
(declare-fun a_353 () (Array Int Int))
(declare-fun a_354 () (Array Int Int))
(declare-fun a_355 () (Array Int Int))
(declare-fun a_356 () (Array Int Int))
(declare-fun a_357 () (Array Int Int))
(declare-fun a_358 () (Array Int Int))
(declare-fun a1 () (Array Int Int))
(declare-fun e1 () Int)
(declare-fun e10 () Int)
(declare-fun e11 () Int)
(declare-fun e12 () Int)
(declare-fun e13 () Int)
(declare-fun e14 () Int)
(declare-fun e15 () Int)
(declare-fun e16 () Int)
(declare-fun e17 () Int)
(declare-fun e18 () Int)
(declare-fun e19 () Int)
(declare-fun e2 () Int)
(declare-fun e20 () Int)
(declare-fun e3 () Int)
(declare-fun e4 () Int)
(declare-fun e5 () Int)
(declare-fun e6 () Int)
(declare-fun e7 () Int)
(declare-fun e8 () Int)
(declare-fun e9 () Int)
(assert (= a_319 (store a1 1 e1)))
(assert (= a_320 (store a_319 2 e2)))
(assert (= a_321 (store a_320 3 e3)))
(assert (= a_322 (store a_321 4 e4)))
(assert (= a_323 (store a_322 5 e5)))
(assert (= a_324 (store a_323 6 e6)))
(assert (= a_325 (store a_324 7 e7)))
(assert (= a_326 (store a_325 8 e8)))
(assert (= a_327 (store a_326 9 e9)))
(assert (= a_328 (store a_327 10 e10)))
(assert (= a_329 (store a_328 11 e11)))
(assert (= a_330 (store a_329 12 e12)))
(assert (= a_331 (store a_330 13 e13)))
(assert (= a_332 (store a_331 14 e14)))
(assert (= a_333 (store a_332 15 e15)))
(assert (= a_334 (store a_333 16 e16)))
(assert (= a_335 (store a_334 17 e17)))
(assert (= a_336 (store a_335 18 e18)))
(assert (= a_337 (store a_336 19 e19)))
(assert (= a_338 (store a_337 1 e1)))
(assert (= a_339 (store a1 9 e9)))
(assert (= a_340 (store a_339 12 e12)))
(assert (= a_341 (store a_340 4 e4)))
(assert (= a_342 (store a_341 2 e2)))
(assert (= a_343 (store a_342 11 e11)))
(assert (= a_344 (store a_343 19 e19)))
(assert (= a_345 (store a_344 1 e1)))
(assert (= a_346 (store a_345 8 e8)))
(assert (= a_347 (store a_346 15 e15)))
(assert (= a_348 (store a_347 10 e10)))
(assert (= a_349 (store a_348 6 e6)))
(assert (= a_350 (store a_349 14 e14)))
(assert (= a_351 (store a_350 3 e3)))
(assert (= a_352 (store a_351 16 e16)))
(assert (= a_353 (store a_352 5 e5)))
(assert (= a_354 (store a_353 18 e18)))
(assert (= a_355 (store a_354 7 e7)))
(assert (= a_356 (store a_355 20 e20)))
(assert (= a_357 (store a_356 13 e13)))
(assert (= a_358 (store a_357 17 e17)))
(assert (not (= a_338 a_358)))
(check-sat)
(exit)
