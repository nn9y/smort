(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_289 () (Array Int Int))
(declare-fun a_291 () (Array Int Int))
(declare-fun a_293 () (Array Int Int))
(declare-fun a_295 () (Array Int Int))
(declare-fun a_297 () (Array Int Int))
(declare-fun a_299 () (Array Int Int))
(declare-fun a_301 () (Array Int Int))
(declare-fun a_302 () (Array Int Int))
(declare-fun a_304 () (Array Int Int))
(declare-fun a_306 () (Array Int Int))
(declare-fun a_308 () (Array Int Int))
(declare-fun a_310 () (Array Int Int))
(declare-fun a_312 () (Array Int Int))
(declare-fun a_314 () (Array Int Int))
(declare-fun a_315 () (Array Int Int))
(declare-fun a_316 () (Array Int Int))
(declare-fun a_318 () (Array Int Int))
(declare-fun a_320 () (Array Int Int))
(declare-fun a_322 () (Array Int Int))
(declare-fun a_323 () (Array Int Int))
(declare-fun a_325 () (Array Int Int))
(declare-fun a_327 () (Array Int Int))
(declare-fun a_329 () (Array Int Int))
(declare-fun a_331 () (Array Int Int))
(declare-fun a_333 () (Array Int Int))
(declare-fun a_335 () (Array Int Int))
(declare-fun e_288 () Int)
(declare-fun e_290 () Int)
(declare-fun e_292 () Int)
(declare-fun e_294 () Int)
(declare-fun e_296 () Int)
(declare-fun e_298 () Int)
(declare-fun e_300 () Int)
(declare-fun e_303 () Int)
(declare-fun e_305 () Int)
(declare-fun e_307 () Int)
(declare-fun e_309 () Int)
(declare-fun e_311 () Int)
(declare-fun e_313 () Int)
(declare-fun e_317 () Int)
(declare-fun e_319 () Int)
(declare-fun e_321 () Int)
(declare-fun e_324 () Int)
(declare-fun e_326 () Int)
(declare-fun e_328 () Int)
(declare-fun e_330 () Int)
(declare-fun e_332 () Int)
(declare-fun e_334 () Int)
(declare-fun e_337 () Int)
(declare-fun e_338 () Int)
(declare-fun i_336 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_289 (store a1 i6 e_288)))
(assert (= a_291 (store a_289 i3 e_290)))
(assert (= a_293 (store a_291 i1 e_292)))
(assert (= a_295 (store a_293 i4 e_294)))
(assert (= a_297 (store a_295 i2 e_296)))
(assert (= a_299 (store a_297 i6 e_298)))
(assert (= a_301 (store a_299 i4 e_300)))
(assert (= a_302 (store a_301 i4 e_300)))
(assert (= a_304 (store a_302 i0 e_303)))
(assert (= a_306 (store a_304 i2 e_305)))
(assert (= a_308 (store a_306 i2 e_307)))
(assert (= a_310 (store a_308 i6 e_309)))
(assert (= a_312 (store a_310 i5 e_311)))
(assert (= a_314 (store a_312 i3 e_313)))
(assert (= a_315 (store a_291 i4 e_294)))
(assert (= a_316 (store a_315 i1 e_292)))
(assert (= a_318 (store a_316 i6 e_317)))
(assert (= a_320 (store a_318 i2 e_319)))
(assert (= a_322 (store a_320 i4 e_321)))
(assert (= a_323 (store a_322 i4 e_321)))
(assert (= a_325 (store a_323 i0 e_324)))
(assert (= a_327 (store a_325 i2 e_326)))
(assert (= a_329 (store a_327 i6 e_328)))
(assert (= a_331 (store a_329 i2 e_330)))
(assert (= a_333 (store a_331 i6 e_332)))
(assert (= a_335 (store a_333 i3 e_334)))
(assert (= e_288 (select a1 i3)))
(assert (= e_290 (select a1 i6)))
(assert (= e_292 (select a_291 i4)))
(assert (= e_294 (select a_291 i1)))
(assert (= e_296 (select a_295 i6)))
(assert (= e_298 (select a_295 i2)))
(assert (= e_300 (select a_299 i4)))
(assert (= e_303 (select a_302 i2)))
(assert (= e_305 (select a_302 i0)))
(assert (= e_307 (select a_306 i6)))
(assert (= e_309 (select a_306 i2)))
(assert (= e_311 (select a_310 i3)))
(assert (= e_313 (select a_310 i5)))
(assert (= e_317 (select a_316 i2)))
(assert (= e_319 (select a_316 i6)))
(assert (= e_321 (select a_320 i4)))
(assert (= e_324 (select a_323 i2)))
(assert (= e_326 (select a_323 i0)))
(assert (= e_328 (select a_327 i2)))
(assert (= e_330 (select a_327 i6)))
(assert (= e_332 (select a_331 i3)))
(assert (= e_334 (select a_331 i6)))
(assert (= e_337 (select a_314 i_336)))
(assert (= e_338 (select a_335 i_336)))
(assert (= i_336 (sk a_314 a_335)))
(assert (not (= e_337 e_338)))
(check-sat)
(exit)
