(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_53 () (Array Int Int))
(declare-fun a_55 () (Array Int Int))
(declare-fun a_57 () (Array Int Int))
(declare-fun a_59 () (Array Int Int))
(declare-fun a_61 () (Array Int Int))
(declare-fun a_63 () (Array Int Int))
(declare-fun a_65 () (Array Int Int))
(declare-fun a_67 () (Array Int Int))
(declare-fun a_68 () (Array Int Int))
(declare-fun a_69 () (Array Int Int))
(declare-fun a_71 () (Array Int Int))
(declare-fun a_73 () (Array Int Int))
(declare-fun a_75 () (Array Int Int))
(declare-fun a_77 () (Array Int Int))
(declare-fun a_79 () (Array Int Int))
(declare-fun a_81 () (Array Int Int))
(declare-fun e_52 () Int)
(declare-fun e_54 () Int)
(declare-fun e_56 () Int)
(declare-fun e_58 () Int)
(declare-fun e_60 () Int)
(declare-fun e_62 () Int)
(declare-fun e_64 () Int)
(declare-fun e_66 () Int)
(declare-fun e_70 () Int)
(declare-fun e_72 () Int)
(declare-fun e_74 () Int)
(declare-fun e_76 () Int)
(declare-fun e_78 () Int)
(declare-fun e_80 () Int)
(declare-fun e_83 () Int)
(declare-fun e_84 () Int)
(declare-fun i_82 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_53 (store a1 i3 e_52)))
(assert (= a_55 (store a_53 i1 e_54)))
(assert (= a_57 (store a_55 i1 e_56)))
(assert (= a_59 (store a_57 i3 e_58)))
(assert (= a_61 (store a_59 i3 e_60)))
(assert (= a_63 (store a_61 i2 e_62)))
(assert (= a_65 (store a_63 i3 e_64)))
(assert (= a_67 (store a_65 i1 e_66)))
(assert (= a_68 (store a1 i1 e_54)))
(assert (= a_69 (store a_68 i3 e_52)))
(assert (= a_71 (store a_69 i1 e_70)))
(assert (= a_73 (store a_71 i3 e_72)))
(assert (= a_75 (store a_73 i3 e_74)))
(assert (= a_77 (store a_75 i2 e_76)))
(assert (= a_79 (store a_77 i1 e_78)))
(assert (= a_81 (store a_79 i0 e_80)))
(assert (= e_52 (select a1 i1)))
(assert (= e_54 (select a1 i3)))
(assert (= e_56 (select a_55 i3)))
(assert (= e_58 (select a_55 i1)))
(assert (= e_60 (select a_59 i2)))
(assert (= e_62 (select a_59 i3)))
(assert (= e_64 (select a_63 i1)))
(assert (= e_66 (select a_63 i3)))
(assert (= e_70 (select a_69 i3)))
(assert (= e_72 (select a_69 i1)))
(assert (= e_74 (select a_73 i2)))
(assert (= e_76 (select a_73 i3)))
(assert (= e_78 (select a_77 i0)))
(assert (= e_80 (select a_77 i1)))
(assert (= e_83 (select a_67 i_82)))
(assert (= e_84 (select a_81 i_82)))
(assert (= i_82 (sk a_67 a_81)))
(assert (not (= e_83 e_84)))
(check-sat)
(exit)
