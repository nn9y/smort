(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_281 () (Array Int Int))
(declare-fun a_283 () (Array Int Int))
(declare-fun a_285 () (Array Int Int))
(declare-fun a_287 () (Array Int Int))
(declare-fun a_289 () (Array Int Int))
(declare-fun a_291 () (Array Int Int))
(declare-fun a_293 () (Array Int Int))
(declare-fun a_295 () (Array Int Int))
(declare-fun a_296 () (Array Int Int))
(declare-fun a_297 () (Array Int Int))
(declare-fun a_299 () (Array Int Int))
(declare-fun a_301 () (Array Int Int))
(declare-fun a_303 () (Array Int Int))
(declare-fun a_304 () (Array Int Int))
(declare-fun e_280 () Int)
(declare-fun e_282 () Int)
(declare-fun e_284 () Int)
(declare-fun e_286 () Int)
(declare-fun e_288 () Int)
(declare-fun e_290 () Int)
(declare-fun e_292 () Int)
(declare-fun e_294 () Int)
(declare-fun e_298 () Int)
(declare-fun e_300 () Int)
(declare-fun e_302 () Int)
(declare-fun e_306 () Int)
(declare-fun e_307 () Int)
(declare-fun i_305 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_281 (store a1 i2 e_280)))
(assert (= a_283 (store a_281 i0 e_282)))
(assert (= a_285 (store a_283 i0 e_284)))
(assert (= a_287 (store a_285 i2 e_286)))
(assert (= a_289 (store a_287 i3 e_288)))
(assert (= a_291 (store a_289 i2 e_290)))
(assert (= a_293 (store a_291 i1 e_292)))
(assert (= a_295 (store a_293 i0 e_294)))
(assert (= a_296 (store a_283 i2 e_286)))
(assert (= a_297 (store a_296 i0 e_284)))
(assert (= a_299 (store a_297 i2 e_298)))
(assert (= a_301 (store a_299 i3 e_300)))
(assert (= a_303 (store a_301 i1 e_302)))
(assert (= a_304 (store a_303 i1 e_302)))
(assert (= e_280 (select a1 i0)))
(assert (= e_282 (select a1 i2)))
(assert (= e_284 (select a_283 i2)))
(assert (= e_286 (select a_283 i0)))
(assert (= e_288 (select a_287 i2)))
(assert (= e_290 (select a_287 i3)))
(assert (= e_292 (select a_291 i0)))
(assert (= e_294 (select a_291 i1)))
(assert (= e_298 (select a_297 i3)))
(assert (= e_300 (select a_297 i2)))
(assert (= e_302 (select a_301 i1)))
(assert (= e_306 (select a_295 i_305)))
(assert (= e_307 (select a_304 i_305)))
(assert (= i_305 (sk a_295 a_304)))
(assert (not (= e_306 e_307)))
(check-sat)
(exit)
