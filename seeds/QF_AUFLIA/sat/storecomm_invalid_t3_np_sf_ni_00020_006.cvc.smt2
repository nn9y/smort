(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_239 () (Array Int Int))
(declare-fun a_240 () (Array Int Int))
(declare-fun a_241 () (Array Int Int))
(declare-fun a_242 () (Array Int Int))
(declare-fun a_243 () (Array Int Int))
(declare-fun a_244 () (Array Int Int))
(declare-fun a_245 () (Array Int Int))
(declare-fun a_246 () (Array Int Int))
(declare-fun a_247 () (Array Int Int))
(declare-fun a_248 () (Array Int Int))
(declare-fun a_249 () (Array Int Int))
(declare-fun a_250 () (Array Int Int))
(declare-fun a_251 () (Array Int Int))
(declare-fun a_252 () (Array Int Int))
(declare-fun a_253 () (Array Int Int))
(declare-fun a_254 () (Array Int Int))
(declare-fun a_255 () (Array Int Int))
(declare-fun a_256 () (Array Int Int))
(declare-fun a_257 () (Array Int Int))
(declare-fun a_258 () (Array Int Int))
(declare-fun a_259 () (Array Int Int))
(declare-fun a_260 () (Array Int Int))
(declare-fun a_261 () (Array Int Int))
(declare-fun a_262 () (Array Int Int))
(declare-fun a_263 () (Array Int Int))
(declare-fun a_264 () (Array Int Int))
(declare-fun a_265 () (Array Int Int))
(declare-fun a_266 () (Array Int Int))
(declare-fun a_267 () (Array Int Int))
(declare-fun a_268 () (Array Int Int))
(declare-fun a_269 () (Array Int Int))
(declare-fun a_270 () (Array Int Int))
(declare-fun a_271 () (Array Int Int))
(declare-fun a_272 () (Array Int Int))
(declare-fun a_273 () (Array Int Int))
(declare-fun a_274 () (Array Int Int))
(declare-fun a_275 () (Array Int Int))
(declare-fun a_276 () (Array Int Int))
(declare-fun a_277 () (Array Int Int))
(declare-fun a_278 () (Array Int Int))
(declare-fun a1 () (Array Int Int))
(declare-fun e1 () Int)
(declare-fun e10 () Int)
(declare-fun e11 () Int)
(declare-fun e12 () Int)
(declare-fun e13 () Int)
(declare-fun e14 () Int)
(declare-fun e15 () Int)
(declare-fun e16 () Int)
(declare-fun e17 () Int)
(declare-fun e18 () Int)
(declare-fun e19 () Int)
(declare-fun e2 () Int)
(declare-fun e20 () Int)
(declare-fun e3 () Int)
(declare-fun e4 () Int)
(declare-fun e5 () Int)
(declare-fun e6 () Int)
(declare-fun e7 () Int)
(declare-fun e8 () Int)
(declare-fun e9 () Int)
(assert (= a_239 (store a1 1 e1)))
(assert (= a_240 (store a_239 2 e2)))
(assert (= a_241 (store a_240 3 e3)))
(assert (= a_242 (store a_241 4 e4)))
(assert (= a_243 (store a_242 5 e5)))
(assert (= a_244 (store a_243 6 e6)))
(assert (= a_245 (store a_244 7 e7)))
(assert (= a_246 (store a_245 8 e8)))
(assert (= a_247 (store a_246 9 e9)))
(assert (= a_248 (store a_247 10 e10)))
(assert (= a_249 (store a_248 11 e11)))
(assert (= a_250 (store a_249 12 e12)))
(assert (= a_251 (store a_250 13 e13)))
(assert (= a_252 (store a_251 14 e14)))
(assert (= a_253 (store a_252 15 e15)))
(assert (= a_254 (store a_253 16 e16)))
(assert (= a_255 (store a_254 17 e17)))
(assert (= a_256 (store a_255 18 e18)))
(assert (= a_257 (store a_256 19 e19)))
(assert (= a_258 (store a_257 1 e1)))
(assert (= a_259 (store a1 20 e20)))
(assert (= a_260 (store a_259 18 e18)))
(assert (= a_261 (store a_260 19 e19)))
(assert (= a_262 (store a_261 3 e3)))
(assert (= a_263 (store a_262 12 e12)))
(assert (= a_264 (store a_263 5 e5)))
(assert (= a_265 (store a_264 11 e11)))
(assert (= a_266 (store a_265 16 e16)))
(assert (= a_267 (store a_266 1 e1)))
(assert (= a_268 (store a_267 2 e2)))
(assert (= a_269 (store a_268 10 e10)))
(assert (= a_270 (store a_269 6 e6)))
(assert (= a_271 (store a_270 8 e8)))
(assert (= a_272 (store a_271 4 e4)))
(assert (= a_273 (store a_272 17 e17)))
(assert (= a_274 (store a_273 7 e7)))
(assert (= a_275 (store a_274 13 e13)))
(assert (= a_276 (store a_275 9 e9)))
(assert (= a_277 (store a_276 15 e15)))
(assert (= a_278 (store a_277 14 e14)))
(assert (not (= a_258 a_278)))
(check-sat)
(exit)
