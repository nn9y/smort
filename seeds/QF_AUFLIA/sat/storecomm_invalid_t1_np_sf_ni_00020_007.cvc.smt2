(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_160 () (Array Int Int))
(declare-fun a_161 () (Array Int Int))
(declare-fun a_162 () (Array Int Int))
(declare-fun a_163 () (Array Int Int))
(declare-fun a_164 () (Array Int Int))
(declare-fun a_165 () (Array Int Int))
(declare-fun a_166 () (Array Int Int))
(declare-fun a_167 () (Array Int Int))
(declare-fun a_168 () (Array Int Int))
(declare-fun a_169 () (Array Int Int))
(declare-fun a_170 () (Array Int Int))
(declare-fun a_171 () (Array Int Int))
(declare-fun a_172 () (Array Int Int))
(declare-fun a_173 () (Array Int Int))
(declare-fun a_174 () (Array Int Int))
(declare-fun a_175 () (Array Int Int))
(declare-fun a_176 () (Array Int Int))
(declare-fun a_177 () (Array Int Int))
(declare-fun a_178 () (Array Int Int))
(declare-fun a_179 () (Array Int Int))
(declare-fun a_180 () (Array Int Int))
(declare-fun a_181 () (Array Int Int))
(declare-fun a_182 () (Array Int Int))
(declare-fun a_183 () (Array Int Int))
(declare-fun a_184 () (Array Int Int))
(declare-fun a_185 () (Array Int Int))
(declare-fun a_186 () (Array Int Int))
(declare-fun a_187 () (Array Int Int))
(declare-fun a_188 () (Array Int Int))
(declare-fun a_189 () (Array Int Int))
(declare-fun a_190 () (Array Int Int))
(declare-fun a_191 () (Array Int Int))
(declare-fun a_192 () (Array Int Int))
(declare-fun a_193 () (Array Int Int))
(declare-fun a_194 () (Array Int Int))
(declare-fun a_195 () (Array Int Int))
(declare-fun a_196 () (Array Int Int))
(declare-fun a_197 () (Array Int Int))
(declare-fun a_198 () (Array Int Int))
(declare-fun a1 () (Array Int Int))
(declare-fun e1 () Int)
(declare-fun e10 () Int)
(declare-fun e11 () Int)
(declare-fun e12 () Int)
(declare-fun e13 () Int)
(declare-fun e14 () Int)
(declare-fun e15 () Int)
(declare-fun e16 () Int)
(declare-fun e17 () Int)
(declare-fun e18 () Int)
(declare-fun e19 () Int)
(declare-fun e2 () Int)
(declare-fun e20 () Int)
(declare-fun e3 () Int)
(declare-fun e4 () Int)
(declare-fun e5 () Int)
(declare-fun e6 () Int)
(declare-fun e7 () Int)
(declare-fun e8 () Int)
(declare-fun e9 () Int)
(assert (= a_160 (store a1 1 e1)))
(assert (= a_161 (store a_160 2 e2)))
(assert (= a_162 (store a_161 3 e3)))
(assert (= a_163 (store a_162 4 e4)))
(assert (= a_164 (store a_163 5 e5)))
(assert (= a_165 (store a_164 6 e6)))
(assert (= a_166 (store a_165 7 e7)))
(assert (= a_167 (store a_166 8 e8)))
(assert (= a_168 (store a_167 9 e9)))
(assert (= a_169 (store a_168 10 e10)))
(assert (= a_170 (store a_169 11 e11)))
(assert (= a_171 (store a_170 12 e12)))
(assert (= a_172 (store a_171 13 e13)))
(assert (= a_173 (store a_172 14 e14)))
(assert (= a_174 (store a_173 15 e15)))
(assert (= a_175 (store a_174 16 e16)))
(assert (= a_176 (store a_175 17 e17)))
(assert (= a_177 (store a_176 18 e18)))
(assert (= a_178 (store a_177 19 e19)))
(assert (= a_179 (store a_178 1 e1)))
(assert (= a_180 (store a_160 10 e10)))
(assert (= a_181 (store a_180 17 e17)))
(assert (= a_182 (store a_181 3 e3)))
(assert (= a_183 (store a_182 11 e11)))
(assert (= a_184 (store a_183 12 e12)))
(assert (= a_185 (store a_184 16 e16)))
(assert (= a_186 (store a_185 6 e6)))
(assert (= a_187 (store a_186 19 e19)))
(assert (= a_188 (store a_187 4 e4)))
(assert (= a_189 (store a_188 14 e14)))
(assert (= a_190 (store a_189 5 e5)))
(assert (= a_191 (store a_190 9 e9)))
(assert (= a_192 (store a_191 18 e18)))
(assert (= a_193 (store a_192 20 e20)))
(assert (= a_194 (store a_193 13 e13)))
(assert (= a_195 (store a_194 15 e15)))
(assert (= a_196 (store a_195 2 e2)))
(assert (= a_197 (store a_196 8 e8)))
(assert (= a_198 (store a_197 7 e7)))
(assert (not (= a_179 a_198)))
(check-sat)
(exit)
