(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_257 () (Array Int Int))
(declare-fun a_258 () (Array Int Int))
(declare-fun a_259 () (Array Int Int))
(declare-fun a_260 () (Array Int Int))
(declare-fun a_261 () (Array Int Int))
(declare-fun a_262 () (Array Int Int))
(declare-fun a_263 () (Array Int Int))
(declare-fun a_264 () (Array Int Int))
(declare-fun a_265 () (Array Int Int))
(declare-fun a_266 () (Array Int Int))
(declare-fun a_267 () (Array Int Int))
(declare-fun a_268 () (Array Int Int))
(declare-fun a_269 () (Array Int Int))
(declare-fun a_270 () (Array Int Int))
(declare-fun a_271 () (Array Int Int))
(declare-fun a_272 () (Array Int Int))
(declare-fun a_273 () (Array Int Int))
(declare-fun a_274 () (Array Int Int))
(declare-fun a_275 () (Array Int Int))
(declare-fun a_276 () (Array Int Int))
(declare-fun a_277 () (Array Int Int))
(declare-fun a_278 () (Array Int Int))
(declare-fun a_279 () (Array Int Int))
(declare-fun a_280 () (Array Int Int))
(declare-fun a_281 () (Array Int Int))
(declare-fun a_282 () (Array Int Int))
(declare-fun a_283 () (Array Int Int))
(declare-fun a_284 () (Array Int Int))
(declare-fun a_285 () (Array Int Int))
(declare-fun a_286 () (Array Int Int))
(declare-fun a_287 () (Array Int Int))
(declare-fun a_288 () (Array Int Int))
(declare-fun a_289 () (Array Int Int))
(declare-fun a_290 () (Array Int Int))
(declare-fun a_291 () (Array Int Int))
(declare-fun a_292 () (Array Int Int))
(declare-fun a_293 () (Array Int Int))
(declare-fun a_294 () (Array Int Int))
(declare-fun a_295 () (Array Int Int))
(declare-fun a_296 () (Array Int Int))
(declare-fun e_298 () Int)
(declare-fun e_299 () Int)
(declare-fun i_297 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun e1 () Int)
(declare-fun e10 () Int)
(declare-fun e11 () Int)
(declare-fun e12 () Int)
(declare-fun e13 () Int)
(declare-fun e14 () Int)
(declare-fun e15 () Int)
(declare-fun e16 () Int)
(declare-fun e17 () Int)
(declare-fun e18 () Int)
(declare-fun e19 () Int)
(declare-fun e2 () Int)
(declare-fun e20 () Int)
(declare-fun e3 () Int)
(declare-fun e4 () Int)
(declare-fun e5 () Int)
(declare-fun e6 () Int)
(declare-fun e7 () Int)
(declare-fun e8 () Int)
(declare-fun e9 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_257 (store a1 1 e1)))
(assert (= a_258 (store a_257 2 e2)))
(assert (= a_259 (store a_258 3 e3)))
(assert (= a_260 (store a_259 4 e4)))
(assert (= a_261 (store a_260 5 e5)))
(assert (= a_262 (store a_261 6 e6)))
(assert (= a_263 (store a_262 7 e7)))
(assert (= a_264 (store a_263 8 e8)))
(assert (= a_265 (store a_264 9 e9)))
(assert (= a_266 (store a_265 10 e10)))
(assert (= a_267 (store a_266 11 e11)))
(assert (= a_268 (store a_267 12 e12)))
(assert (= a_269 (store a_268 13 e13)))
(assert (= a_270 (store a_269 14 e14)))
(assert (= a_271 (store a_270 15 e15)))
(assert (= a_272 (store a_271 16 e16)))
(assert (= a_273 (store a_272 17 e17)))
(assert (= a_274 (store a_273 18 e18)))
(assert (= a_275 (store a_274 19 e19)))
(assert (= a_276 (store a_275 1 e1)))
(assert (= a_277 (store a1 20 e20)))
(assert (= a_278 (store a_277 18 e18)))
(assert (= a_279 (store a_278 19 e19)))
(assert (= a_280 (store a_279 3 e3)))
(assert (= a_281 (store a_280 12 e12)))
(assert (= a_282 (store a_281 5 e5)))
(assert (= a_283 (store a_282 11 e11)))
(assert (= a_284 (store a_283 16 e16)))
(assert (= a_285 (store a_284 1 e1)))
(assert (= a_286 (store a_285 2 e2)))
(assert (= a_287 (store a_286 10 e10)))
(assert (= a_288 (store a_287 6 e6)))
(assert (= a_289 (store a_288 8 e8)))
(assert (= a_290 (store a_289 4 e4)))
(assert (= a_291 (store a_290 17 e17)))
(assert (= a_292 (store a_291 7 e7)))
(assert (= a_293 (store a_292 13 e13)))
(assert (= a_294 (store a_293 9 e9)))
(assert (= a_295 (store a_294 15 e15)))
(assert (= a_296 (store a_295 14 e14)))
(assert (= e_298 (select a_276 i_297)))
(assert (= e_299 (select a_296 i_297)))
(assert (= i_297 (sk a_276 a_296)))
(assert (not (= e_298 e_299)))
(check-sat)
(exit)
