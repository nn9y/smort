(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_218 () (Array Int Int))
(declare-fun a_219 () (Array Int Int))
(declare-fun a_221 () (Array Int Int))
(declare-fun a_223 () (Array Int Int))
(declare-fun a_225 () (Array Int Int))
(declare-fun a_226 () (Array Int Int))
(declare-fun a_227 () (Array Int Int))
(declare-fun a_228 () (Array Int Int))
(declare-fun a_230 () (Array Int Int))
(declare-fun a_232 () (Array Int Int))
(declare-fun e_217 () Int)
(declare-fun e_220 () Int)
(declare-fun e_222 () Int)
(declare-fun e_224 () Int)
(declare-fun e_229 () Int)
(declare-fun e_231 () Int)
(declare-fun e_234 () Int)
(declare-fun e_235 () Int)
(declare-fun i_233 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i2 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_218 (store a1 i0 e_217)))
(assert (= a_219 (store a_218 i0 e_217)))
(assert (= a_221 (store a_219 i0 e_220)))
(assert (= a_223 (store a_221 i2 e_222)))
(assert (= a_225 (store a_223 i2 e_224)))
(assert (= a_226 (store a_225 i2 e_224)))
(assert (= a_227 (store a_219 i2 e_222)))
(assert (= a_228 (store a_227 i0 e_220)))
(assert (= a_230 (store a_228 i2 e_229)))
(assert (= a_232 (store a_230 i0 e_231)))
(assert (= e_217 (select a1 i0)))
(assert (= e_220 (select a_219 i2)))
(assert (= e_222 (select a_219 i0)))
(assert (= e_224 (select a_223 i2)))
(assert (= e_229 (select a_228 i0)))
(assert (= e_231 (select a_228 i2)))
(assert (= e_234 (select a_226 i_233)))
(assert (= e_235 (select a_232 i_233)))
(assert (= i_233 (sk a_226 a_232)))
(assert (not (= e_234 e_235)))
(check-sat)
(exit)
