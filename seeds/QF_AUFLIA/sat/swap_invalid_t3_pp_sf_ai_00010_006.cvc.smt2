(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_455 () (Array Int Int))
(declare-fun a_457 () (Array Int Int))
(declare-fun a_459 () (Array Int Int))
(declare-fun a_461 () (Array Int Int))
(declare-fun a_463 () (Array Int Int))
(declare-fun a_464 () (Array Int Int))
(declare-fun a_466 () (Array Int Int))
(declare-fun a_467 () (Array Int Int))
(declare-fun a_469 () (Array Int Int))
(declare-fun a_471 () (Array Int Int))
(declare-fun a_473 () (Array Int Int))
(declare-fun a_475 () (Array Int Int))
(declare-fun a_477 () (Array Int Int))
(declare-fun a_479 () (Array Int Int))
(declare-fun a_481 () (Array Int Int))
(declare-fun a_483 () (Array Int Int))
(declare-fun a_485 () (Array Int Int))
(declare-fun a_487 () (Array Int Int))
(declare-fun a_489 () (Array Int Int))
(declare-fun a_491 () (Array Int Int))
(declare-fun a_492 () (Array Int Int))
(declare-fun a_493 () (Array Int Int))
(declare-fun a_495 () (Array Int Int))
(declare-fun a_497 () (Array Int Int))
(declare-fun a_499 () (Array Int Int))
(declare-fun a_501 () (Array Int Int))
(declare-fun a_503 () (Array Int Int))
(declare-fun a_505 () (Array Int Int))
(declare-fun a_507 () (Array Int Int))
(declare-fun a_509 () (Array Int Int))
(declare-fun e_454 () Int)
(declare-fun e_456 () Int)
(declare-fun e_458 () Int)
(declare-fun e_460 () Int)
(declare-fun e_462 () Int)
(declare-fun e_465 () Int)
(declare-fun e_468 () Int)
(declare-fun e_470 () Int)
(declare-fun e_472 () Int)
(declare-fun e_474 () Int)
(declare-fun e_476 () Int)
(declare-fun e_478 () Int)
(declare-fun e_480 () Int)
(declare-fun e_482 () Int)
(declare-fun e_484 () Int)
(declare-fun e_486 () Int)
(declare-fun e_488 () Int)
(declare-fun e_490 () Int)
(declare-fun e_494 () Int)
(declare-fun e_496 () Int)
(declare-fun e_498 () Int)
(declare-fun e_500 () Int)
(declare-fun e_502 () Int)
(declare-fun e_504 () Int)
(declare-fun e_506 () Int)
(declare-fun e_508 () Int)
(declare-fun e_511 () Int)
(declare-fun e_512 () Int)
(declare-fun i_510 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun i8 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_455 (store a1 i4 e_454)))
(assert (= a_457 (store a_455 i7 e_456)))
(assert (= a_459 (store a_457 i0 e_458)))
(assert (= a_461 (store a_459 i3 e_460)))
(assert (= a_463 (store a_461 i8 e_462)))
(assert (= a_464 (store a_463 i8 e_462)))
(assert (= a_466 (store a_464 i7 e_465)))
(assert (= a_467 (store a_466 i7 e_465)))
(assert (= a_469 (store a_467 i8 e_468)))
(assert (= a_471 (store a_469 i2 e_470)))
(assert (= a_473 (store a_471 i7 e_472)))
(assert (= a_475 (store a_473 i6 e_474)))
(assert (= a_477 (store a_475 i7 e_476)))
(assert (= a_479 (store a_477 i2 e_478)))
(assert (= a_481 (store a_479 i4 e_480)))
(assert (= a_483 (store a_481 i0 e_482)))
(assert (= a_485 (store a_483 i6 e_484)))
(assert (= a_487 (store a_485 i7 e_486)))
(assert (= a_489 (store a_487 i2 e_488)))
(assert (= a_491 (store a_489 i6 e_490)))
(assert (= a_492 (store a_471 i6 e_474)))
(assert (= a_493 (store a_492 i7 e_472)))
(assert (= a_495 (store a_493 i2 e_494)))
(assert (= a_497 (store a_495 i7 e_496)))
(assert (= a_499 (store a_497 i0 e_498)))
(assert (= a_501 (store a_499 i4 e_500)))
(assert (= a_503 (store a_501 i7 e_502)))
(assert (= a_505 (store a_503 i6 e_504)))
(assert (= a_507 (store a_505 i6 e_506)))
(assert (= a_509 (store a_507 i3 e_508)))
(assert (= e_454 (select a1 i7)))
(assert (= e_456 (select a1 i4)))
(assert (= e_458 (select a_457 i3)))
(assert (= e_460 (select a_457 i0)))
(assert (= e_462 (select a_461 i8)))
(assert (= e_465 (select a_464 i7)))
(assert (= e_468 (select a_467 i2)))
(assert (= e_470 (select a_467 i8)))
(assert (= e_472 (select a_471 i6)))
(assert (= e_474 (select a_471 i7)))
(assert (= e_476 (select a_475 i2)))
(assert (= e_478 (select a_475 i7)))
(assert (= e_480 (select a_479 i0)))
(assert (= e_482 (select a_479 i4)))
(assert (= e_484 (select a_483 i7)))
(assert (= e_486 (select a_483 i6)))
(assert (= e_488 (select a_487 i6)))
(assert (= e_490 (select a_487 i2)))
(assert (= e_494 (select a_493 i7)))
(assert (= e_496 (select a_493 i2)))
(assert (= e_498 (select a_497 i4)))
(assert (= e_500 (select a_497 i0)))
(assert (= e_502 (select a_501 i6)))
(assert (= e_504 (select a_501 i7)))
(assert (= e_506 (select a_505 i3)))
(assert (= e_508 (select a_505 i6)))
(assert (= e_511 (select a_491 i_510)))
(assert (= e_512 (select a_509 i_510)))
(assert (= i_510 (sk a_491 a_509)))
(assert (not (= e_511 e_512)))
(check-sat)
(exit)
