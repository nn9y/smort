(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_808 () (Array Int Int))
(declare-fun a_810 () (Array Int Int))
(declare-fun a_812 () (Array Int Int))
(declare-fun a_814 () (Array Int Int))
(declare-fun a_816 () (Array Int Int))
(declare-fun a_818 () (Array Int Int))
(declare-fun a_820 () (Array Int Int))
(declare-fun a_822 () (Array Int Int))
(declare-fun a_824 () (Array Int Int))
(declare-fun a_826 () (Array Int Int))
(declare-fun a_828 () (Array Int Int))
(declare-fun a_829 () (Array Int Int))
(declare-fun a_831 () (Array Int Int))
(declare-fun a_832 () (Array Int Int))
(declare-fun a_834 () (Array Int Int))
(declare-fun a_836 () (Array Int Int))
(declare-fun a_837 () (Array Int Int))
(declare-fun a_838 () (Array Int Int))
(declare-fun a_840 () (Array Int Int))
(declare-fun a_842 () (Array Int Int))
(declare-fun a_844 () (Array Int Int))
(declare-fun a_846 () (Array Int Int))
(declare-fun a_848 () (Array Int Int))
(declare-fun a_850 () (Array Int Int))
(declare-fun a_852 () (Array Int Int))
(declare-fun a_853 () (Array Int Int))
(declare-fun a_855 () (Array Int Int))
(declare-fun a_856 () (Array Int Int))
(declare-fun a_858 () (Array Int Int))
(declare-fun a_860 () (Array Int Int))
(declare-fun e_807 () Int)
(declare-fun e_809 () Int)
(declare-fun e_811 () Int)
(declare-fun e_813 () Int)
(declare-fun e_815 () Int)
(declare-fun e_817 () Int)
(declare-fun e_819 () Int)
(declare-fun e_821 () Int)
(declare-fun e_823 () Int)
(declare-fun e_825 () Int)
(declare-fun e_827 () Int)
(declare-fun e_830 () Int)
(declare-fun e_833 () Int)
(declare-fun e_835 () Int)
(declare-fun e_839 () Int)
(declare-fun e_841 () Int)
(declare-fun e_843 () Int)
(declare-fun e_845 () Int)
(declare-fun e_847 () Int)
(declare-fun e_849 () Int)
(declare-fun e_851 () Int)
(declare-fun e_854 () Int)
(declare-fun e_857 () Int)
(declare-fun e_859 () Int)
(declare-fun e_862 () Int)
(declare-fun e_863 () Int)
(declare-fun i_861 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun i4 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun i7 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_808 (store a1 i5 e_807)))
(assert (= a_810 (store a_808 i0 e_809)))
(assert (= a_812 (store a_810 i5 e_811)))
(assert (= a_814 (store a_812 i6 e_813)))
(assert (= a_816 (store a_814 i5 e_815)))
(assert (= a_818 (store a_816 i3 e_817)))
(assert (= a_820 (store a_818 i1 e_819)))
(assert (= a_822 (store a_820 i7 e_821)))
(assert (= a_824 (store a_822 i4 e_823)))
(assert (= a_826 (store a_824 i0 e_825)))
(assert (= a_828 (store a_826 i1 e_827)))
(assert (= a_829 (store a_828 i1 e_827)))
(assert (= a_831 (store a_829 i4 e_830)))
(assert (= a_832 (store a_831 i4 e_830)))
(assert (= a_834 (store a_832 i5 e_833)))
(assert (= a_836 (store a_834 i2 e_835)))
(assert (= a_837 (store a_810 i6 e_813)))
(assert (= a_838 (store a_837 i5 e_811)))
(assert (= a_840 (store a_838 i3 e_839)))
(assert (= a_842 (store a_840 i5 e_841)))
(assert (= a_844 (store a_842 i7 e_843)))
(assert (= a_846 (store a_844 i1 e_845)))
(assert (= a_848 (store a_846 i4 e_847)))
(assert (= a_850 (store a_848 i0 e_849)))
(assert (= a_852 (store a_850 i1 e_851)))
(assert (= a_853 (store a_852 i1 e_851)))
(assert (= a_855 (store a_853 i4 e_854)))
(assert (= a_856 (store a_855 i4 e_854)))
(assert (= a_858 (store a_856 i3 e_857)))
(assert (= a_860 (store a_858 i5 e_859)))
(assert (= e_807 (select a1 i0)))
(assert (= e_809 (select a1 i5)))
(assert (= e_811 (select a_810 i6)))
(assert (= e_813 (select a_810 i5)))
(assert (= e_815 (select a_814 i3)))
(assert (= e_817 (select a_814 i5)))
(assert (= e_819 (select a_818 i7)))
(assert (= e_821 (select a_818 i1)))
(assert (= e_823 (select a_822 i0)))
(assert (= e_825 (select a_822 i4)))
(assert (= e_827 (select a_826 i1)))
(assert (= e_830 (select a_829 i4)))
(assert (= e_833 (select a_832 i2)))
(assert (= e_835 (select a_832 i5)))
(assert (= e_839 (select a_838 i5)))
(assert (= e_841 (select a_838 i3)))
(assert (= e_843 (select a_842 i1)))
(assert (= e_845 (select a_842 i7)))
(assert (= e_847 (select a_846 i0)))
(assert (= e_849 (select a_846 i4)))
(assert (= e_851 (select a_850 i1)))
(assert (= e_854 (select a_853 i4)))
(assert (= e_857 (select a_856 i5)))
(assert (= e_859 (select a_856 i3)))
(assert (= e_862 (select a_836 i_861)))
(assert (= e_863 (select a_860 i_861)))
(assert (= i_861 (sk a_836 a_860)))
(assert (not (= e_862 e_863)))
(check-sat)
(exit)
