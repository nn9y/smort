(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_56 () (Array Int Int))
(declare-fun a_57 () (Array Int Int))
(declare-fun a_59 () (Array Int Int))
(declare-fun a_61 () (Array Int Int))
(declare-fun a_63 () (Array Int Int))
(declare-fun a_65 () (Array Int Int))
(declare-fun a_66 () (Array Int Int))
(declare-fun a_67 () (Array Int Int))
(declare-fun e_55 () Int)
(declare-fun e_58 () Int)
(declare-fun e_60 () Int)
(declare-fun e_62 () Int)
(declare-fun e_64 () Int)
(declare-fun e_69 () Int)
(declare-fun e_70 () Int)
(declare-fun i_68 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun i2 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_56 (store a1 i0 e_55)))
(assert (= a_57 (store a_56 i0 e_55)))
(assert (= a_59 (store a_57 i1 e_58)))
(assert (= a_61 (store a_59 i2 e_60)))
(assert (= a_63 (store a_61 i1 e_62)))
(assert (= a_65 (store a_63 i2 e_64)))
(assert (= a_66 (store a_61 i2 e_62)))
(assert (= a_67 (store a_66 i2 e_62)))
(assert (= e_55 (select a1 i0)))
(assert (= e_58 (select a_57 i2)))
(assert (= e_60 (select a_57 i1)))
(assert (= e_62 (select a_61 i2)))
(assert (= e_64 (select a_61 i1)))
(assert (= e_69 (select a_65 i_68)))
(assert (= e_70 (select a_67 i_68)))
(assert (= i_68 (sk a_65 a_67)))
(assert (not (= e_69 e_70)))
(check-sat)
(exit)
