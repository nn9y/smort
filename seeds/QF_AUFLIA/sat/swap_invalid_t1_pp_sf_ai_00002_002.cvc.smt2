(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_100 () (Array Int Int))
(declare-fun a_102 () (Array Int Int))
(declare-fun a_104 () (Array Int Int))
(declare-fun a_93 () (Array Int Int))
(declare-fun a_95 () (Array Int Int))
(declare-fun a_97 () (Array Int Int))
(declare-fun a_98 () (Array Int Int))
(declare-fun a_99 () (Array Int Int))
(declare-fun e_101 () Int)
(declare-fun e_103 () Int)
(declare-fun e_106 () Int)
(declare-fun e_107 () Int)
(declare-fun e_92 () Int)
(declare-fun e_94 () Int)
(declare-fun e_96 () Int)
(declare-fun i_105 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun i0 () Int)
(declare-fun i1 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_100 (store a_99 i1 e_92)))
(assert (= a_102 (store a_100 i0 e_101)))
(assert (= a_104 (store a_102 i1 e_103)))
(assert (= a_93 (store a1 i1 e_92)))
(assert (= a_95 (store a_93 i0 e_94)))
(assert (= a_97 (store a_95 i1 e_96)))
(assert (= a_98 (store a_97 i1 e_96)))
(assert (= a_99 (store a1 i0 e_94)))
(assert (= e_101 (select a_100 i1)))
(assert (= e_103 (select a_100 i0)))
(assert (= e_106 (select a_98 i_105)))
(assert (= e_107 (select a_104 i_105)))
(assert (= e_92 (select a1 i0)))
(assert (= e_94 (select a1 i1)))
(assert (= e_96 (select a_95 i1)))
(assert (= i_105 (sk a_98 a_104)))
(assert (not (= e_106 e_107)))
(check-sat)
(exit)
