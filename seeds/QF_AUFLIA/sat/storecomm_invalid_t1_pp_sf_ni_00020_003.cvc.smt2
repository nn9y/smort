(set-info :smt-lib-version 2.6)
(set-logic QF_AUFLIA)
(set-info :source |
Benchmarks used in the followin paper:
Big proof engines as little proof engines: new results on rewrite-based satisfiability procedure
Alessandro Armando, Maria Paola Bonacina, Silvio Ranise, Stephan Schulz. 
PDPAR'05
http://www.ai.dist.unige.it/pdpar05/


|)
(set-info :category "crafted")
(set-info :status sat)
(declare-fun a_514 () (Array Int Int))
(declare-fun a_515 () (Array Int Int))
(declare-fun a_516 () (Array Int Int))
(declare-fun a_517 () (Array Int Int))
(declare-fun a_518 () (Array Int Int))
(declare-fun a_519 () (Array Int Int))
(declare-fun a_520 () (Array Int Int))
(declare-fun a_521 () (Array Int Int))
(declare-fun a_522 () (Array Int Int))
(declare-fun a_523 () (Array Int Int))
(declare-fun a_524 () (Array Int Int))
(declare-fun a_525 () (Array Int Int))
(declare-fun a_526 () (Array Int Int))
(declare-fun a_527 () (Array Int Int))
(declare-fun a_528 () (Array Int Int))
(declare-fun a_529 () (Array Int Int))
(declare-fun a_530 () (Array Int Int))
(declare-fun a_531 () (Array Int Int))
(declare-fun a_532 () (Array Int Int))
(declare-fun a_533 () (Array Int Int))
(declare-fun a_534 () (Array Int Int))
(declare-fun a_535 () (Array Int Int))
(declare-fun a_536 () (Array Int Int))
(declare-fun a_537 () (Array Int Int))
(declare-fun a_538 () (Array Int Int))
(declare-fun a_539 () (Array Int Int))
(declare-fun a_540 () (Array Int Int))
(declare-fun a_541 () (Array Int Int))
(declare-fun a_542 () (Array Int Int))
(declare-fun a_543 () (Array Int Int))
(declare-fun a_544 () (Array Int Int))
(declare-fun a_545 () (Array Int Int))
(declare-fun a_546 () (Array Int Int))
(declare-fun a_547 () (Array Int Int))
(declare-fun a_548 () (Array Int Int))
(declare-fun a_549 () (Array Int Int))
(declare-fun a_550 () (Array Int Int))
(declare-fun a_551 () (Array Int Int))
(declare-fun a_552 () (Array Int Int))
(declare-fun a_553 () (Array Int Int))
(declare-fun e_555 () Int)
(declare-fun e_556 () Int)
(declare-fun i_554 () Int)
(declare-fun a1 () (Array Int Int))
(declare-fun e1 () Int)
(declare-fun e10 () Int)
(declare-fun e11 () Int)
(declare-fun e12 () Int)
(declare-fun e13 () Int)
(declare-fun e14 () Int)
(declare-fun e15 () Int)
(declare-fun e16 () Int)
(declare-fun e17 () Int)
(declare-fun e18 () Int)
(declare-fun e19 () Int)
(declare-fun e2 () Int)
(declare-fun e20 () Int)
(declare-fun e3 () Int)
(declare-fun e4 () Int)
(declare-fun e5 () Int)
(declare-fun e6 () Int)
(declare-fun e7 () Int)
(declare-fun e8 () Int)
(declare-fun e9 () Int)
(declare-fun sk ((Array Int Int) (Array Int Int)) Int)
(assert (= a_514 (store a1 1 e1)))
(assert (= a_515 (store a_514 2 e2)))
(assert (= a_516 (store a_515 3 e3)))
(assert (= a_517 (store a_516 4 e4)))
(assert (= a_518 (store a_517 5 e5)))
(assert (= a_519 (store a_518 6 e6)))
(assert (= a_520 (store a_519 7 e7)))
(assert (= a_521 (store a_520 8 e8)))
(assert (= a_522 (store a_521 9 e9)))
(assert (= a_523 (store a_522 10 e10)))
(assert (= a_524 (store a_523 11 e11)))
(assert (= a_525 (store a_524 12 e12)))
(assert (= a_526 (store a_525 13 e13)))
(assert (= a_527 (store a_526 14 e14)))
(assert (= a_528 (store a_527 15 e15)))
(assert (= a_529 (store a_528 16 e16)))
(assert (= a_530 (store a_529 17 e17)))
(assert (= a_531 (store a_530 18 e18)))
(assert (= a_532 (store a_531 19 e19)))
(assert (= a_533 (store a_532 1 e1)))
(assert (= a_534 (store a1 6 e6)))
(assert (= a_535 (store a_534 16 e16)))
(assert (= a_536 (store a_535 14 e14)))
(assert (= a_537 (store a_536 13 e13)))
(assert (= a_538 (store a_537 2 e2)))
(assert (= a_539 (store a_538 18 e18)))
(assert (= a_540 (store a_539 19 e19)))
(assert (= a_541 (store a_540 12 e12)))
(assert (= a_542 (store a_541 11 e11)))
(assert (= a_543 (store a_542 7 e7)))
(assert (= a_544 (store a_543 4 e4)))
(assert (= a_545 (store a_544 9 e9)))
(assert (= a_546 (store a_545 5 e5)))
(assert (= a_547 (store a_546 20 e20)))
(assert (= a_548 (store a_547 1 e1)))
(assert (= a_549 (store a_548 10 e10)))
(assert (= a_550 (store a_549 15 e15)))
(assert (= a_551 (store a_550 17 e17)))
(assert (= a_552 (store a_551 8 e8)))
(assert (= a_553 (store a_552 3 e3)))
(assert (= e_555 (select a_533 i_554)))
(assert (= e_556 (select a_553 i_554)))
(assert (= i_554 (sk a_533 a_553)))
(assert (not (= e_555 e_556)))
(check-sat)
(exit)
