(set-info :smt-lib-version 2.6)
(set-logic ALIA)
(set-info :source |piVC|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun V_5 () Int)
(declare-fun u () Int)
(declare-fun e () Int)
(declare-fun a () (Array Int Int))
(declare-fun l () Int)
(declare-fun t_1 () Int)
(assert (let ((?v_0 (select a t_1))) (and (and (>= ?v_0 e) (and (not (= ?v_0 e)) (and (and (<= l t_1) (<= t_1 u)) (and (<= l u) (and (and (<= 0 l) (and (< u V_5) (forall ((?V_8 Int)) (=> (and (<= 0 ?V_8) (<= ?V_8 (- V_5 1))) (forall ((?V_9 Int)) (=> (and (<= 0 ?V_9) (<= ?V_9 ?V_8)) (<= (select a ?V_9) (select a ?V_8)))))))) (>= V_5 0)))))) (or (or (> 0 l) (or (>= (- t_1 1) V_5) (exists ((?V_6 Int)) (and (and (<= 0 ?V_6) (<= ?V_6 (- V_5 1))) (exists ((?V_7 Int)) (and (and (<= 0 ?V_7) (<= ?V_7 ?V_6)) (> (select a ?V_7) (select a ?V_6)))))))) (< V_5 0)))))
(check-sat)
(exit)
