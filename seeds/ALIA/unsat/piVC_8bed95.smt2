(set-info :smt-lib-version 2.6)
(set-logic ALIA)
(set-info :source |piVC|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun V_5 () Int)
(declare-fun a () (Array Int Int))
(assert (let ((?v_0 (and true (>= V_5 0))) (?v_1 (- V_5 1))) (and (and ?v_0 ?v_0) (or (> (- 1) ?v_1) (or (>= ?v_1 V_5) (or (and (< ?v_1 (+ ?v_1 1)) (exists ((?V_8 Int)) (and (and (<= 0 ?V_8) (<= ?V_8 ?v_1)) (exists ((?V_9 Int)) (and (and (<= (+ ?v_1 1) ?V_9) (<= ?V_9 ?v_1)) (> (select a ?V_8) (select a ?V_9))))))) (or (exists ((?V_6 Int)) (and (and (<= ?v_1 ?V_6) (<= ?V_6 ?v_1)) (exists ((?V_7 Int)) (and (and (<= ?v_1 ?V_7) (<= ?V_7 ?V_6)) (> (select a ?V_7) (select a ?V_6)))))) (not (= V_5 V_5)))))))))
(check-sat)
(exit)
