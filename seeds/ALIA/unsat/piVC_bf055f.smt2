(set-info :smt-lib-version 2.6)
(set-logic ALIA)
(set-info :source |piVC|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun V_25 () Int)
(declare-fun V_22 () Int)
(declare-fun V_21 () Int)
(declare-fun u_0 () Int)
(declare-fun m_0 () Int)
(declare-fun m () Int)
(declare-fun l_0 () Int)
(declare-fun arr_0 () (Array Int Int))
(declare-fun u () Int)
(declare-fun arr () (Array Int Int))
(declare-fun k () Int)
(declare-fun l () Int)
(declare-fun buf () (Array Int Int))
(assert (let ((?v_0 (<= 0 l_0)) (?v_1 (<= l_0 m_0)) (?v_2 (< m_0 u_0)) (?v_3 (< u_0 V_21)) (?v_4 (>= V_21 0)) (?v_6 (+ l k)) (?v_7 (select buf k)) (?v_8 (= V_25 (+ (- u l) 1))) (?v_9 (= V_22 V_21)) (?v_10 (= l l_0)) (?v_11 (= m m_0)) (?v_12 (= u u_0)) (?v_5 (+ k 1))) (and (and (and (and ?v_0 (and ?v_1 (and ?v_2 (and ?v_3 (and (forall ((?V_42 Int)) (=> (and (<= l_0 ?V_42) (<= ?V_42 m_0)) (forall ((?V_43 Int)) (=> (and (<= l_0 ?V_43) (<= ?V_43 ?V_42)) (<= (select arr_0 ?V_43) (select arr_0 ?V_42)))))) (forall ((?V_40 Int)) (=> (and (<= (+ m_0 1) ?V_40) (<= ?V_40 u_0)) (forall ((?V_41 Int)) (=> (and (<= (+ m_0 1) ?V_41) (<= ?V_41 ?V_40)) (<= (select arr_0 ?V_41) (select arr_0 ?V_40))))))))))) ?v_4) (and (< k V_25) (and (and (forall ((?V_38 Int)) (=> (and (<= 0 ?V_38) (<= ?V_38 (- V_25 1))) (forall ((?V_39 Int)) (=> (and (<= 0 ?V_39) (<= ?V_39 ?V_38)) (<= (select buf ?V_39) (select buf ?V_38)))))) (and (forall ((?V_36 Int)) (=> (and (<= l ?V_36) (<= ?V_36 (- ?v_6 1))) (forall ((?V_37 Int)) (=> (and (<= l ?V_37) (<= ?V_37 ?V_36)) (<= (select arr ?V_37) (select arr ?V_36)))))) (and (or (= k 0) (or (= k V_25) (<= (select arr (- ?v_6 1)) ?v_7))) (and (<= 0 k) (and (<= k V_25) (and ?v_8 (and (forall ((?V_35 Int)) (=> (and (<= 0 ?V_35) (<= ?V_35 (- l 1))) (= (select arr ?V_35) (select arr_0 ?V_35)))) (and (forall ((?V_34 Int)) (=> (and (<= (+ u 1) ?V_34) (<= ?V_34 (- V_22 1))) (= (select arr ?V_34) (select arr_0 ?V_34)))) (and ?v_9 (and ?v_10 (and ?v_11 ?v_12))))))))))) (and (and ?v_0 (and ?v_1 (and ?v_2 (and ?v_3 (and (forall ((?V_32 Int)) (=> (and (<= l_0 ?V_32) (<= ?V_32 m_0)) (forall ((?V_33 Int)) (=> (and (<= l_0 ?V_33) (<= ?V_33 ?V_32)) (<= (select arr_0 ?V_33) (select arr_0 ?V_32)))))) (forall ((?V_30 Int)) (=> (and (<= (+ m_0 1) ?V_30) (<= ?V_30 u_0)) (forall ((?V_31 Int)) (=> (and (<= (+ m_0 1) ?V_31) (<= ?V_31 ?V_30)) (<= (select arr_0 ?V_31) (select arr_0 ?V_30))))))))))) ?v_4)))) (or (exists ((?V_28 Int)) (and (and (<= 0 ?V_28) (<= ?V_28 (- V_25 1))) (exists ((?V_29 Int)) (and (and (<= 0 ?V_29) (<= ?V_29 ?V_28)) (> (select buf ?V_29) (select buf ?V_28)))))) (or (exists ((?V_26 Int)) (and (and (<= l ?V_26) (<= ?V_26 (- (+ l ?v_5) 1))) (exists ((?V_27 Int)) (let ((?v_13 (store arr ?v_6 ?v_7))) (and (and (<= l ?V_27) (<= ?V_27 ?V_26)) (> (select ?v_13 ?V_27) (select ?v_13 ?V_26))))))) (or (and (not (= ?v_5 0)) (and (not (= ?v_5 V_25)) (> (select (store arr ?v_6 ?v_7) (- (+ l ?v_5) 1)) (select buf ?v_5)))) (or (> 0 ?v_5) (or (> ?v_5 V_25) (or (not ?v_8) (or (exists ((?V_24 Int)) (and (and (<= 0 ?V_24) (<= ?V_24 (- l 1))) (not (= (select (store arr ?v_6 ?v_7) ?V_24) (select arr_0 ?V_24))))) (or (exists ((?V_23 Int)) (and (and (<= (+ u 1) ?V_23) (<= ?V_23 (- V_22 1))) (not (= (select (store arr ?v_6 ?v_7) ?V_23) (select arr_0 ?V_23))))) (or (not ?v_9) (or (not ?v_10) (or (not ?v_11) (not ?v_12)))))))))))))))
(check-sat)
(exit)
