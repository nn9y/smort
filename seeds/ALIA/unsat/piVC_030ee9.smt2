(set-info :smt-lib-version 2.6)
(set-logic ALIA)
(set-info :source |piVC|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun V_10 () Int)
(declare-fun V_9 () Int)
(declare-fun i () Int)
(declare-fun a () (Array Int Int))
(declare-fun a_0 () (Array Int Int))
(assert (let ((?v_0 (and true (>= V_9 0)))) (and (and ?v_0 (and (<= i 0) (and (and (<= (- 1) i) (and (< i V_10) (and (or (>= i (+ i 1)) (forall ((?V_13 Int)) (=> (and (<= 0 ?V_13) (<= ?V_13 i)) (forall ((?V_14 Int)) (=> (and (<= (+ i 1) ?V_14) (<= ?V_14 (- V_10 1))) (<= (select a ?V_13) (select a ?V_14))))))) (and (forall ((?V_11 Int)) (=> (and (<= i ?V_11) (<= ?V_11 (- V_10 1))) (forall ((?V_12 Int)) (=> (and (<= i ?V_12) (<= ?V_12 ?V_11)) (<= (select a ?V_12) (select a ?V_11)))))) (= V_10 V_9))))) ?v_0))) (exists ((?V_7 Int)) (and (and (<= 0 ?V_7) (<= ?V_7 (- V_9 1))) (exists ((?V_8 Int)) (and (and (<= 0 ?V_8) (<= ?V_8 ?V_7)) (> (select a ?V_8) (select a ?V_7)))))))))
(check-sat)
(exit)
