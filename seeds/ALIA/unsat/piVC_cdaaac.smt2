(set-info :smt-lib-version 2.6)
(set-logic ALIA)
(set-info :source |piVC|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun V_18 () Int)
(declare-fun V_16 () Int)
(declare-fun buf () (Array Int Int))
(declare-fun arr () (Array Int Int))
(declare-fun u () Int)
(declare-fun m () Int)
(declare-fun l () Int)
(assert (let ((?v_0 (<= 0 l)) (?v_1 (<= l m)) (?v_2 (< m u)) (?v_3 (< u V_16)) (?v_5 (+ m 1)) (?v_4 (>= V_16 0)) (?v_8 (= V_18 (+ (- u l) 1))) (?v_6 (not (= 0 0))) (?v_7 (select buf (- 0 1)))) (and (and (and (and ?v_0 (and ?v_1 (and ?v_2 (and ?v_3 (and (forall ((?V_31 Int)) (=> (and (<= l ?V_31) (<= ?V_31 m)) (forall ((?V_32 Int)) (=> (and (<= l ?V_32) (<= ?V_32 ?V_31)) (<= (select arr ?V_32) (select arr ?V_31)))))) (forall ((?V_29 Int)) (=> (and (<= ?v_5 ?V_29) (<= ?V_29 u)) (forall ((?V_30 Int)) (=> (and (<= ?v_5 ?V_30) (<= ?V_30 ?V_29)) (<= (select arr ?V_30) (select arr ?V_29))))))))))) ?v_4) (and ?v_8 (and (and ?v_0 (and ?v_1 (and ?v_2 (and ?v_3 (and (forall ((?V_27 Int)) (=> (and (<= l ?V_27) (<= ?V_27 m)) (forall ((?V_28 Int)) (=> (and (<= l ?V_28) (<= ?V_28 ?V_27)) (<= (select arr ?V_28) (select arr ?V_27)))))) (forall ((?V_25 Int)) (=> (and (<= ?v_5 ?V_25) (<= ?V_25 u)) (forall ((?V_26 Int)) (=> (and (<= ?v_5 ?V_26) (<= ?V_26 ?V_25)) (<= (select arr ?V_26) (select arr ?V_25))))))))))) ?v_4))) (or (> l l) (or (> l ?v_5) (or (> ?v_5 ?v_5) (or (> ?v_5 (+ u 1)) (or (not (= 0 (+ (- l l) (- ?v_5 ?v_5)))) (or (exists ((?V_23 Int)) (and (and (<= l ?V_23) (<= ?V_23 m)) (exists ((?V_24 Int)) (and (and (<= l ?V_24) (<= ?V_24 ?V_23)) (> (select arr ?V_24) (select arr ?V_23)))))) (or (exists ((?V_21 Int)) (and (and (<= ?v_5 ?V_21) (<= ?V_21 u)) (exists ((?V_22 Int)) (and (and (<= ?v_5 ?V_22) (<= ?V_22 ?V_21)) (> (select arr ?V_22) (select arr ?V_21)))))) (or (and (not (= 0 V_18)) (and (> l m) (> ?v_5 u))) (or (and ?v_6 (and ?v_1 (> ?v_7 (select arr l)))) (or (and ?v_6 (and (<= ?v_5 u) (> ?v_7 (select arr ?v_5)))) (or (exists ((?V_19 Int)) (and (and (<= 0 ?V_19) (<= ?V_19 (- 0 1))) (exists ((?V_20 Int)) (and (and (<= 0 ?V_20) (<= ?V_20 ?V_19)) (> (select buf ?V_20) (select buf ?V_19)))))) (or (not ?v_8) (or (exists ((?V_17 Int)) (let ((?v_9 (select arr ?V_17))) (and (and (<= 0 ?V_17) (<= ?V_17 (- V_16 1))) (not (= ?v_9 ?v_9))))) (or (not (= V_16 V_16)) (or (not (= l l)) (or (not (= m m)) (not (= u u)))))))))))))))))))))
(check-sat)
(exit)
