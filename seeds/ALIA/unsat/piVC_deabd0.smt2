(set-info :smt-lib-version 2.6)
(set-logic ALIA)
(set-info :source |piVC|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun V_6 () Int)
(declare-fun u () Int)
(declare-fun l () Int)
(declare-fun arr () (Array Int Int))
(assert (let ((?v_0 (and (and (<= 0 l) (< u V_6)) (>= V_6 0)))) (and (and ?v_0 (and (>= l u) ?v_0)) (or (exists ((?V_8 Int)) (and (and (<= l ?V_8) (<= ?V_8 u)) (exists ((?V_9 Int)) (and (and (<= l ?V_9) (<= ?V_9 ?V_8)) (> (select arr ?V_9) (select arr ?V_8)))))) (or (not (= V_6 V_6)) (or (exists ((?V_7 Int)) (let ((?v_1 (select arr ?V_7))) (and (and (<= 0 ?V_7) (<= ?V_7 (- l 1))) (not (= ?v_1 ?v_1))))) (exists ((?V_5 Int)) (let ((?v_2 (select arr ?V_5))) (and (and (<= (+ u 1) ?V_5) (<= ?V_5 (- V_6 1))) (not (= ?v_2 ?v_2)))))))))))
(check-sat)
(exit)
