(seed s unsat)

(morph m unsat)

(notation x s)
(notation y s)
(notation a :var :gen)

(subst-template  ((x Int) (y Int)) (((not (< x y)) (not (not (< x y))))))
(subst-template  ((x Int) (y Int)) (((not (< x y)) (not (not (< x y))))))
(subst-template  ((x Int) (y Int) (a Int)) (((not (<= x y)) (not (not (<= x y)))) (a (> a 0))))
(subst-template  ((x Int) (y Int)) (((not (> x y)) (not (not (> x y))))))
(subst-template  ((x Int) (y Int)) (((not (> x y)) (not (not (> x y))))))
(subst-template  ((x Int) (y Int) (a Int)) (((not (>= x y)) (not (not (>= x y)))) (a (> a 0))))
(subst-template  ((x Int) (y Int)) (((not (= x y)) (not (not (= x y))))))
(subst-template  ((x Int) (y Int)) (((not (= x y)) (not (not (= x y))))))
(subst-template  ((x Int) (y Int) (a Int)) (((not (distinct x y)) (not (not (distinct x y))))))
(subst-template  ((x Int) (y Int) (a Int)) (((< x y) (<= (+ x a) y)) (a (> a 0))))
(subst-template  ((x Int) (y Int)) (((<= x y) (= x y))))
(subst-template  ((x Int) (y Int) (a Int)) (((<= x y) (< (+ x a) y)) (a (>= a 0))))
(subst-template  ((x Int) (y Int) (a Int)) (((> x y) (>= x (+ y a))) (a (> a 0))))
(subst-template  ((x Int) (y Int)) (((>= x y) (= x y))))
(subst-template  ((x Int) (y Int) (a Int)) (((>= x y) (> x (+ y a))) (a (>= a 0))))
(subst-template  ((x Int) (y Int) (a Int)) (((= x y) (and (>= x a) (<= x a) (>= y a) (<= y a)))))
(subst-template  ((x Int) (y Int) (a Int)) (((distinct x y) (> x y))))
(subst-template  ((x Int) (y Int) (a Int)) (((distinct x y) (< x y))))
(subst-template  ((x Real) (y Real)) (((not (< x y)) (not (not (< x y))))))
(subst-template  ((x Real) (y Real)) (((not (< x y)) (not (not (< x y))))))
(subst-template  ((x Real) (y Real) (a Real)) (((not (<= x y)) (not (not (<= x y)))) (a (> a 0))))
(subst-template  ((x Real) (y Real)) (((not (> x y)) (not (not (> x y))))))
(subst-template  ((x Real) (y Real)) (((not (> x y)) (not (not (> x y))))))
(subst-template  ((x Real) (y Real) (a Real)) (((not (>= x y)) (not (not (>= x y)))) (a (> a 0))))
(subst-template  ((x Real) (y Real)) (((not (= x y)) (not (not (= x y))))))
(subst-template  ((x Real) (y Real)) (((not (= x y)) (not (not (= x y))))))
(subst-template  ((x Real) (y Real) (a Real)) (((not (distinct x y)) (not (not (distinct x y))))))
(subst-template  ((x Real) (y Real) (a Real)) (((< x y) (<= (+ x a) y)) (a (> a 0))))
(subst-template  ((x Real) (y Real)) (((<= x y) (= x y))))
(subst-template  ((x Real) (y Real) (a Real)) (((<= x y) (< (+ x a) y)) (a (>= a 0))))
(subst-template  ((x Real) (y Real) (a Real)) (((> x y) (>= x (+ y a))) (a (> a 0))))
(subst-template  ((x Real) (y Real)) (((>= x y) (= x y))))
(subst-template  ((x Real) (y Real) (a Real)) (((>= x y) (> x (+ y a))) (a (>= a 0))))
(subst-template  ((x Real) (y Real) (a Real)) (((= x y) (and (>= x a) (<= x a) (>= y a) (<= y a)))))
(subst-template  ((x Real) (y Real) (a Real)) (((distinct x y) (> x y))))
(subst-template  ((x Real) (y Real) (a Real)) (((distinct x y) (< x y))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((not (bvult x y)) (not (not (bvult x y))))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((not (bvult x y)) (not (not (bvult x y))))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((not (bvugt x y)) (not (not (bvugt x y))))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((not (bvugt x y)) (not (not (bvugt x y))))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((not (bvslt x y)) (not (not (bvslt x y))))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((not (bvslt x y)) (not (not (bvslt x y))))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((not (bvsgt x y)) (not (not (bvsgt x y))))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((not (bvsgt x y)) (not (not (bvsgt x y))))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((not (= x y)) (not (not (= x y))))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((not (= x y)) (not (not (= x y))))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1)) (a (_ BitVec & 1 x))) (((not (distinct x y)) (not (not (distinct x y))))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((not (= x y)) (not (not (= x y))))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((not (= x y)) (not (not (= x y))))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((bvule x y) (= x y))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((bvule x y) (bvult x y))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((bvuge x y) (= x y))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((bvuge x y) (bvugt x y))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((bvsle x y) (= x y))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((bvsle x y) (bvslt x y))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((bvsge x y) (= x y))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((bvsge x y) (bvsgt x y))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1)) (a (_ BitVec & 1 x))) (((= x y) (and (bvsle a x) (bvsle x a) (bvsle a y) (bvsle y a)))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((distinct x y) (bvsgt x y))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((distinct x y) (bvslt x y))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1)) (a (_ BitVec & 1 x))) (((= x y) (and (bvule a x) (bvule x a) (bvule a y) (bvule y a)))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((distinct x y) (bvugt x y))))
(subst-template  ((x (_ BitVec @ 1)) (y (_ BitVec @ 1))) (((distinct x y) (bvult x y))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2))) (((not (fp.lt x y)) (not (not (fp.lt x y))))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2))) (((not (fp.lt x y)) (not (not (fp.lt x y))))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2))) (((not (fp.gt x y)) (not (not (fp.gt x y))))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2))) (((not (fp.gt x y)) (not (not (fp.gt x y))))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2))) (((not (fp.eq x y)) (not (not (fp.eq x y))))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2))) (((not (fp.eq x y)) (not (not (fp.eq x y))))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2)) (a (_ FloatingPoint & 2 x))) (((not (distinct x y)) (not (not (distinct x y))))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2))) (((fp.leq x y) (fp.eq x y))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2))) (((fp.leq x y) (fp.lt x y))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2))) (((fp.geq x y) (fp.eq x y))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2))) (((fp.geq x y) (fp.gt x y))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2)) (a (_ FloatingPoint & 2 x))) (((fp.eq x y) (and (fp.leq a x) (fp.leq x a) (fp.leq a y) (fp.leq y a)))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2))) (((distinct x y) (fp.gt x y))))
(subst-template  ((x (_ FloatingPoint @ 2)) (y (_ FloatingPoint @ 2))) (((distinct x y) (fp.lt x y))))
(subst-template  ((x String) (y String)) (((not (str.< x y)) (not (not (str.< x y))))))
(subst-template  ((x String) (y String)) (((not (str.< x y)) (not (not (str.< x y))))))
(subst-template  ((x String) (y String) (a String)) (((not (str.<= x y)) (not (not (str.<= x y)))) (a (> (str.len a) 0))))
(subst-template  ((x String) (y String)) (((not (str.prefixof x y)) (not (not (str.prefixof x y))))))
(subst-template  ((x String) (y String)) (((not (str.prefixof x y)) (not (not (str.prefixof x y))))))
(subst-template  ((x String) (y String)) (((not (str.suffixof x y)) (not (not (str.suffixof x y))))))
(subst-template  ((x String) (y String)) (((not (str.suffixof x y)) (not (not (str.suffixof x y))))))
(subst-template  ((x String) (y String)) (((not (str.contains x y)) (not (not (str.contains x y))))))
(subst-template  ((x String) (y String)) (((not (= x y)) (not (not (= x y))))))
(subst-template  ((x String) (y String)) (((not (= x y)) (not (not (= x y))))))
(subst-template  ((x String) (y String)) (((not (= x y)) (not (not (= x y))))))
(subst-template  ((x String) (y String)) (((not (= x y)) (not (not (= x y))))))
(subst-template  ((x String) (y String) (a String)) (((not (distinct x y)) (not (not (distinct x y))))))
(subst-template  ((x String) (y String) (a String)) (((str.< x y) (str.<= (str.++ x a) y)) (a (> (str.len a) 0))))
(subst-template  ((x String) (y String)) (((str.<= x y) (= x y))))
(subst-template  ((x String) (y String)) (((str.<= x y) (str.< x y))))
(subst-template  ((x String) (y String) (a String)) (((str.prefixof x y) (= y (str.++ x a))) (a (>= (str.len a) 0))))
(subst-template  ((x String) (y String) (a String)) (((str.prefixof x y) (= y (str.++ a x))) (a (>= (str.len a) 0))))
(subst-template  ((x String) (y String)) (((str.contains x y) (str.suffixof y x))))
(subst-template  ((x String) (y String)) (((str.contains x y) (str.prefixof y x))))
(subst-template  ((x String) (y String) (a String)) (((= x y) (and (str.suffixof x a) (str.prefixof x a) (str.suffixof y a) (str.prefixof y a)))))
(subst-template  ((x String) (y String) (a String)) (((distinct x y) (str.< x y))))
(subst-template  ((x String) (y String) (a String)) (((distinct x y) (str.< y x))))

(method "live_predicate_injection_under" c :seed)

(fuse c)