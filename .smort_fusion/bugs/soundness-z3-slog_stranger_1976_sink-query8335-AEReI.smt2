(set-logic ALL)
(declare-const z_random0_0 String)
(declare-const z_random0_1 String)
(declare-const z_random0_2 String)
(declare-const z_random0_3 String)
(declare-const z_random0_4 String)
(declare-const z_random1_0 String)
(declare-const z_random1_1 String)
(declare-const z_random1_2 String)
(declare-fun seed0_sigmaStar_1 () String)
(declare-fun seed0_sigmaStar_2 () String)
(declare-fun seed0_literal_3 () String)
(declare-fun seed0_x_4 () String)
(declare-fun seed0_literal_5 () String)
(declare-fun seed0_x_6 () String)
(declare-fun seed1_x () String)
(assert (and (and (= seed0_literal_3 "\u{20}") (= (str.substr z_random1_2 0 (str.len seed0_x_4)) (str.++ seed0_literal_3 (str.substr z_random1_1 0 (str.len seed0_sigmaStar_1)))) (= (str.substr z_random0_1 0 (str.indexof z_random0_1 (str.++ "A" "B") (str.len seed0_literal_5))) "\u{20}\u{5c}\u{6e}") (= (str.substr z_random0_3 0 (str.indexof z_random0_3 (str.++ "A" "B") (str.len seed0_x_6))) (str.++ seed0_x_4 seed0_literal_5)) (str.in_re seed0_x_6 (re.++ (re.* re.allchar ) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar ))))) (and (not (= (str.in_re seed1_x (re.++ (re.* re.allchar ) re.allchar  (re.* re.allchar ) (str.to_re "B") (re.* re.allchar ) (str.to_re (str.++ "A" (str.substr z_random1_2 (str.indexof z_random1_2 (str.++ "C" "B") (str.len seed0_x_4)) (str.len (str.++ "C" "B"))))) (re.* re.allchar ))) (str.in_re (str.substr z_random1_1 (str.indexof z_random1_1 seed1_x (str.len seed0_sigmaStar_1)) (str.len seed1_x)) (re.++ (re.* re.allchar ) re.allchar  (re.* re.allchar ) re.allchar  (re.* re.allchar ) (re.inter re.allchar  (str.to_re "")) (re.* re.allchar ))))) (not (= (str.in_re (str.substr z_random1_0 (str.indexof z_random1_0 seed1_x (str.len seed0_x_4)) (str.len seed1_x)) (re.++ (re.* re.allchar ) re.allchar  (re.* re.allchar ) (str.to_re (str.++ "C" (str.++ "B" (str.substr z_random0_1 (str.len seed0_literal_5) (str.len (str.++ "A" "B")))))) (re.* re.allchar ) re.allchar  (re.* re.allchar ))) (str.in_re seed1_x (re.++ (re.* re.allchar ) re.allchar  (re.* re.allchar ) (str.to_re "C") (re.* re.allchar ) (str.to_re (str.++ "B" (str.substr z_random0_4 (str.len seed0_sigmaStar_1) (str.len (str.++ "A" "B"))))) (re.* re.allchar ))))))))
(check-sat)
(exit)