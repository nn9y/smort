(set-logic ALL)
(declare-const z_random0_0 String)
(declare-const z_random0_1 String)
(declare-const z_random0_2 String)
(declare-const z_random0_3 String)
(declare-const z_random0_4 String)
(declare-const z_random0_5 String)
(declare-const z_random0_6 String)
(declare-const z_random0_7 String)
(declare-const z_random0_8 String)
(declare-const z_random0_9 String)
(declare-const z_random0_10 String)
(declare-const z_random0_11 String)
(declare-const z_random0_12 String)
(declare-const z_random0_13 String)
(declare-const z_random0_14 String)
(declare-const z_random0_15 String)
(declare-const z_random0_16 String)
(declare-const z_random0_17 String)
(declare-const z_random0_18 String)
(declare-const z_random1_0 String)
(declare-const z_random1_1 String)
(declare-const z_random1_2 String)
(declare-const z_random1_3 String)
(declare-const z_random1_4 String)
(declare-const z_random1_5 String)
(declare-const z_random1_6 String)
(declare-const z_random1_7 String)
(declare-const z_random1_8 String)
(declare-const z_random1_9 String)
(declare-const z_random1_10 String)
(declare-const z_random1_11 String)
(declare-const z_random1_12 String)
(declare-const z_random1_13 String)
(declare-const z_random1_14 String)
(declare-const z_random1_15 String)
(declare-const z_random1_16 String)
(declare-const z_random1_17 String)
(declare-const z_random1_18 String)
(declare-const z_random1_19 String)
(declare-const z_random1_20 String)
(declare-const z_random1_21 String)
(declare-const z_random1_22 String)
(declare-fun seed0_sigmaStar_0 () String)
(declare-fun seed0_x_8 () String)
(declare-fun seed0_epsilon () String)
(declare-fun seed0_literal_2 () String)
(declare-fun seed0_literal_1 () String)
(declare-fun seed0_literal_3 () String)
(declare-fun seed0_x_9 () String)
(declare-fun seed1_x () String)
(assert (and (and (= (str.substr z_random1_8 0 (str.len seed0_epsilon)) "") (= (str.substr z_random1_7 0 (str.len seed0_literal_2)) "") (= (str.substr z_random1_16 0 (str.len seed0_literal_1)) "") (or (= (str.substr z_random1_5 0 (str.len seed0_x_8)) (str.substr z_random1_3 0 (str.len seed0_epsilon))) (= (str.substr z_random1_9 0 (str.len seed0_x_8)) (str.substr z_random1_13 0 (str.len seed0_literal_2))) (= (str.substr z_random1_17 0 (str.len seed0_x_8)) (str.substr z_random1_18 0 (str.len seed0_literal_1))) (= (str.substr z_random1_6 0 (str.len seed0_x_8)) (str.substr z_random1_20 0 (str.len seed0_sigmaStar_0)))) (= (str.substr z_random1_22 0 (str.len seed0_literal_3)) "\u{20}\u{20}\u{20}\u{20}") (= (str.substr z_random1_15 0 (str.len seed0_x_9)) (str.++ (str.substr z_random1_12 0 (str.len seed0_x_8)) (str.substr z_random1_14 0 (str.len seed0_literal_3)))) (str.in_re (str.substr z_random1_21 0 (str.len seed0_x_9)) (re.++ (re.* re.allchar ) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar ))))) (not (= (str.in_re (str.substr z_random1_21 (str.indexof z_random1_21 seed1_x (str.len seed0_x_9)) (str.len seed1_x)) (re.++ (re.* re.allchar ) re.allchar  (re.* re.allchar ) (str.to_re (str.substr z_random1_11 (str.indexof z_random1_11 (str.++ "A" "B") (str.len seed0_literal_1)) (str.len (str.++ "A" "B")))) (re.* re.allchar ) (str.to_re (str.substr z_random1_19 (str.indexof z_random1_19 (str.++ "C" "A") (str.len seed0_literal_3)) (str.len (str.++ "C" "A")))) (re.* re.allchar ))) (str.in_re (str.substr z_random1_22 (str.indexof z_random1_22 seed1_x (str.len seed0_literal_3)) (str.len seed1_x)) (re.++ (re.* re.allchar ) re.allchar  (re.* re.allchar ) (str.to_re "A") (re.* re.allchar ) (str.to_re (str.++ "B" (str.substr z_random1_18 (str.indexof z_random1_18 (str.++ "C" "A") (str.len seed0_literal_1)) (str.len (str.++ "C" "A"))))) (re.* re.allchar )))))))
(check-sat)
(exit)