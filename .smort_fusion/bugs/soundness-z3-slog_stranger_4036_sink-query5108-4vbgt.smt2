(set-logic ALL)
(declare-const z_random0_0 String)
(declare-const z_random0_1 String)
(declare-const z_random1_0 String)
(declare-const z_random1_1 String)
(declare-const z_random1_2 String)
(declare-const z_random1_3 String)
(declare-const z_random1_4 String)
(declare-const z_random1_5 String)
(declare-const z_random1_6 String)
(declare-const z_random1_7 String)
(declare-fun seed0_sigmaStar_0 () String)
(declare-fun seed0_literal_1 () String)
(declare-fun seed0_x_2 () String)
(declare-fun seed0_literal_3 () String)
(declare-fun seed0_x_4 () String)
(declare-fun seed1_x () String)
(assert (and (and (= seed0_literal_1 "\u{3c}\u{74}\u{72}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{27}\u{3e}") (= (str.substr z_random0_1 0 (str.indexof z_random0_1 (str.++ "A" "B") (str.len seed0_x_2))) (str.++ (str.substr z_random1_7 0 (str.len seed0_literal_1)) (str.substr z_random1_5 0 (str.len seed0_sigmaStar_0)))) (= seed0_literal_3 "\u{3c}\u{2f}\u{74}\u{64}\u{3e}\u{0d}\u{0a}\u{3c}\u{74}\u{64}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{62}\u{6c}\u{27}\u{3e}\u{3c}\u{73}\u{65}\u{6c}\u{65}\u{63}\u{74}\u{20}\u{6e}\u{61}\u{6d}\u{65}\u{3d}\u{27}\u{6e}\u{65}\u{77}\u{73}\u{5f}\u{73}\u{74}\u{61}\u{72}\u{74}\u{5b}\u{6d}\u{64}\u{61}\u{79}\u{5d}\u{27}\u{20}\u{63}\u{6c}\u{61}\u{73}\u{73}\u{3d}\u{27}\u{74}\u{65}\u{78}\u{74}\u{62}\u{6f}\u{78}\u{27}\u{3e}\u{5c}\u{6e}\u{3c}\u{6f}\u{70}\u{74}\u{69}\u{6f}\u{6e}\u{3e}\u{2d}\u{2d}\u{3c}\u{2f}\u{6f}\u{70}\u{74}\u{69}\u{6f}\u{6e}\u{3e}\u{5c}\u{6e}") (= (str.substr z_random1_3 0 (str.len seed0_x_4)) (str.++ (str.substr z_random1_0 0 (str.len seed0_x_2)) (str.substr z_random1_4 0 (str.len seed0_literal_3)))) (str.in_re seed0_x_4 (re.++ (re.* re.allchar ) (re.++ (str.to_re "\u{5c}\u{3c}\u{53}\u{43}\u{52}\u{49}\u{50}\u{54}") (re.* re.allchar ))))) (and (not (= (str.in_re seed1_x (re.++ (re.* re.allchar ) re.allchar  (re.* re.allchar ) (str.to_re (str.++ "B" (str.substr z_random1_7 (str.indexof z_random1_7 (str.++ "A" "A") (str.len seed0_literal_1)) (str.len (str.++ "A" "A"))))) (re.* re.allchar ) (str.to_re "B") (re.* re.allchar ))) (str.in_re seed1_x (re.++ (re.* re.allchar ) re.allchar  (re.* re.allchar ) (str.to_re "B") (re.* re.allchar ) (str.to_re (str.++ "A" (str.substr z_random1_4 (str.indexof z_random1_4 (str.++ "A" "B") (str.len seed0_literal_3)) (str.len (str.++ "A" "B"))))) (re.* re.allchar ))))) (not (= (str.in_re (str.substr z_random1_5 (str.indexof z_random1_5 seed1_x (str.len seed0_sigmaStar_0)) (str.len seed1_x)) (re.++ (re.* re.allchar ) re.allchar  (re.* re.allchar ) (str.to_re (str.++ "A" (str.++ "A" (str.substr z_random1_3 (str.indexof z_random1_3 (str.++ "B" "A") (str.len seed0_x_4)) (str.len (str.++ "B" "A")))))) (re.* re.allchar ) re.allchar  (re.* re.allchar ))) (str.in_re seed1_x (re.++ (re.* re.allchar ) re.allchar  (re.* re.allchar ) (str.to_re (str.++ "A" (str.substr z_random1_6 (str.indexof z_random1_6 (str.++ "A" "B") (str.len seed0_literal_1)) (str.len (str.++ "A" "B"))))) (re.* re.allchar ) (str.to_re "A") (re.* re.allchar ))))))))
(check-sat)
(exit)