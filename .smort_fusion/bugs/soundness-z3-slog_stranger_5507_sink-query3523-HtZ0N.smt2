(set-logic ALL)
(declare-const z_random0_0 String)
(declare-const z_random1_0 String)
(declare-const z_random1_1 String)
(declare-fun seed0_sigmaStar_0 () String)
(declare-fun seed0_sigmaStar_1 () String)
(declare-fun seed0_sigmaStar_3 () String)
(declare-fun seed0_literal_4 () String)
(declare-fun seed0_x_5 () String)
(declare-fun seed0_literal_7 () String)
(declare-fun seed0_x_8 () String)
(declare-fun seed0_x_11 () String)
(declare-fun seed0_epsilon () String)
(declare-fun seed0_literal_6 () String)
(declare-fun seed0_x_12 () String)
(declare-fun seed0_literal_13 () String)
(declare-fun seed0_x_14 () String)
(declare-fun seed1_x () String)
(assert (and (and (= seed0_literal_4 "\u{2f}") (= seed0_x_5 (str.++ seed0_sigmaStar_3 seed0_literal_4)) (= seed0_literal_7 "\u{69}\u{6e}\u{63}\u{6c}\u{75}\u{64}\u{65}\u{2f}\u{6c}\u{61}\u{6e}\u{67}\u{2f}") (= seed0_x_8 (str.++ seed0_x_5 seed0_literal_7)) (= seed0_epsilon "") (= seed0_literal_6 "") (or (= seed0_x_11 seed0_epsilon) (= seed0_x_11 seed0_sigmaStar_1) (= seed0_x_11 seed0_sigmaStar_0) (= seed0_x_11 (str.substr z_random1_1 0 (str.len seed0_literal_6)))) (= (str.substr z_random1_0 0 (str.len seed0_x_12)) (str.++ seed0_x_8 seed0_x_11)) (= seed0_literal_13 "\u{2f}\u{73}\u{65}\u{6e}\u{64}\u{63}\u{61}\u{72}\u{64}\u{2e}\u{6c}\u{61}\u{6e}\u{67}\u{2e}\u{70}\u{68}\u{70}") (= seed0_x_14 (str.++ (str.substr z_random0_0 0 (str.indexof z_random0_0 seed1_x (str.len seed0_x_12))) seed0_literal_13)) (str.in_re seed0_x_14 (re.++ (re.* re.allchar ) (re.++ (str.to_re "\u{2f}\u{65}\u{76}\u{69}\u{6c}") (re.* re.allchar ))))) (not (= (str.in_re seed1_x (re.++ (re.* re.allchar ) re.allchar  (re.* re.allchar ) (str.to_re (str.++ "C" (str.substr z_random1_1 (str.indexof z_random1_1 (str.++ "B" "C") (str.len seed0_literal_6)) (str.len (str.++ "B" "C"))))) (re.* re.allchar ) (str.to_re "B") (re.* re.allchar ))) (str.in_re (str.substr z_random0_0 (str.len seed0_x_12) (str.len seed1_x)) (re.++ (re.* re.allchar ) re.allchar  (re.* re.allchar ) (str.to_re "C") (re.* re.allchar ) (str.to_re (str.++ "B" (str.++ "C" "B"))) (re.* re.allchar )))))))
(check-sat)
(exit)