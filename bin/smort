#! /usr/bin/env python3

import os
import sys
import signal
import inspect

from smort.src.interface.process_args import process
from smort.src.sys.errors import raise_runtime_error
from smort.src.interface.ArgParser import build_argparser
from smort.src.sys.exitcodes import OK_BUGS, OK_NOBUGS, ERR_USAGE, ERR_INTERNAL
from smort.src.interface.info import *
from smort.src.sys.utils import stats_control_c, silent_control_c 
from smort.src.core.Tester import Tester


def main():
    current_dir = os.getcwd()
    arg_parser = build_argparser(current_dir)

    if len(sys.argv) == 1:
        print(f"{header}\n\n{usage}\n\n{introduction}\nFor detailed usage information: {sys.argv[0]} -h or --help", flush=True)
        exit(ERR_USAGE)
    else:
        args = process(arg_parser)
        try:
            tester = Tester(args)

            if not args.quiet:
                signal.signal(signal.SIGINT, stats_control_c)
            else:
                signal.signal(signal.SIGINT, silent_control_c)

            tester.run()
            # TODO
            # exit

        except Exception as e:
            trace = inspect.trace()
            raise_runtime_error(trace, sys.argv, e)
            exit(ERR_INTERNAL)


if __name__ == "__main__":
    main()
